{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/applicationinsights-common/bundle/applicationinsights-common.js","webpack:///./node_modules/applicationinsights-common/bundle/Enums.js","webpack:///./node_modules/applicationinsights-common/bundle/Util.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/DataSanitizer.js","webpack:///./node_modules/applicationinsights-core-js/bundle/applicationinsights-core-js.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Domain.js","webpack:///./node_modules/applicationinsights-common/bundle/Logging.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/PageViewData.js","webpack:///./node_modules/applicationinsights-common/bundle/RequestResponseHeaders.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Data.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Base.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/EventData.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK.Interfaces/IChannelControls.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK.Enums/EventsDiscardedReason.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/CoreUtils.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/NotificationManager.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/applicationinsights-channel-js.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/applicationinsights-analytics-js.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/ApplicationInsights.js","webpack:///../../Init.ts","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Exception.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/StackFrame.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/ExceptionData.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/ExceptionDetails.js","webpack:///./node_modules/applicationinsights-common/bundle/Constants.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/Envelope.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Envelope.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Event.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Metric.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/MetricData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/DataPoint.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/DataPoint.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/DataPointType.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/PageView.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/RemoteDependencyData.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/RemoteDependencyData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Trace.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/MessageData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/PageViewPerformance.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/PageViewPerfData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/Data.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/SeverityLevel.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/ContextTagKeys.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/AppInsightsCore.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/Sender.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/MetricValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/SendBuffer.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/EnvelopeCreator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/EventValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/TraceValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/ExceptionValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/PageViewPerformanceValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/PageViewValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/RemoteDepdencyValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/Serializer.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Telemetry/PageViewManager.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/TelemetryContext.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Context/Location.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Context/Application.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Context/Device.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Context/Internal.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Context/Operation.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Context/Sample.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/SamplingScoreGenerator.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/HashCodeScoreGenerator.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Context/User.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Context/Session.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Extensions/ajax/ajaxUtils.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/TelemetryItemCreator.js","webpack:///../../Initialization.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_ARRAY__","undefined","__WEBPACK_AMD_DEFINE_RESULT__","require","Util_1","Enums_1","Logging_1","RequestResponseHeaders_1","Constants_1","Data_1","Base_1","Envelope_1","Event_1","Exception_1","Metric_1","PageView_1","PageViewData_1","RemoteDependencyData_1","Trace_1","PageViewPerformance_1","Data_2","SeverityLevel_1","ContextTagKeys_1","DataSanitizer_1","Util","CorrelationIdHelper","UrlHelper","_InternalMessageId","LoggingSeverity","FieldType","_InternalLogging","_InternalLogMessage","RequestHeaders","DisabledPropertyName","AIData","Data","AIBase","Base","Envelope","Event","Exception","Metric","PageView","PageViewData","RemoteDependencyData","Trace","PageViewPerformance","SeverityLevel","ContextTagKeys","DataSanitizer","apply","StorageType","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","LocalStorage","storageType","fail","uid","storage","Date","localStorage","sessionStorage","setItem","getItem","removeItem","exception","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","e","throwInternal","WARNING","BrowserCannotReadLocalStorage","getExceptionName","dump","setStorage","data","BrowserCannotWriteLocalStorage","removeStorage","BrowserFailedRemovalFromLocalStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","push","getSessionStorage","BrowserCannotReadSessionStorage","setSessionStorage","BrowserCannotWriteSessionStorage","removeSessionStorage","BrowserFailedRemovalFromSessionStorage","disableCookies","_canUseCookies","canUseCookies","document","cookie","CannotAccessCookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","str","defaultValue","toString","getCookie","length","cookieName","cookies","split","trim","substring","deleteCookie","replace","newId","result","random","Math","charAt","floor","isArray","obj","isError","isDate","toISOStringForIE8","date","toISOString","pad","number","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","message","url","lineNumber","columnNumber","error","objectTypeDump","propertyValueDump","JSON","stringify","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","NotSpecified","parseUrl","htmlAnchorElement","createElement","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","canIncludeCorrelationHeader","config","requestUrl","currentHost","disableCorrelationHeaders","requestHost","host","enableCorsCorrelation","excludedDomains","correlationHeaderExcludedDomains","RegExp","test","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","requestContextTargetKey","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","pathName","target","parsedUrl","sanitizeString","sanitizeKeyAndAddUniqueness","map","origLength","field","sanitizeKey","uniqueField","MAX_NAME_LENGTH","padNumber","NameTooLong","maxLength","MAX_STRING_LENGTH","StringValueTooLong","sanitizeUrl","sanitizeInput","MAX_URL_LENGTH","UrlTooLong","sanitizeMessage","MAX_MESSAGE_LENGTH","MessageTruncated","sanitizeException","MAX_EXCEPTION_LENGTH","ExceptionTruncated","sanitizeProperties","properties","tempProps","prop","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","IdTooLong","input","_msgId","num","substr","IChannelControls_1","EventsDiscardedReason_1","AppInsightsCore_1","CoreUtils_1","NotificationManager_1","MinChannelPriorty","EventsDiscardedReason","AppInsightsCore","CoreUtils","NotificationManager","Domain","msgId","msg","isUserAct","this","messageId","AiUserActionablePrefix","AiNonUserActionablePrefix","diagnosticText","sanitizeDiagnosticText","text","severity","enableDebugExceptions","messageKey","_messageLogged","verboseLogging","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_messageCount","clearInternalMessageLoggedTypes","sessionStorageKeys","AIInternalMessagePrefix","setMaxInternalMessageLimit","limit","Error","MAX_INTERNAL_MESSAGE_LIMIT","_areInternalMessagesThrottled","logMessage","CRITICAL","queue","throttleLimitMessage","throttleMessage","MessageLimitPerPVExceeded","__extends","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","EventData_1","_super","_this","ver","EventData","requestContextHeader","requestContextAppIdFormat","requestIdHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","Domain_1","Unknown","NonRetryableStatus","InvalidEvent","SizeLimitExceeded","KillSwitch","QueueFull","isNullOrUndefined","listeners","addNotificationListener","listener","removeNotificationListener","index","splice","eventsSent","events","_loop_1","this_1","setTimeout","eventsDiscarded","reason","_loop_2","this_2","Sender_1","Sender","ApplicationInsights_1","ApplicationInsights","applicationinsights_common_1","PageViewManager_1","applicationinsights_core_js_1","TelemetryContext_1","TelemetryItemCreator_1","_trackAjaxAttempts","identifier","defaultIdentifier","initialize","_initialize","trackPageView","pageView","customProperties","_pageViewManager","autoTrackPageVisitTime","_pageVisitTimeManager","trackPreviousPageVisit","uri","TrackPVFailed","sendPageViewInternal","telemetryItem","TelemetryItemCreator","createItem","dataType","envelopeType","context","track","sendPageViewPerformanceInternal","pageViewPerformance","core","extensions","_core","_globalconfig","instrumentationKey","defaults","appInsightsDefaultConfig","enableDebug","isCookieUseDisabled","isStorageUseDisabled","configGetters","accountId","sessionRenewalMs","sessionExpirationMs","sampleRate","samplingPercentage","cookieDomain","sdkExtension","isBrowserLinkTrackingEnabled","appId","TelemetryContext","PageViewManager","overridePageViewDuration","Version","Timing","_name","_events","start","StartCalledMoreThanOnce","stop","StopCalledWithoutStart","end","duration","getDuration","action","applicationinsights_analytics_js_1","Initialization_1","Initialization","getDefaultConfig","snippet","initialization","appInsightsLocal","loadAppInsights","emptyQueue","addHousekeepingBeforeUnload","appInsightsChannel","applicationinsights_channel_js_1","appInsights","title","URL","StackFrame_1","ExceptionData_1","ExceptionDetails_1","severityLevel","aiDataContract","Required","exceptions","Default","_ExceptionDetails","CreateSimpleException","typeName","assembly","fileName","details","line","hasFullStack","ExceptionData","outerId","parsedStack","parseStack","frames","level","totalSizeInBytes","frame","_StackFrame","regex","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","ExceptionDetails","matches","match","baseSize","StackFrame","time","iKey","Hidden","tags","MetricData_1","DataPoint_1","count","max","metrics","dataPoint","DataPoint","MetricData","arguments","kind","stdDev","DataPointType_1","DataPointType","Measurement","durationMs","Util_2","commandName","success","resultCode","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData_1","MessageData","PageViewPerfData_1","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","isValid","timing","getPerformanceTiming","total","navigationStart","loadEventEnd","network","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","ErrorPVCalc","shouldCollectDuration","ClientPerformanceMathError","InvalidDurationValue","getIsValid","getDurationMs","isPerformanceTimingSupported","performance","isPerformanceTimingDataReady","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","i_1","MAX_DURATION_ALLOWED","PageViewPerfData","baseType","baseData","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalSdkVersion","internalAgentVersion","internalNodeName","_extensions","_notificationManager","forEach","extension","sort","extA","extB","typeExtA","processTelemetry","typeExtB","priority","idx","setNextPlugin","ext","getTransmissionControl","_notifiyInvalidEvent","_validateTelmetryItem","timestamp","SendBuffer_1","EnvelopeCreator_1","EventValidator_1","TraceValidator_1","ExceptionValidator_1","MetricValidator_1","PageViewPerformanceValidator_1","PageViewValidator_1","RemoteDepdencyValidator_1","Serializer_1","_XMLHttpRequestSupported","pause","resume","flush","triggerSend","FlushFailed","teardown","_consecutiveErrors","_retryAt","_lastSend","_config","_getDefaultAppInsightsChannelConfig","_sender","_buffer","enableSessionStorageBuffer","SessionStorageSendBuffer","ArraySendBuffer","isBeaconApiDisabled","_beaconSender","XMLHttpRequest","_xhrSender","XDomainRequest","_xdrSender","disableTelemetry","CannotSendEmptyTelemetry","SenderNotInitialized","_validate","TelemetryEnvelopeInvalid","aiEnvelope","_constructEnvelope","CreateEnvelopeError","payload","Serializer","serialize","bufferPayload","getItems","batch","batchPayloads","maxBatchSizeInBytes","enqueue","_setupTimer","FailedAddingTelemetryToBuffer","_nextPlugin","next","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","_appId","_parseResponse","responseText","status","isRetryDisabled","_isRetriable","_resendPayload","TransmissionFailed","_onError","_formatErrorMessageXhr","_onPartialSuccess","_onSuccess","async","clear","clearTimeout","_timeoutHandle","event","OnError","clearSent","results","failed","retry","errors_1","errors","reverse","extracted","statusCode","itemsAccepted","itemsReceived","join","_xdrOnLoad","xdr","_formatErrorMessageXdr","envelope","EventEnvelopeCreator","Create","TraceEnvelopeCreator","PageViewEnvelopeCreator","PageViewPerformanceEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","DependencyEnvelopeCreator","resultConfig","pluginConfig","emitLineDelimitedJson","maxBatchInterval","EventValidator","Validate","TraceValidator","ExceptionValidator","MetricValidator","PageViewValidator","PageViewPerformanceValidator","RemoteDepdencyValidator","isAsync","plainTextBatch","Blob","markAsSent","open","setRequestHeader","onreadystatechange","onerror","send","parse","InvalidBackendResponse","payload_1","item","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","now","retryInterval","timerValue","onload","hostingProtocol","lastIndexOf","_bufferFullMessageSent","bufferItems","getBuffer","BUFFER_KEY","notDeliveredItems","SENT_BUFFER_KEY","concat","MAX_BUFFER_SIZE","setBuffer","SessionStorageBufferFull","removePayloadsFromBuffer","sentElements","payloads","buffer","remaining","contains","j","bufferJson","FailedToRestoreStorageBuffer","FailedToSetStorageBuffer","EnvelopeCreator","extractProperties","extractPropsAndMeasurements","createEnvelope","iKeyNoDashes","ctx","tag","customMeasurements","command","totalTime","average","sampleCount","refUri","pageType","isLoggedIn","pageTags","_validateExceptions","output","_serializeObject","source","CannotSerializeObject","CircularReferenceDetected","_serializeStringMap","_serializeArray","CannotSerializeObjectNonSerializable","contract","isRequired","isHidden","isPresent","isObject","MissingRequiredFieldSpecification","sources","ItemNotInArray","expectedType","parseFloat","pageViewPerformanceSent","_channel","NavigationTimingNotSupported","pageViewSent","customDuration","handle","setInterval","clearInterval","TrackPVFailedCalc","Application_1","Device_1","Internal_1","Location_1","Operation_1","Sample_1","User_1","Session_1","_telemetryInitializers","_sessionManager","_SessionManager","application","Application","device","Device","internal","Internal","Location","user","User","operation","Operation","session","Session","sample","Sample","_addDefaultTelemetryInitializers","addTelemetryInitializer","telemetryInitializer","TrackArgumentsNotSpecified","update","_track","browserLinkPaths_1","remoteData","tagsItem","_applySessionContext","automaticSession","_applyApplicationContext","_applyDeviceContext","_applyInternalContext","_applyLocationContext","_applySampleContext","_applyUserContext","_applyOperationContext","doNotSendItem","telemetryInitializersCount","TelemetryInitializerFailed","isSampledIn","TelemetrySampledAndNotSent","SampleRate","appContext","tagKeys","build","deviceContext","ip","language","locale","model","oemName","os","osversion","resolution","internalContext","agentVersion","sdkVersion","locationContext","operationContext","parentId","rootId","syntheticSource","sampleContext","sessionContext","isFirst","userContext","agent","authenticatedId","storeRegion","SamplingScoreGenerator_1","INT_MAX_VALUE","SampleRateOutOfRange","samplingRate","samplingScoreGenerator","SamplingScoreGenerator","HashCodeScoreGenerator_1","hashCodeGeneragor","HashCodeScoreGenerator","getSamplingScore","getHashCodeScore","getHashCode","MIN_INPUT_LENGTH","hash","charCodeAt","abs","userCookieName","params","cookieSeparator","acqStr","accountAcquisitionDate","setTime","getTime","newCookie","toUTCString","authCookie","authUserCookieName","authCookieString","decodeURI","setAuthenticatedUserContext","authenticatedUserId","storeInCookie","validateUserInput","SetAuthContextFailedAccountName","encodeURI","clearAuthenticatedUserContext","ajaxUtils_1","acquisitionSpan","renewalSpan","initializeAutomaticSession","dateTime","Now","acquisitionExpired","acquisitionDate","renewalExpired","renewalDate","renew","cookieUpdatedTimestamp","cookieUpdateInterval","backup","initializeAutomaticSessionWithData","sessionData","acq","renewal","ErrorParsingAISessionCookie","SessionRenewalDateIsZero","BrowserDoesNotSupportLocalStorage","guid","acquisitionExpiry","renewalExpiry","cookieExpiry","cookieDomnain","IsNullOrUndefined","stringUtils","GetLength","strObject","res","stringified","ex","GetDuration","EventHelper","AttachEvent","eventNameWithoutOn","handlerRef","attachEvent","DetachEvent","detachEvent","removeEventListener","envelopeName","creator","pollInteralLogs","appInsightsInstance","disableFlushOnBeforeUnload","FailedToAddHandlerForOnBeforeUnload","configuration","disableExceptionTracking","diagnosticLogInterval","disableAjaxTracking","maxAjaxCallsPerView"],"mappings":"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","file":"./aisdk.0.0.8.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","define([\"require\", \"exports\", \"./Util\", \"./Enums\", \"./Logging\", \"./RequestResponseHeaders\", \"./Constants\", \"./Interfaces/Contracts/Generated/Data\", \"./Interfaces/Contracts/Generated/Base\", \"./Telemetry/Common/Envelope\", \"./Telemetry/Event\", \"./Telemetry/Exception\", \"./Telemetry/Metric\", \"./Telemetry/PageView\", \"./Interfaces/Contracts/Generated/PageViewData\", \"./Telemetry/RemoteDependencyData\", \"./Telemetry/Trace\", \"./Telemetry/PageViewPerformance\", \"./Telemetry/Common/Data\", \"./Interfaces/Contracts/Generated/SeverityLevel\", \"./Interfaces/Contracts/Generated/ContextTagKeys\", \"./Telemetry/Common/DataSanitizer\"], function (require, exports, Util_1, Enums_1, Logging_1, RequestResponseHeaders_1, Constants_1, Data_1, Base_1, Envelope_1, Event_1, Exception_1, Metric_1, PageView_1, PageViewData_1, RemoteDependencyData_1, Trace_1, PageViewPerformance_1, Data_2, SeverityLevel_1, ContextTagKeys_1, DataSanitizer_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Util = Util_1.Util;\r\n    exports.CorrelationIdHelper = Util_1.CorrelationIdHelper;\r\n    exports.UrlHelper = Util_1.UrlHelper;\r\n    exports._InternalMessageId = Enums_1._InternalMessageId;\r\n    exports.LoggingSeverity = Enums_1.LoggingSeverity;\r\n    exports.FieldType = Enums_1.FieldType;\r\n    exports._InternalLogging = Logging_1._InternalLogging;\r\n    exports._InternalLogMessage = Logging_1._InternalLogMessage;\r\n    exports.RequestHeaders = RequestResponseHeaders_1.RequestHeaders;\r\n    exports.DisabledPropertyName = Constants_1.DisabledPropertyName;\r\n    exports.AIData = Data_1.Data;\r\n    exports.AIBase = Base_1.Base;\r\n    exports.Envelope = Envelope_1.Envelope;\r\n    exports.Event = Event_1.Event;\r\n    exports.Exception = Exception_1.Exception;\r\n    exports.Metric = Metric_1.Metric;\r\n    exports.PageView = PageView_1.PageView;\r\n    exports.PageViewData = PageViewData_1.PageViewData;\r\n    exports.RemoteDependencyData = RemoteDependencyData_1.RemoteDependencyData;\r\n    exports.Trace = Trace_1.Trace;\r\n    exports.PageViewPerformance = PageViewPerformance_1.PageViewPerformance;\r\n    exports.Data = Data_2.Data;\r\n    exports.SeverityLevel = SeverityLevel_1.SeverityLevel;\r\n    exports.ContextTagKeys = ContextTagKeys_1.ContextTagKeys;\r\n    exports.DataSanitizer = DataSanitizer_1.DataSanitizer;\r\n});\r\n//# sourceMappingURL=applicationinsights-common.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var LoggingSeverity;\r\n    (function (LoggingSeverity) {\r\n        /**\r\n         * Error will be sent as internal telemetry\r\n         */\r\n        LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 0] = \"CRITICAL\";\r\n        /**\r\n         * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n         */\r\n        LoggingSeverity[LoggingSeverity[\"WARNING\"] = 1] = \"WARNING\";\r\n    })(LoggingSeverity = exports.LoggingSeverity || (exports.LoggingSeverity = {}));\r\n    /**\r\n     * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n     */\r\n    var _InternalMessageId;\r\n    (function (_InternalMessageId) {\r\n        // Non user actionable\r\n        _InternalMessageId[_InternalMessageId[\"BrowserDoesNotSupportLocalStorage\"] = 0] = \"BrowserDoesNotSupportLocalStorage\";\r\n        _InternalMessageId[_InternalMessageId[\"BrowserCannotReadLocalStorage\"] = 1] = \"BrowserCannotReadLocalStorage\";\r\n        _InternalMessageId[_InternalMessageId[\"BrowserCannotReadSessionStorage\"] = 2] = \"BrowserCannotReadSessionStorage\";\r\n        _InternalMessageId[_InternalMessageId[\"BrowserCannotWriteLocalStorage\"] = 3] = \"BrowserCannotWriteLocalStorage\";\r\n        _InternalMessageId[_InternalMessageId[\"BrowserCannotWriteSessionStorage\"] = 4] = \"BrowserCannotWriteSessionStorage\";\r\n        _InternalMessageId[_InternalMessageId[\"BrowserFailedRemovalFromLocalStorage\"] = 5] = \"BrowserFailedRemovalFromLocalStorage\";\r\n        _InternalMessageId[_InternalMessageId[\"BrowserFailedRemovalFromSessionStorage\"] = 6] = \"BrowserFailedRemovalFromSessionStorage\";\r\n        _InternalMessageId[_InternalMessageId[\"CannotSendEmptyTelemetry\"] = 7] = \"CannotSendEmptyTelemetry\";\r\n        _InternalMessageId[_InternalMessageId[\"ClientPerformanceMathError\"] = 8] = \"ClientPerformanceMathError\";\r\n        _InternalMessageId[_InternalMessageId[\"ErrorParsingAISessionCookie\"] = 9] = \"ErrorParsingAISessionCookie\";\r\n        _InternalMessageId[_InternalMessageId[\"ErrorPVCalc\"] = 10] = \"ErrorPVCalc\";\r\n        _InternalMessageId[_InternalMessageId[\"ExceptionWhileLoggingError\"] = 11] = \"ExceptionWhileLoggingError\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedAddingTelemetryToBuffer\"] = 12] = \"FailedAddingTelemetryToBuffer\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedMonitorAjaxAbort\"] = 13] = \"FailedMonitorAjaxAbort\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedMonitorAjaxDur\"] = 14] = \"FailedMonitorAjaxDur\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedMonitorAjaxOpen\"] = 15] = \"FailedMonitorAjaxOpen\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedMonitorAjaxRSC\"] = 16] = \"FailedMonitorAjaxRSC\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedMonitorAjaxSend\"] = 17] = \"FailedMonitorAjaxSend\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedMonitorAjaxGetCorrelationHeader\"] = 18] = \"FailedMonitorAjaxGetCorrelationHeader\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedToAddHandlerForOnBeforeUnload\"] = 19] = \"FailedToAddHandlerForOnBeforeUnload\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedToSendQueuedTelemetry\"] = 20] = \"FailedToSendQueuedTelemetry\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedToReportDataLoss\"] = 21] = \"FailedToReportDataLoss\";\r\n        _InternalMessageId[_InternalMessageId[\"FlushFailed\"] = 22] = \"FlushFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"MessageLimitPerPVExceeded\"] = 23] = \"MessageLimitPerPVExceeded\";\r\n        _InternalMessageId[_InternalMessageId[\"MissingRequiredFieldSpecification\"] = 24] = \"MissingRequiredFieldSpecification\";\r\n        _InternalMessageId[_InternalMessageId[\"NavigationTimingNotSupported\"] = 25] = \"NavigationTimingNotSupported\";\r\n        _InternalMessageId[_InternalMessageId[\"OnError\"] = 26] = \"OnError\";\r\n        _InternalMessageId[_InternalMessageId[\"SessionRenewalDateIsZero\"] = 27] = \"SessionRenewalDateIsZero\";\r\n        _InternalMessageId[_InternalMessageId[\"SenderNotInitialized\"] = 28] = \"SenderNotInitialized\";\r\n        _InternalMessageId[_InternalMessageId[\"StartTrackEventFailed\"] = 29] = \"StartTrackEventFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"StopTrackEventFailed\"] = 30] = \"StopTrackEventFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"StartTrackFailed\"] = 31] = \"StartTrackFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"StopTrackFailed\"] = 32] = \"StopTrackFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"TelemetrySampledAndNotSent\"] = 33] = \"TelemetrySampledAndNotSent\";\r\n        _InternalMessageId[_InternalMessageId[\"TrackEventFailed\"] = 34] = \"TrackEventFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"TrackExceptionFailed\"] = 35] = \"TrackExceptionFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"TrackMetricFailed\"] = 36] = \"TrackMetricFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"TrackPVFailed\"] = 37] = \"TrackPVFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"TrackPVFailedCalc\"] = 38] = \"TrackPVFailedCalc\";\r\n        _InternalMessageId[_InternalMessageId[\"TrackTraceFailed\"] = 39] = \"TrackTraceFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"TransmissionFailed\"] = 40] = \"TransmissionFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedToSetStorageBuffer\"] = 41] = \"FailedToSetStorageBuffer\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedToRestoreStorageBuffer\"] = 42] = \"FailedToRestoreStorageBuffer\";\r\n        _InternalMessageId[_InternalMessageId[\"InvalidBackendResponse\"] = 43] = \"InvalidBackendResponse\";\r\n        _InternalMessageId[_InternalMessageId[\"FailedToFixDepricatedValues\"] = 44] = \"FailedToFixDepricatedValues\";\r\n        _InternalMessageId[_InternalMessageId[\"InvalidDurationValue\"] = 45] = \"InvalidDurationValue\";\r\n        _InternalMessageId[_InternalMessageId[\"TelemetryEnvelopeInvalid\"] = 46] = \"TelemetryEnvelopeInvalid\";\r\n        _InternalMessageId[_InternalMessageId[\"CreateEnvelopeError\"] = 47] = \"CreateEnvelopeError\";\r\n        // User actionable\r\n        _InternalMessageId[_InternalMessageId[\"CannotSerializeObject\"] = 48] = \"CannotSerializeObject\";\r\n        _InternalMessageId[_InternalMessageId[\"CannotSerializeObjectNonSerializable\"] = 49] = \"CannotSerializeObjectNonSerializable\";\r\n        _InternalMessageId[_InternalMessageId[\"CircularReferenceDetected\"] = 50] = \"CircularReferenceDetected\";\r\n        _InternalMessageId[_InternalMessageId[\"ClearAuthContextFailed\"] = 51] = \"ClearAuthContextFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"ExceptionTruncated\"] = 52] = \"ExceptionTruncated\";\r\n        _InternalMessageId[_InternalMessageId[\"IllegalCharsInName\"] = 53] = \"IllegalCharsInName\";\r\n        _InternalMessageId[_InternalMessageId[\"ItemNotInArray\"] = 54] = \"ItemNotInArray\";\r\n        _InternalMessageId[_InternalMessageId[\"MaxAjaxPerPVExceeded\"] = 55] = \"MaxAjaxPerPVExceeded\";\r\n        _InternalMessageId[_InternalMessageId[\"MessageTruncated\"] = 56] = \"MessageTruncated\";\r\n        _InternalMessageId[_InternalMessageId[\"NameTooLong\"] = 57] = \"NameTooLong\";\r\n        _InternalMessageId[_InternalMessageId[\"SampleRateOutOfRange\"] = 58] = \"SampleRateOutOfRange\";\r\n        _InternalMessageId[_InternalMessageId[\"SetAuthContextFailed\"] = 59] = \"SetAuthContextFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"SetAuthContextFailedAccountName\"] = 60] = \"SetAuthContextFailedAccountName\";\r\n        _InternalMessageId[_InternalMessageId[\"StringValueTooLong\"] = 61] = \"StringValueTooLong\";\r\n        _InternalMessageId[_InternalMessageId[\"StartCalledMoreThanOnce\"] = 62] = \"StartCalledMoreThanOnce\";\r\n        _InternalMessageId[_InternalMessageId[\"StopCalledWithoutStart\"] = 63] = \"StopCalledWithoutStart\";\r\n        _InternalMessageId[_InternalMessageId[\"TelemetryInitializerFailed\"] = 64] = \"TelemetryInitializerFailed\";\r\n        _InternalMessageId[_InternalMessageId[\"TrackArgumentsNotSpecified\"] = 65] = \"TrackArgumentsNotSpecified\";\r\n        _InternalMessageId[_InternalMessageId[\"UrlTooLong\"] = 66] = \"UrlTooLong\";\r\n        _InternalMessageId[_InternalMessageId[\"SessionStorageBufferFull\"] = 67] = \"SessionStorageBufferFull\";\r\n        _InternalMessageId[_InternalMessageId[\"CannotAccessCookie\"] = 68] = \"CannotAccessCookie\";\r\n        _InternalMessageId[_InternalMessageId[\"IdTooLong\"] = 69] = \"IdTooLong\";\r\n    })(_InternalMessageId = exports._InternalMessageId || (exports._InternalMessageId = {}));\r\n    /**\r\n    * Type of storage to differentiate between local storage and session storage\r\n    */\r\n    var StorageType;\r\n    (function (StorageType) {\r\n        StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n        StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n    })(StorageType = exports.StorageType || (exports.StorageType = {}));\r\n    /**\r\n     * Enum is used in aiDataContract to describe how fields are serialized.\r\n     * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n     */\r\n    var FieldType;\r\n    (function (FieldType) {\r\n        FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n        FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n        FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n        FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n    })(FieldType = exports.FieldType || (exports.FieldType = {}));\r\n    ;\r\n});\r\n//# sourceMappingURL=Enums.js.map","define([\"require\", \"exports\", \"./Enums\", \"./Logging\", \"./RequestResponseHeaders\", \"./Telemetry/Common/DataSanitizer\"], function (require, exports, Enums_1, Logging_1, RequestResponseHeaders_1, DataSanitizer_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Util = /** @class */ (function () {\r\n        function Util() {\r\n        }\r\n        /*\r\n         * Force the SDK not to use local and session storage\r\n        */\r\n        Util.disableStorage = function () {\r\n            Util._canUseLocalStorage = false;\r\n            Util._canUseSessionStorage = false;\r\n        };\r\n        /**\r\n         * Gets the localStorage object if available\r\n         * @return {Storage} - Returns the storage object if available else returns null\r\n         */\r\n        Util._getLocalStorageObject = function () {\r\n            if (Util.canUseLocalStorage()) {\r\n                return Util._getVerifiedStorageObject(Enums_1.StorageType.LocalStorage);\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n         * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n         * @param storageType Type of storage\r\n         * @return {Storage} Returns storage object verified that it is usable\r\n         */\r\n        Util._getVerifiedStorageObject = function (storageType) {\r\n            var storage = null;\r\n            var fail;\r\n            var uid;\r\n            try {\r\n                uid = new Date;\r\n                storage = storageType === Enums_1.StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n                storage.setItem(uid, uid);\r\n                fail = storage.getItem(uid) != uid;\r\n                storage.removeItem(uid);\r\n                if (fail) {\r\n                    storage = null;\r\n                }\r\n            }\r\n            catch (exception) {\r\n                storage = null;\r\n            }\r\n            return storage;\r\n        };\r\n        /**\r\n         *  Checks if endpoint URL is application insights internal injestion service URL.\r\n         *\r\n         *  @param endpointUrl Endpoint URL to check.\r\n         *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n         */\r\n        Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n            return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n        };\r\n        /**\r\n         *  Check if the browser supports local storage.\r\n         *\r\n         *  @returns {boolean} True if local storage is supported.\r\n         */\r\n        Util.canUseLocalStorage = function () {\r\n            if (Util._canUseLocalStorage === undefined) {\r\n                Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(Enums_1.StorageType.LocalStorage);\r\n            }\r\n            return Util._canUseLocalStorage;\r\n        };\r\n        /**\r\n         *  Get an object from the browser's local storage\r\n         *\r\n         *  @param {string} name - the name of the object to get from storage\r\n         *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n         */\r\n        Util.getStorage = function (name) {\r\n            var storage = Util._getLocalStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    return storage.getItem(name);\r\n                }\r\n                catch (e) {\r\n                    Util._canUseLocalStorage = false;\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         *  Set the contents of an object in the browser's local storage\r\n         *\r\n         *  @param {string} name - the name of the object to set in storage\r\n         *  @param {string} data - the contents of the object to set in storage\r\n         *  @returns {boolean} True if the storage object could be written.\r\n         */\r\n        Util.setStorage = function (name, data) {\r\n            var storage = Util._getLocalStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.setItem(name, data);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseLocalStorage = false;\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         *  Remove an object from the browser's local storage\r\n         *\r\n         *  @param {string} name - the name of the object to remove from storage\r\n         *  @returns {boolean} True if the storage object could be removed.\r\n         */\r\n        Util.removeStorage = function (name) {\r\n            var storage = Util._getLocalStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.removeItem(name);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseLocalStorage = false;\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Gets the sessionStorage object if available\r\n         * @return {Storage} - Returns the storage object if available else returns null\r\n         */\r\n        Util._getSessionStorageObject = function () {\r\n            if (Util.canUseSessionStorage()) {\r\n                return Util._getVerifiedStorageObject(Enums_1.StorageType.SessionStorage);\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         *  Check if the browser supports session storage.\r\n         *\r\n         *  @returns {boolean} True if session storage is supported.\r\n         */\r\n        Util.canUseSessionStorage = function () {\r\n            if (Util._canUseSessionStorage === undefined) {\r\n                Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(Enums_1.StorageType.SessionStorage);\r\n            }\r\n            return Util._canUseSessionStorage;\r\n        };\r\n        /**\r\n         *  Gets the list of session storage keys\r\n         *\r\n         *  @returns {string[]} List of session storage keys\r\n         */\r\n        Util.getSessionStorageKeys = function () {\r\n            var keys = [];\r\n            if (Util.canUseSessionStorage()) {\r\n                for (var key in window.sessionStorage) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        };\r\n        /**\r\n         *  Get an object from the browser's session storage\r\n         *\r\n         *  @param {string} name - the name of the object to get from storage\r\n         *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n         */\r\n        Util.getSessionStorage = function (name) {\r\n            var storage = Util._getSessionStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    return storage.getItem(name);\r\n                }\r\n                catch (e) {\r\n                    Util._canUseSessionStorage = false;\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         *  Set the contents of an object in the browser's session storage\r\n         *\r\n         *  @param {string} name - the name of the object to set in storage\r\n         *  @param {string} data - the contents of the object to set in storage\r\n         *  @returns {boolean} True if the storage object could be written.\r\n         */\r\n        Util.setSessionStorage = function (name, data) {\r\n            var storage = Util._getSessionStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.setItem(name, data);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseSessionStorage = false;\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         *  Remove an object from the browser's session storage\r\n         *\r\n         *  @param {string} name - the name of the object to remove from storage\r\n         *  @returns {boolean} True if the storage object could be removed.\r\n         */\r\n        Util.removeSessionStorage = function (name) {\r\n            var storage = Util._getSessionStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.removeItem(name);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseSessionStorage = false;\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /*\r\n         * Force the SDK not to store and read any data from cookies\r\n         */\r\n        Util.disableCookies = function () {\r\n            Util._canUseCookies = false;\r\n        };\r\n        /*\r\n         * helper method to tell if document.cookie object is available\r\n         */\r\n        Util.canUseCookies = function () {\r\n            if (Util._canUseCookies === undefined) {\r\n                Util._canUseCookies = false;\r\n                try {\r\n                    Util._canUseCookies = Util.document.cookie !== undefined;\r\n                }\r\n                catch (e) {\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n                ;\r\n            }\r\n            return Util._canUseCookies;\r\n        };\r\n        /**\r\n         * helper method to set userId and sessionId cookie\r\n         */\r\n        Util.setCookie = function (name, value, domain) {\r\n            var domainAttrib = \"\";\r\n            var secureAttrib = \"\";\r\n            if (domain) {\r\n                domainAttrib = \";domain=\" + domain;\r\n            }\r\n            if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n                secureAttrib = \";secure\";\r\n            }\r\n            if (Util.canUseCookies()) {\r\n                Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n            }\r\n        };\r\n        Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = false; }\r\n            if (str === undefined || str === null) {\r\n                return defaultValue;\r\n            }\r\n            return str.toString().toLowerCase() === \"true\";\r\n        };\r\n        /**\r\n         * helper method to access userId and sessionId cookie\r\n         */\r\n        Util.getCookie = function (name) {\r\n            if (!Util.canUseCookies()) {\r\n                return;\r\n            }\r\n            var value = \"\";\r\n            if (name && name.length) {\r\n                var cookieName = name + \"=\";\r\n                var cookies = Util.document.cookie.split(\";\");\r\n                for (var i = 0; i < cookies.length; i++) {\r\n                    var cookie = cookies[i];\r\n                    cookie = Util.trim(cookie);\r\n                    if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                        value = cookie.substring(cookieName.length, cookies[i].length);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        };\r\n        /**\r\n         * Deletes a cookie by setting it's expiration time in the past.\r\n         * @param name - The name of the cookie to delete.\r\n         */\r\n        Util.deleteCookie = function (name) {\r\n            if (Util.canUseCookies()) {\r\n                // Setting the expiration date in the past immediately removes the cookie\r\n                Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n            }\r\n        };\r\n        /**\r\n         * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n         */\r\n        Util.trim = function (str) {\r\n            if (typeof str !== \"string\")\r\n                return str;\r\n            return str.replace(/^\\s+|\\s+$/g, \"\");\r\n        };\r\n        /**\r\n         * generate random id string\r\n         */\r\n        Util.newId = function () {\r\n            var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n            var result = \"\";\r\n            var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n            while (random > 0) {\r\n                var char = base64chars.charAt(random % 64);\r\n                result += char;\r\n                random = Math.floor(random / 64);\r\n            }\r\n            return result;\r\n        };\r\n        /**\r\n         * Check if an object is of type Array\r\n         */\r\n        Util.isArray = function (obj) {\r\n            return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n        };\r\n        /**\r\n         * Check if an object is of type Error\r\n         */\r\n        Util.isError = function (obj) {\r\n            return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n        };\r\n        /**\r\n         * Check if an object is of type Date\r\n         */\r\n        Util.isDate = function (obj) {\r\n            return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n        };\r\n        /**\r\n         * Convert a date to I.S.O. format in IE8\r\n         */\r\n        Util.toISOStringForIE8 = function (date) {\r\n            if (Util.isDate(date)) {\r\n                if (Date.prototype.toISOString) {\r\n                    return date.toISOString();\r\n                }\r\n                else {\r\n                    var pad = function (number) {\r\n                        var r = String(number);\r\n                        if (r.length === 1) {\r\n                            r = \"0\" + r;\r\n                        }\r\n                        return r;\r\n                    };\r\n                    return date.getUTCFullYear()\r\n                        + \"-\" + pad(date.getUTCMonth() + 1)\r\n                        + \"-\" + pad(date.getUTCDate())\r\n                        + \"T\" + pad(date.getUTCHours())\r\n                        + \":\" + pad(date.getUTCMinutes())\r\n                        + \":\" + pad(date.getUTCSeconds())\r\n                        + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                        + \"Z\";\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Gets IE version if we are running on IE, or null otherwise\r\n         */\r\n        Util.getIEVersion = function (userAgentStr) {\r\n            if (userAgentStr === void 0) { userAgentStr = null; }\r\n            var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n            return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n        };\r\n        /**\r\n         * Convert ms to c# time span format\r\n         */\r\n        Util.msToTimeSpan = function (totalms) {\r\n            if (isNaN(totalms) || totalms < 0) {\r\n                totalms = 0;\r\n            }\r\n            totalms = Math.round(totalms);\r\n            var ms = \"\" + totalms % 1000;\r\n            var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n            var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n            var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n            var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n            ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n            sec = sec.length < 2 ? \"0\" + sec : sec;\r\n            min = min.length < 2 ? \"0\" + min : min;\r\n            hour = hour.length < 2 ? \"0\" + hour : hour;\r\n            return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n        };\r\n        /**\r\n        * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n        * happens in a script from other domain (cross origin, CORS).\r\n        */\r\n        Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n            return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n        };\r\n        /**\r\n        * Returns string representation of an object suitable for diagnostics logging.\r\n        */\r\n        Util.dump = function (object) {\r\n            var objectTypeDump = Object.prototype.toString.call(object);\r\n            var propertyValueDump = JSON.stringify(object);\r\n            if (objectTypeDump === \"[object Error]\") {\r\n                propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n            }\r\n            return objectTypeDump + propertyValueDump;\r\n        };\r\n        /**\r\n        * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n        */\r\n        Util.getExceptionName = function (object) {\r\n            var objectTypeDump = Object.prototype.toString.call(object);\r\n            if (objectTypeDump === \"[object Error]\") {\r\n                return object.name;\r\n            }\r\n            return \"\";\r\n        };\r\n        /**\r\n         * Adds an event handler for the specified event\r\n         * @param eventName {string} - The name of the event\r\n         * @param callback {any} - The callback function that needs to be executed for the given event\r\n         * @return {boolean} - true if the handler was successfully added\r\n         */\r\n        Util.addEventHandler = function (eventName, callback) {\r\n            if (!window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n                return false;\r\n            }\r\n            // Create verb for the event\r\n            var verbEventName = 'on' + eventName;\r\n            // check if addEventListener is available\r\n            if (window.addEventListener) {\r\n                window.addEventListener(eventName, callback, false);\r\n            }\r\n            else if (window[\"attachEvent\"]) {\r\n                window[\"attachEvent\"](verbEventName, callback);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * Tells if a browser supports a Beacon API\r\n         */\r\n        Util.IsBeaconApiSupported = function () {\r\n            return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n        };\r\n        Util.document = typeof document !== \"undefined\" ? document : {};\r\n        Util._canUseCookies = undefined;\r\n        Util._canUseLocalStorage = undefined;\r\n        Util._canUseSessionStorage = undefined;\r\n        // listing only non-geo specific locations \r\n        Util._internalEndpoints = [\r\n            \"https://dc.services.visualstudio.com/v2/track\",\r\n            \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n            \"https://dc-int.services.visualstudio.com/v2/track\"\r\n        ];\r\n        Util.NotSpecified = \"not_specified\";\r\n        return Util;\r\n    }());\r\n    exports.Util = Util;\r\n    var UrlHelper = /** @class */ (function () {\r\n        function UrlHelper() {\r\n        }\r\n        UrlHelper.parseUrl = function (url) {\r\n            if (!UrlHelper.htmlAnchorElement) {\r\n                UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : {};\r\n            }\r\n            UrlHelper.htmlAnchorElement.href = url;\r\n            return UrlHelper.htmlAnchorElement;\r\n        };\r\n        UrlHelper.getAbsoluteUrl = function (url) {\r\n            var result;\r\n            var a = UrlHelper.parseUrl(url);\r\n            if (a) {\r\n                result = a.href;\r\n            }\r\n            return result;\r\n        };\r\n        UrlHelper.getPathName = function (url) {\r\n            var result;\r\n            var a = UrlHelper.parseUrl(url);\r\n            if (a) {\r\n                result = a.pathname;\r\n            }\r\n            return result;\r\n        };\r\n        UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n            if (method) {\r\n                return method.toUpperCase() + \" \" + absoluteUrl;\r\n            }\r\n            else {\r\n                return absoluteUrl;\r\n            }\r\n        };\r\n        UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n        return UrlHelper;\r\n    }());\r\n    exports.UrlHelper = UrlHelper;\r\n    var CorrelationIdHelper = /** @class */ (function () {\r\n        function CorrelationIdHelper() {\r\n        }\r\n        /**\r\n        * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n        */\r\n        CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n            if (config && config.disableCorrelationHeaders) {\r\n                return false;\r\n            }\r\n            if (!requestUrl) {\r\n                return false;\r\n            }\r\n            var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n            if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n                return false;\r\n            }\r\n            var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n            if (!excludedDomains || excludedDomains.length == 0) {\r\n                return true;\r\n            }\r\n            for (var i = 0; i < excludedDomains.length; i++) {\r\n                var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                if (regex.test(requestHost)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n        * Combines target appId and target role name from response header.\r\n        */\r\n        CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n            if (responseHeader) {\r\n                var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestResponseHeaders_1.RequestHeaders.requestContextTargetKey);\r\n                if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                    return correlationId;\r\n                }\r\n            }\r\n        };\r\n        /**\r\n        * Gets key from correlation response header\r\n        */\r\n        CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n            if (responseHeader) {\r\n                var keyValues = responseHeader.split(\",\");\r\n                for (var i = 0; i < keyValues.length; ++i) {\r\n                    var keyValue = keyValues[i].split(\"=\");\r\n                    if (keyValue.length == 2 && keyValue[0] == key) {\r\n                        return keyValue[1];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n        return CorrelationIdHelper;\r\n    }());\r\n    exports.CorrelationIdHelper = CorrelationIdHelper;\r\n    var AjaxHelper = /** @class */ (function () {\r\n        function AjaxHelper() {\r\n        }\r\n        AjaxHelper.ParseDependencyPath = function (absoluteUrl, method, pathName) {\r\n            var target, name;\r\n            if (absoluteUrl && absoluteUrl.length > 0) {\r\n                var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n                target = parsedUrl.host;\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    name = DataSanitizer_1.DataSanitizer.sanitizeString(method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer_1.DataSanitizer.sanitizeString(absoluteUrl);\r\n                }\r\n            }\r\n            else {\r\n                target = pathName;\r\n                name = pathName;\r\n            }\r\n            return {\r\n                target: target,\r\n                name: name\r\n            };\r\n        };\r\n        return AjaxHelper;\r\n    }());\r\n    exports.AjaxHelper = AjaxHelper;\r\n});\r\n//# sourceMappingURL=Util.js.map","define([\"require\", \"exports\", \"../../Logging\", \"../../Util\", \"../../Enums\"], function (require, exports, Logging_1, Util_1, Enums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var DataSanitizer = /** @class */ (function () {\r\n        function DataSanitizer() {\r\n        }\r\n        DataSanitizer.sanitizeKeyAndAddUniqueness = function (key, map) {\r\n            var origLength = key.length;\r\n            var field = DataSanitizer.sanitizeKey(key);\r\n            // validation truncated the length.  We need to add uniqueness\r\n            if (field.length !== origLength) {\r\n                var i = 0;\r\n                var uniqueField = field;\r\n                while (map[uniqueField] !== undefined) {\r\n                    i++;\r\n                    uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n                }\r\n                field = uniqueField;\r\n            }\r\n            return field;\r\n        };\r\n        DataSanitizer.sanitizeKey = function (name) {\r\n            if (name) {\r\n                // Remove any leading or trailing whitepace\r\n                name = Util_1.Util.trim(name.toString());\r\n                // truncate the string to 150 chars\r\n                if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                    name = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n                }\r\n            }\r\n            return name;\r\n        };\r\n        DataSanitizer.sanitizeString = function (value, maxLength) {\r\n            if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n            if (value) {\r\n                maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n                value = Util_1.Util.trim(value);\r\n                if (value.toString().length > maxLength) {\r\n                    value = value.toString().substring(0, maxLength);\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n                }\r\n            }\r\n            return value;\r\n        };\r\n        DataSanitizer.sanitizeUrl = function (url) {\r\n            return DataSanitizer.sanitizeInput(url, DataSanitizer.MAX_URL_LENGTH, Enums_1._InternalMessageId.UrlTooLong);\r\n        };\r\n        DataSanitizer.sanitizeMessage = function (message) {\r\n            if (message) {\r\n                if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                    message = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n        DataSanitizer.sanitizeException = function (exception) {\r\n            if (exception) {\r\n                if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                    exception = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n                }\r\n            }\r\n            return exception;\r\n        };\r\n        DataSanitizer.sanitizeProperties = function (properties) {\r\n            if (properties) {\r\n                var tempProps = {};\r\n                for (var prop in properties) {\r\n                    var value = DataSanitizer.sanitizeString(properties[prop], DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                    prop = DataSanitizer.sanitizeKeyAndAddUniqueness(prop, tempProps);\r\n                    tempProps[prop] = value;\r\n                }\r\n                properties = tempProps;\r\n            }\r\n            return properties;\r\n        };\r\n        DataSanitizer.sanitizeMeasurements = function (measurements) {\r\n            if (measurements) {\r\n                var tempMeasurements = {};\r\n                for (var measure in measurements) {\r\n                    var value = measurements[measure];\r\n                    measure = DataSanitizer.sanitizeKeyAndAddUniqueness(measure, tempMeasurements);\r\n                    tempMeasurements[measure] = value;\r\n                }\r\n                measurements = tempMeasurements;\r\n            }\r\n            return measurements;\r\n        };\r\n        DataSanitizer.sanitizeId = function (id) {\r\n            return id ? DataSanitizer.sanitizeInput(id, DataSanitizer.MAX_ID_LENGTH, Enums_1._InternalMessageId.IdTooLong).toString() : id;\r\n        };\r\n        DataSanitizer.sanitizeInput = function (input, maxLength, _msgId) {\r\n            if (input) {\r\n                input = Util_1.Util.trim(input);\r\n                if (input.length > maxLength) {\r\n                    input = input.substring(0, maxLength);\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n                }\r\n            }\r\n            return input;\r\n        };\r\n        DataSanitizer.padNumber = function (num) {\r\n            var s = \"00\" + num;\r\n            return s.substr(s.length - 3);\r\n        };\r\n        /**\r\n        * Max length allowed for custom names.\r\n        */\r\n        DataSanitizer.MAX_NAME_LENGTH = 150;\r\n        /**\r\n         * Max length allowed for Id field in page views.\r\n         */\r\n        DataSanitizer.MAX_ID_LENGTH = 128;\r\n        /**\r\n         * Max length allowed for custom values.\r\n         */\r\n        DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n        /**\r\n         * Max length allowed for names\r\n         */\r\n        DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n        /**\r\n         * Max length allowed for url.\r\n         */\r\n        DataSanitizer.MAX_URL_LENGTH = 2048;\r\n        /**\r\n         * Max length allowed for messages.\r\n         */\r\n        DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n        /**\r\n         * Max length allowed for exceptions.\r\n         */\r\n        DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n        return DataSanitizer;\r\n    }());\r\n    exports.DataSanitizer = DataSanitizer;\r\n});\r\n//# sourceMappingURL=DataSanitizer.js.map","define([\"require\", \"exports\", \"./JavaScriptSDK.Interfaces/IChannelControls\", \"./JavaScriptSDK.Enums/EventsDiscardedReason\", \"./JavaScriptSDK/AppInsightsCore\", \"./JavaScriptSDK/CoreUtils\", \"./JavaScriptSDK/NotificationManager\"], function (require, exports, IChannelControls_1, EventsDiscardedReason_1, AppInsightsCore_1, CoreUtils_1, NotificationManager_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MinChannelPriorty = IChannelControls_1.MinChannelPriorty;\r\n    exports.EventsDiscardedReason = EventsDiscardedReason_1.EventsDiscardedReason;\r\n    exports.AppInsightsCore = AppInsightsCore_1.AppInsightsCore;\r\n    exports.CoreUtils = CoreUtils_1.CoreUtils;\r\n    exports.NotificationManager = NotificationManager_1.NotificationManager;\r\n});\r\n//# sourceMappingURL=applicationinsights-core-js.js.map","// THIS FILE WAS AUTOGENERATED\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * The abstract common base of all domains.\r\n     */\r\n    var Domain = /** @class */ (function () {\r\n        function Domain() {\r\n        }\r\n        return Domain;\r\n    }());\r\n    exports.Domain = Domain;\r\n});\r\n//# sourceMappingURL=Domain.js.map","define([\"require\", \"exports\", \"./Enums\", \"./Util\"], function (require, exports, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var _InternalLogMessage = /** @class */ (function () {\r\n        function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n            if (isUserAct === void 0) { isUserAct = false; }\r\n            this.messageId = msgId;\r\n            this.message =\r\n                (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                    Enums_1._InternalMessageId[msgId].toString();\r\n            var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n                (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n            this.message += diagnosticText;\r\n        }\r\n        _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n            return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n        };\r\n        /**\r\n         * For user non actionable traces use AI Internal prefix.\r\n         */\r\n        _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n        /**\r\n         * Prefix of the traces in portal.\r\n         */\r\n        _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n        return _InternalLogMessage;\r\n    }());\r\n    exports._InternalLogMessage = _InternalLogMessage;\r\n    var _InternalLogging = /** @class */ (function () {\r\n        function _InternalLogging() {\r\n        }\r\n        /**\r\n         * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n         * @param severity {LoggingSeverity} - The severity of the log message\r\n         * @param message {_InternalLogMessage} - The log message.\r\n         */\r\n        _InternalLogging.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n            if (isUserAct === void 0) { isUserAct = false; }\r\n            var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n            if (this.enableDebugExceptions()) {\r\n                throw message;\r\n            }\r\n            else {\r\n                if (typeof (message) !== \"undefined\" && !!message) {\r\n                    if (typeof (message.message) !== \"undefined\") {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = Enums_1._InternalMessageId[message.messageId];\r\n                            if (!this._messageLogged[messageKey] || this.verboseLogging()) {\r\n                                this.warnToConsole(message.message);\r\n                                this._messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                            if (this.verboseLogging()) {\r\n                                this.warnToConsole(message.message);\r\n                            }\r\n                        }\r\n                        this.logInternalMessage(severity, message);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * This will write a warning to the console if possible\r\n         * @param message {string} - The warning message\r\n         */\r\n        _InternalLogging.warnToConsole = function (message) {\r\n            if (typeof console !== \"undefined\" && !!console) {\r\n                if (typeof console.warn === \"function\") {\r\n                    console.warn(message);\r\n                }\r\n                else if (typeof console.log === \"function\") {\r\n                    console.log(message);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Resets the internal message count\r\n         */\r\n        _InternalLogging.resetInternalMessageCount = function () {\r\n            this._messageCount = 0;\r\n            this._messageLogged = {};\r\n        };\r\n        /**\r\n         * Clears the list of records indicating that internal message type was already logged\r\n         */\r\n        _InternalLogging.clearInternalMessageLoggedTypes = function () {\r\n            if (Util_1.Util.canUseSessionStorage()) {\r\n                var sessionStorageKeys = Util_1.Util.getSessionStorageKeys();\r\n                for (var i = 0; i < sessionStorageKeys.length; i++) {\r\n                    if (sessionStorageKeys[i].indexOf(_InternalLogging.AIInternalMessagePrefix) === 0) {\r\n                        Util_1.Util.removeSessionStorage(sessionStorageKeys[i]);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Sets the limit for the number of internal events before they are throttled\r\n         * @param limit {number} - The throttle limit to set for internal events\r\n         */\r\n        _InternalLogging.setMaxInternalMessageLimit = function (limit) {\r\n            if (!limit) {\r\n                throw new Error('limit cannot be undefined.');\r\n            }\r\n            this.MAX_INTERNAL_MESSAGE_LIMIT = limit;\r\n        };\r\n        /**\r\n         * Logs a message to the internal queue.\r\n         * @param severity {LoggingSeverity} - The severity of the log message\r\n         * @param message {_InternalLogMessage} - The message to log.\r\n         */\r\n        _InternalLogging.logInternalMessage = function (severity, message) {\r\n            if (this._areInternalMessagesThrottled()) {\r\n                return;\r\n            }\r\n            // check if this message type was already logged for this session and if so, don't log it again\r\n            var logMessage = true;\r\n            var messageKey = _InternalLogging.AIInternalMessagePrefix + Enums_1._InternalMessageId[message.messageId];\r\n            if (Util_1.Util.canUseSessionStorage()) {\r\n                var internalMessageTypeLogRecord = Util_1.Util.getSessionStorage(messageKey);\r\n                if (internalMessageTypeLogRecord) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    Util_1.Util.setSessionStorage(messageKey, \"1\");\r\n                }\r\n            }\r\n            else {\r\n                // if the session storage is not available, limit to only one message type per page view\r\n                if (this._messageLogged[messageKey]) {\r\n                    logMessage = false;\r\n                }\r\n                else {\r\n                    this._messageLogged[messageKey] = true;\r\n                }\r\n            }\r\n            if (logMessage) {\r\n                // Push the event in the internal queue\r\n                if (this.verboseLogging() || severity === Enums_1.LoggingSeverity.CRITICAL) {\r\n                    this.queue.push(message);\r\n                    this._messageCount++;\r\n                }\r\n                // When throttle limit reached, send a special event\r\n                if (this._messageCount == this.MAX_INTERNAL_MESSAGE_LIMIT) {\r\n                    var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                    var throttleMessage = new _InternalLogMessage(Enums_1._InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                    this.queue.push(throttleMessage);\r\n                    this.warnToConsole(throttleLimitMessage);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Indicates whether the internal events are throttled\r\n         */\r\n        _InternalLogging._areInternalMessagesThrottled = function () {\r\n            return this._messageCount >= this.MAX_INTERNAL_MESSAGE_LIMIT;\r\n        };\r\n        /**\r\n        *  Session storage key for the prefix for the key indicating message type already logged\r\n        */\r\n        _InternalLogging.AIInternalMessagePrefix = \"AITR_\";\r\n        /**\r\n         * When this is true the SDK will throw exceptions to aid in debugging.\r\n         */\r\n        _InternalLogging.enableDebugExceptions = function () { return false; };\r\n        /**\r\n         * When this is true the SDK will log more messages to aid in debugging.\r\n         */\r\n        _InternalLogging.verboseLogging = function () { return false; };\r\n        /**\r\n         * The internal logging queue\r\n         */\r\n        _InternalLogging.queue = [];\r\n        /**\r\n         * The maximum number of internal messages allowed to be sent per page view\r\n         */\r\n        _InternalLogging.MAX_INTERNAL_MESSAGE_LIMIT = 25;\r\n        /**\r\n         * Count of internal messages sent\r\n         */\r\n        _InternalLogging._messageCount = 0;\r\n        /**\r\n         * Holds information about what message types were already logged to console or sent to server.\r\n         */\r\n        _InternalLogging._messageLogged = {};\r\n        return _InternalLogging;\r\n    }());\r\n    exports._InternalLogging = _InternalLogging;\r\n});\r\n//# sourceMappingURL=Logging.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./EventData\"], function (require, exports, EventData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n     */\r\n    var PageViewData = /** @class */ (function (_super) {\r\n        __extends(PageViewData, _super);\r\n        function PageViewData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return PageViewData;\r\n    }(EventData_1.EventData));\r\n    exports.PageViewData = PageViewData;\r\n});\r\n//# sourceMappingURL=PageViewData.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var RequestHeaders = /** @class */ (function () {\r\n        function RequestHeaders() {\r\n        }\r\n        /**\r\n         * Request-Context header\r\n         */\r\n        RequestHeaders.requestContextHeader = \"Request-Context\";\r\n        /**\r\n         * Target instrumentation header that is added to the response and retrieved by the\r\n         * calling application when processing incoming responses.\r\n         */\r\n        RequestHeaders.requestContextTargetKey = \"appId\";\r\n        /**\r\n         * Request-Context appId format\r\n         */\r\n        RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n        /**\r\n         * Request-Id header\r\n         */\r\n        RequestHeaders.requestIdHeader = \"Request-Id\";\r\n        /**\r\n         * Sdk-Context header\r\n         * If this header passed with appId in content then appId will be returned back by the backend.\r\n         */\r\n        RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n        /**\r\n         * String to pass in header for requesting appId back from the backend.\r\n         */\r\n        RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n        RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n        return RequestHeaders;\r\n    }());\r\n    exports.RequestHeaders = RequestHeaders;\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Base\"], function (require, exports, Base_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Data struct to contain both B and C sections.\r\n     */\r\n    var Data = /** @class */ (function (_super) {\r\n        __extends(Data, _super);\r\n        function Data() {\r\n            return _super.call(this) || this;\r\n        }\r\n        return Data;\r\n    }(Base_1.Base));\r\n    exports.Data = Data;\r\n});\r\n//# sourceMappingURL=Data.js.map","// THIS FILE WAS AUTOGENERATED\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n         * Data struct to contain only C section with custom fields.\r\n         */\r\n    var Base = /** @class */ (function () {\r\n        function Base() {\r\n        }\r\n        return Base;\r\n    }());\r\n    exports.Base = Base;\r\n});\r\n//# sourceMappingURL=Base.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n     */\r\n    var EventData = /** @class */ (function (_super) {\r\n        __extends(EventData, _super);\r\n        function EventData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return EventData;\r\n    }(Domain_1.Domain));\r\n    exports.EventData = EventData;\r\n});\r\n//# sourceMappingURL=EventData.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MinChannelPriorty = 100;\r\n});\r\n//# sourceMappingURL=IChannelControls.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n     */\r\n    exports.EventsDiscardedReason = {\r\n        /**\r\n         * Unknown.\r\n         */\r\n        Unknown: 0,\r\n        /**\r\n         * Status set to non-retryable.\r\n         */\r\n        NonRetryableStatus: 1,\r\n        /**\r\n         * The event is invalid.\r\n         */\r\n        InvalidEvent: 2,\r\n        /**\r\n         * The size of the event is too large.\r\n         */\r\n        SizeLimitExceeded: 3,\r\n        /**\r\n         * The server is not accepting events from this instrumentation key.\r\n         */\r\n        KillSwitch: 4,\r\n        /**\r\n         * The event queue is full.\r\n         */\r\n        QueueFull: 5,\r\n    };\r\n});\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var CoreUtils = /** @class */ (function () {\r\n        function CoreUtils() {\r\n        }\r\n        CoreUtils.isNullOrUndefined = function (input) {\r\n            return input === null || input === undefined;\r\n        };\r\n        return CoreUtils;\r\n    }());\r\n    exports.CoreUtils = CoreUtils;\r\n});\r\n//# sourceMappingURL=CoreUtils.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Class to manage sending notifications to all the listeners.\r\n     */\r\n    var NotificationManager = /** @class */ (function () {\r\n        function NotificationManager() {\r\n            this.listeners = [];\r\n        }\r\n        /**\r\n         * Adds a notification listener.\r\n         * @param {INotificationListener} listener - The notification listener to be added.\r\n         */\r\n        NotificationManager.prototype.addNotificationListener = function (listener) {\r\n            this.listeners.push(listener);\r\n        };\r\n        /**\r\n         * Removes all instances of the listener.\r\n         * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n         */\r\n        NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n            var index = this.listeners.indexOf(listener);\r\n            while (index > -1) {\r\n                this.listeners.splice(index, 1);\r\n                index = this.listeners.indexOf(listener);\r\n            }\r\n        };\r\n        /**\r\n         * Notification for events sent.\r\n         * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n         */\r\n        NotificationManager.prototype.eventsSent = function (events) {\r\n            var _this = this;\r\n            var _loop_1 = function (i) {\r\n                if (this_1.listeners[i].eventsSent) {\r\n                    setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (var i = 0; i < this.listeners.length; ++i) {\r\n                _loop_1(i);\r\n            }\r\n        };\r\n        /**\r\n         * Notification for events being discarded.\r\n         * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n         * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n         * constant should be used to check the different values.\r\n         */\r\n        NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n            var _this = this;\r\n            var _loop_2 = function (i) {\r\n                if (this_2.listeners[i].eventsDiscarded) {\r\n                    setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n                }\r\n            };\r\n            var this_2 = this;\r\n            for (var i = 0; i < this.listeners.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n        };\r\n        return NotificationManager;\r\n    }());\r\n    exports.NotificationManager = NotificationManager;\r\n});\r\n//# sourceMappingURL=NotificationManager.js.map","define([\"require\", \"exports\", \"./Sender\"], function (require, exports, Sender_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Sender = Sender_1.Sender;\r\n});\r\n//# sourceMappingURL=applicationinsights-channel-js.js.map","define([\"require\", \"exports\", \"./JavaScriptSDK/ApplicationInsights\"], function (require, exports, ApplicationInsights_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ApplicationInsights = ApplicationInsights_1.ApplicationInsights;\r\n});\r\n//# sourceMappingURL=applicationinsights-analytics-js.js.map","/// <reference types=\"applicationinsights-common\" />\r\ndefine([\"require\", \"exports\", \"applicationinsights-common\", \"./Telemetry/PageViewManager\", \"applicationinsights-core-js\", \"./TelemetryContext\", \"./TelemetryItemCreator\"], function (require, exports, applicationinsights_common_1, PageViewManager_1, applicationinsights_core_js_1, TelemetryContext_1, TelemetryItemCreator_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    \"use strict\";\r\n    var ApplicationInsights = /** @class */ (function () {\r\n        function ApplicationInsights() {\r\n            // Counts number of trackAjax invokations.\r\n            // By default we only monitor X ajax call per view to avoid too much load.\r\n            // Default value is set in config.\r\n            // This counter keeps increasing even after the limit is reached.\r\n            this._trackAjaxAttempts = 0;\r\n            this.identifier = ApplicationInsights.defaultIdentifier;\r\n            this.initialize = this._initialize.bind(this);\r\n        }\r\n        /**\r\n         * Logs that a page or other item was viewed.\r\n         * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n         * @param customProperties Additional data used to filter events and metrics. Defaults to empty.\r\n         */\r\n        ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n            try {\r\n                this._pageViewManager.trackPageView(pageView, customProperties);\r\n                if (this.config.autoTrackPageVisitTime) {\r\n                    this._pageVisitTimeManager.trackPreviousPageVisit(pageView.name, pageView.uri);\r\n                }\r\n            }\r\n            catch (e) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties) {\r\n            var telemetryItem = TelemetryItemCreator_1.TelemetryItemCreator.createItem(pageView, applicationinsights_common_1.PageView.dataType, applicationinsights_common_1.PageView.envelopeType, properties);\r\n            this.context.track(telemetryItem);\r\n            // reset ajaxes counter\r\n            this._trackAjaxAttempts = 0;\r\n        };\r\n        ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance) {\r\n            // TODO: Commenting out for now as we this package only supports pageViewTelemetry. Added task \r\n            // https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310811\r\n            /*\r\n            var pageViewPerformanceData = new Data<PageViewPerformance>(\r\n                PageViewPerformance.dataType, pageViewPerformance);\r\n            var pageViewPerformanceEnvelope = new Envelope(pageViewPerformanceData, PageViewPerformance.envelopeType);\r\n            this.context.track(pageViewPerformanceEnvelope);\r\n            */\r\n        };\r\n        ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n            var _this = this;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(core)) {\r\n                throw Error(\"Error initializing\");\r\n            }\r\n            this._core = core;\r\n            this._globalconfig = {\r\n                instrumentationKey: config.instrumentationKey,\r\n                endpointUrl: config.endpointUrl\r\n            };\r\n            this.config = config.extensions && config.extensions[this.identifier] ? config.extensions[this.identifier] : {};\r\n            // load default values if specified\r\n            var defaults = ApplicationInsights.appInsightsDefaultConfig;\r\n            if (defaults !== undefined) {\r\n                if (defaults.extensions && defaults.extensions[this.identifier]) {\r\n                    for (var field in defaults.extensions[this.identifier]) {\r\n                        // for each unspecified field, set the default value\r\n                        if (this.config[field] === undefined) {\r\n                            this.config[field] = defaults[field];\r\n                        }\r\n                    }\r\n                }\r\n                if (this._globalconfig) {\r\n                    for (var field in defaults) {\r\n                        if (this._globalconfig[field] === undefined) {\r\n                            this._globalconfig[field] = defaults[field];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            applicationinsights_common_1._InternalLogging.verboseLogging = function () { return _this.config.verboseLogging; };\r\n            applicationinsights_common_1._InternalLogging.enableDebugExceptions = function () { return _this.config.enableDebug; };\r\n            // Todo: move this out of static state\r\n            if (this.config.isCookieUseDisabled) {\r\n                applicationinsights_common_1.Util.disableCookies();\r\n            }\r\n            // Todo: move this out of static state\r\n            if (this.config.isStorageUseDisabled) {\r\n                applicationinsights_common_1.Util.disableStorage();\r\n            }\r\n            var configGetters = {\r\n                instrumentationKey: function () { return config.instrumentationKey; },\r\n                accountId: function () { return _this.config.accountId; },\r\n                sessionRenewalMs: function () { return _this.config.sessionRenewalMs; },\r\n                sessionExpirationMs: function () { return _this.config.sessionExpirationMs; },\r\n                sampleRate: function () { return _this.config.samplingPercentage; },\r\n                cookieDomain: function () { return _this.config.cookieDomain; },\r\n                sdkExtension: function () { return _this.config.sdkExtension; },\r\n                isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled; },\r\n                appId: function () { return _this.config.appId; }\r\n            };\r\n            this.context = new TelemetryContext_1.TelemetryContext(configGetters, this._core);\r\n            this._pageViewManager = new PageViewManager_1.PageViewManager(this, this.config.overridePageViewDuration, this._core);\r\n            /*\r\n            TODO: renable this trackEvent once we support trackEvent in this package. Created task to track this:\r\n            https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310833\r\n    \r\n            // initialize event timing\r\n            this._eventTracking = new Timing(\"trackEvent\");\r\n            this._eventTracking.action = (name?: string, url?: string, duration?: number, properties?: Object, measurements?: Object) => {\r\n                if (!measurements) {\r\n                    measurements = { duration: duration };\r\n                }\r\n                else {\r\n                    // do not override existing duration value\r\n                    if (isNaN(measurements[\"duration\"])) {\r\n                        measurements[\"duration\"] = duration;\r\n                    }\r\n                }\r\n    \r\n    \r\n                var event = new Event(name, properties, measurements);\r\n                var data = new Data<Event>(Event.dataType, event);\r\n                var envelope = new Envelope(data, Event.envelopeType);\r\n    \r\n                this.context.track(envelope);\r\n            }\r\n            */\r\n            /* TODO re-enable once we add support for startTrackPage. Task to track this:\r\n            https://mseng.visualstudio.com/AppInsights/1DS-Web/_workitems/edit/1305304\r\n            // initialize page view timing\r\n            this._pageTracking = new Timing(\"trackPageView\");\r\n            this._pageTracking.action = (name, url, duration, properties, measurements) => {\r\n                let pageViewItem: IPageViewTelemetry = {\r\n                    name: name,\r\n                    uri: url,\r\n                    duration: duration,\r\n                };\r\n                this.sendPageViewInternal(pageViewItem, properties);\r\n            }\r\n            */\r\n        };\r\n        ApplicationInsights.defaultIdentifier = \"ApplicationInsightsAnalytics\";\r\n        ApplicationInsights.Version = \"0.0.1\";\r\n        return ApplicationInsights;\r\n    }());\r\n    exports.ApplicationInsights = ApplicationInsights;\r\n    /**\r\n     * Used to record timed events and page views.\r\n     */\r\n    var Timing = /** @class */ (function () {\r\n        function Timing(name) {\r\n            this._name = name;\r\n            this._events = {};\r\n        }\r\n        Timing.prototype.start = function (name) {\r\n            if (typeof this._events[name] !== \"undefined\") {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n            }\r\n            this._events[name] = +new Date;\r\n        };\r\n        Timing.prototype.stop = function (name, url, properties, measurements) {\r\n            var start = this._events[name];\r\n            if (isNaN(start)) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n            }\r\n            else {\r\n                var end = +new Date;\r\n                var duration = applicationinsights_common_1.PageViewPerformance.getDuration(start, end);\r\n                this.action(name, url, duration, properties, measurements);\r\n            }\r\n            delete this._events[name];\r\n            this._events[name] = undefined;\r\n        };\r\n        return Timing;\r\n    }());\r\n});\r\n//# sourceMappingURL=ApplicationInsights.js.map","/// <reference types=\"applicationinsights-common\" />\r\n/// <reference types=\"applicationinsights-core-js\" />\r\n/// <reference types=\"applicationinsights-analytics-js\" />\r\n/// <reference types=\"applicationinsights-channel-js\" />\r\n\r\nimport { _InternalLogging, PageView } from \"applicationinsights-common\";\r\nimport { AppInsightsCore, IConfiguration } from \"applicationinsights-core-js\";\r\nimport { Sender } from \"applicationinsights-channel-js\";\r\nimport { ApplicationInsights, IPageViewTelemetry } from \"applicationinsights-analytics-js\";\r\nimport { Initialization, Snippet } from \"./Initialization\";\r\n\r\n\"use strict\";\r\n//should be global function that should load as soon as SDK loads\r\ntry {\r\n\r\n    // E2E sku on load initializes core and pipeline using snippet as input for configuration\r\n    \r\n    if (typeof window !== \"undefined\" && typeof JSON !== \"undefined\") {\r\n        // get snippet or initialize to an empty object\r\n\r\n        // appinsightsvnext should not conflict if page uses existing sdk for a layer of instrumentation\r\n        var aiName = \"appinsightsvnext\";\r\n\r\n        if (window[aiName] === undefined) {\r\n            // if no snippet is present, initialize default values\r\n            ApplicationInsights.appInsightsDefaultConfig = Initialization.getDefaultConfig();\r\n        } else {\r\n            // this is the typical case for browser+snippet\r\n            var snippet: Snippet = window[aiName] || <any>{};\r\n\r\n            // overwrite snippet with full appInsights\r\n            var initialization = new Initialization(snippet);\r\n            var appInsightsLocal = initialization.loadAppInsights();\r\n\r\n            // apply full appInsights to the global instance that was initialized in the snippet\r\n            for (var field in appInsightsLocal) {\r\n                snippet[field] = appInsightsLocal[field];\r\n            }\r\n\r\n            // Empty queue of all api calls logged prior to sdk download\r\n            initialization.emptyQueue();    \r\n\r\n            initialization.addHousekeepingBeforeUnload(appInsightsLocal);\r\n        }\r\n    }\r\n    // only initialize if we are running in a browser that supports JSON serialization (ie7<, node.js, cordova)\r\n    if (typeof window !== \"undefined\" && typeof JSON !== \"undefined\") {\r\n\r\n        // temporary for testing\r\n        let config: IConfiguration = {\r\n            instrumentationKey: \"8e68dc94-34d1-4894-8697-be2ba6282b5b\"\r\n        };\r\n\r\n        var core = new AppInsightsCore();\r\n        let extensions = [];\r\n        let appInsightsChannel : Sender = new Sender();\r\n        let appInsights = new ApplicationInsights();\r\n\r\n        extensions.push(appInsightsChannel);\r\n        extensions.push(appInsights);\r\n\r\n        // initialize core\r\n        core.initialize(config, extensions);\r\n        \r\n        // initialize extensions\r\n        // appInsights.initialize(config, core, extensions);\r\n        // appInsightsChannel.initialize(config);\r\n\r\n        let pageView: IPageViewTelemetry = {\r\n            name: document.title ? document.title : \"test page\",\r\n            uri: document.URL ? document.URL : \"\"\r\n        };\r\n\r\n        appInsights.trackPageView(pageView); // track a page view\r\n\r\n        // let telemetryItem: ITelemetryItem = {\r\n        //     name: \"TestPageView\",\r\n        //     instrumentationKey: \"8e68dc94-34d1-4894-8697-be2ba6282b5b\",\r\n        //     timestamp: new Date(),\r\n        //     baseType: PageView.dataType,\r\n        // }\r\n\r\n        // telemetryItem.sytemProperties = {};\r\n        // telemetryItem.domainProperties = {};\r\n\r\n        // telemetryItem.sytemProperties[\"ver\"] = \"2\";\r\n        // telemetryItem.domainProperties[\"url\"] = document.title ? document.title : \"\";\r\n        // telemetryItem.domainProperties[\"id\"] = \"\";\r\n        // telemetryItem.domainProperties[\"name\"] = \"2\";\r\n        // telemetryItem.domainProperties[\"duration\"] = 10;\r\n\r\n        // core.track(telemetryItem);\r\n    }\r\n} catch (e) {\r\n    _InternalLogging.warnToConsole('Failed to initialize AppInsights JS SDK: ' + e.message);\r\n}","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/StackFrame\", \"../Interfaces/Contracts/Generated/ExceptionData\", \"../Interfaces/Contracts/Generated/ExceptionDetails\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, StackFrame_1, ExceptionData_1, ExceptionDetails_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Exception = /** @class */ (function (_super) {\r\n        __extends(Exception, _super);\r\n        /**\r\n        * Constructs a new isntance of the ExceptionTelemetry object\r\n        */\r\n        function Exception(exception, properties, measurements, severityLevel) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                exceptions: Enums_1.FieldType.Required,\r\n                severityLevel: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default\r\n            };\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(measurements);\r\n            _this.exceptions = [new _ExceptionDetails(exception)];\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            return _this;\r\n        }\r\n        /**\r\n        * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n        */\r\n        Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n            return {\r\n                exceptions: [\r\n                    {\r\n                        hasFullStack: true,\r\n                        message: message,\r\n                        stack: details,\r\n                        typeName: typeName\r\n                    }\r\n                ]\r\n            };\r\n        };\r\n        Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n        Exception.dataType = \"ExceptionData\";\r\n        return Exception;\r\n    }(ExceptionData_1.ExceptionData));\r\n    exports.Exception = Exception;\r\n    var _ExceptionDetails = /** @class */ (function (_super) {\r\n        __extends(_ExceptionDetails, _super);\r\n        function _ExceptionDetails(exception) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                id: Enums_1.FieldType.Default,\r\n                outerId: Enums_1.FieldType.Default,\r\n                typeName: Enums_1.FieldType.Required,\r\n                message: Enums_1.FieldType.Required,\r\n                hasFullStack: Enums_1.FieldType.Default,\r\n                stack: Enums_1.FieldType.Default,\r\n                parsedStack: Enums_1.FieldType.Array\r\n            };\r\n            _this.typeName = DataSanitizer_1.DataSanitizer.sanitizeString(exception.name) || Util_1.Util.NotSpecified;\r\n            _this.message = DataSanitizer_1.DataSanitizer.sanitizeMessage(exception.message) || Util_1.Util.NotSpecified;\r\n            var stack = exception[\"stack\"];\r\n            _this.parsedStack = _this.parseStack(stack);\r\n            _this.stack = DataSanitizer_1.DataSanitizer.sanitizeException(stack);\r\n            _this.hasFullStack = Util_1.Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n            return _this;\r\n        }\r\n        _ExceptionDetails.prototype.parseStack = function (stack) {\r\n            var parsedStack = undefined;\r\n            if (typeof stack === \"string\") {\r\n                var frames = stack.split('\\n');\r\n                parsedStack = [];\r\n                var level = 0;\r\n                var totalSizeInBytes = 0;\r\n                for (var i = 0; i <= frames.length; i++) {\r\n                    var frame = frames[i];\r\n                    if (_StackFrame.regex.test(frame)) {\r\n                        var parsedFrame = new _StackFrame(frames[i], level++);\r\n                        totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                        parsedStack.push(parsedFrame);\r\n                    }\r\n                }\r\n                // DP Constraint - exception parsed stack must be < 32KB\r\n                // remove frames from the middle to meet the threshold\r\n                var exceptionParsedStackThreshold = 32 * 1024;\r\n                if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                    var left = 0;\r\n                    var right = parsedStack.length - 1;\r\n                    var size = 0;\r\n                    var acceptedLeft = left;\r\n                    var acceptedRight = right;\r\n                    while (left < right) {\r\n                        // check size\r\n                        var lSize = parsedStack[left].sizeInBytes;\r\n                        var rSize = parsedStack[right].sizeInBytes;\r\n                        size += lSize + rSize;\r\n                        if (size > exceptionParsedStackThreshold) {\r\n                            // remove extra frames from the middle\r\n                            var howMany = acceptedRight - acceptedLeft + 1;\r\n                            parsedStack.splice(acceptedLeft, howMany);\r\n                            break;\r\n                        }\r\n                        // update pointers\r\n                        acceptedLeft = left;\r\n                        acceptedRight = right;\r\n                        left++;\r\n                        right--;\r\n                    }\r\n                }\r\n            }\r\n            return parsedStack;\r\n        };\r\n        return _ExceptionDetails;\r\n    }(ExceptionDetails_1.ExceptionDetails));\r\n    var _StackFrame = /** @class */ (function (_super) {\r\n        __extends(_StackFrame, _super);\r\n        function _StackFrame(frame, level) {\r\n            var _this = _super.call(this) || this;\r\n            _this.sizeInBytes = 0;\r\n            _this.aiDataContract = {\r\n                level: Enums_1.FieldType.Required,\r\n                method: Enums_1.FieldType.Required,\r\n                assembly: Enums_1.FieldType.Default,\r\n                fileName: Enums_1.FieldType.Default,\r\n                line: Enums_1.FieldType.Default\r\n            };\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util_1.Util.trim(frame);\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util_1.Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util_1.Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n            _this.sizeInBytes += _this.method.length;\r\n            _this.sizeInBytes += _this.fileName.length;\r\n            _this.sizeInBytes += _this.assembly.length;\r\n            // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n            _this.sizeInBytes += _StackFrame.baseSize;\r\n            _this.sizeInBytes += _this.level.toString().length;\r\n            _this.sizeInBytes += _this.line.toString().length;\r\n            return _this;\r\n        }\r\n        // regex to match stack frames from ie/chrome/ff\r\n        // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n        _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n        _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n        return _StackFrame;\r\n    }(StackFrame_1.StackFrame));\r\n    exports._StackFrame = _StackFrame;\r\n});\r\n//# sourceMappingURL=Exception.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // THIS FILE WAS AUTOGENERATED\r\n    /**\r\n     * Stack frame information.\r\n     */\r\n    var StackFrame = /** @class */ (function () {\r\n        function StackFrame() {\r\n        }\r\n        return StackFrame;\r\n    }());\r\n    exports.StackFrame = StackFrame;\r\n});\r\n//# sourceMappingURL=StackFrame.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n     */\r\n    var ExceptionData = /** @class */ (function (_super) {\r\n        __extends(ExceptionData, _super);\r\n        function ExceptionData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.exceptions = [];\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return ExceptionData;\r\n    }(Domain_1.Domain));\r\n    exports.ExceptionData = ExceptionData;\r\n});\r\n//# sourceMappingURL=ExceptionData.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Exception details of the exception in a chain.\r\n     */\r\n    var ExceptionDetails = /** @class */ (function () {\r\n        function ExceptionDetails() {\r\n            this.hasFullStack = true;\r\n            this.parsedStack = [];\r\n        }\r\n        return ExceptionDetails;\r\n    }());\r\n    exports.ExceptionDetails = ExceptionDetails;\r\n});\r\n//# sourceMappingURL=ExceptionDetails.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n});\r\n//# sourceMappingURL=Constants.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../../Interfaces/Contracts/Generated/Envelope\", \"./DataSanitizer\", \"../../Enums\", \"../../Util\"], function (require, exports, Envelope_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Envelope = /** @class */ (function (_super) {\r\n        __extends(Envelope, _super);\r\n        /**\r\n         * Constructs a new instance of telemetry data.\r\n         */\r\n        function Envelope(data, name) {\r\n            var _this = _super.call(this) || this;\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(name) || Util_1.Util.NotSpecified;\r\n            _this.data = data;\r\n            _this.time = Util_1.Util.toISOStringForIE8(new Date());\r\n            _this.aiDataContract = {\r\n                time: Enums_1.FieldType.Required,\r\n                iKey: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Required,\r\n                sampleRate: function () {\r\n                    return (_this.sampleRate == 100) ? Enums_1.FieldType.Hidden : Enums_1.FieldType.Required;\r\n                },\r\n                tags: Enums_1.FieldType.Required,\r\n                data: Enums_1.FieldType.Required\r\n            };\r\n            return _this;\r\n        }\r\n        return Envelope;\r\n    }(Envelope_1.Envelope));\r\n    exports.Envelope = Envelope;\r\n});\r\n//# sourceMappingURL=Envelope.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * System variables for a telemetry item.\r\n     */\r\n    var Envelope = /** @class */ (function () {\r\n        function Envelope() {\r\n            this.ver = 1;\r\n            this.sampleRate = 100.0;\r\n            this.tags = {};\r\n        }\r\n        return Envelope;\r\n    }());\r\n    exports.Envelope = Envelope;\r\n});\r\n//# sourceMappingURL=Envelope.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/EventData\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, EventData_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Event = /** @class */ (function (_super) {\r\n        __extends(Event, _super);\r\n        /**\r\n         * Constructs a new instance of the EventTelemetry object\r\n         */\r\n        function Event(name, properties, measurements) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Required,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default\r\n            };\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(name) || Util_1.Util.NotSpecified;\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(measurements);\r\n            return _this;\r\n        }\r\n        Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n        Event.dataType = \"EventData\";\r\n        return Event;\r\n    }(EventData_1.EventData));\r\n    exports.Event = Event;\r\n});\r\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/MetricData\", \"./Common/DataSanitizer\", \"../Enums\", \"./Common/DataPoint\", \"../Util\"], function (require, exports, MetricData_1, DataSanitizer_1, Enums_1, DataPoint_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Metric = /** @class */ (function (_super) {\r\n        __extends(Metric, _super);\r\n        /**\r\n         * Constructs a new instance of the MetricTelemetry object\r\n         */\r\n        function Metric(name, value, count, min, max, properties) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                metrics: Enums_1.FieldType.Required,\r\n                properties: Enums_1.FieldType.Default\r\n            };\r\n            var dataPoint = new DataPoint_1.DataPoint();\r\n            dataPoint.count = count > 0 ? count : undefined;\r\n            dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n            dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n            dataPoint.name = DataSanitizer_1.DataSanitizer.sanitizeString(name) || Util_1.Util.NotSpecified;\r\n            dataPoint.value = value;\r\n            _this.metrics = [dataPoint];\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(properties);\r\n            return _this;\r\n        }\r\n        Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n        Metric.dataType = \"MetricData\";\r\n        return Metric;\r\n    }(MetricData_1.MetricData));\r\n    exports.Metric = Metric;\r\n});\r\n//# sourceMappingURL=Metric.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n     */\r\n    var MetricData = /** @class */ (function (_super) {\r\n        __extends(MetricData, _super);\r\n        function MetricData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.metrics = [];\r\n            _this.properties = {};\r\n            return _this;\r\n        }\r\n        return MetricData;\r\n    }(Domain_1.Domain));\r\n    exports.MetricData = MetricData;\r\n});\r\n//# sourceMappingURL=MetricData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../../Interfaces/Contracts/Generated/DataPoint\", \"../../Enums\"], function (require, exports, DataPoint_1, Enums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var DataPoint = /** @class */ (function (_super) {\r\n        __extends(DataPoint, _super);\r\n        function DataPoint() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            /**\r\n             * The data contract for serializing this object.\r\n             */\r\n            _this.aiDataContract = {\r\n                name: Enums_1.FieldType.Required,\r\n                kind: Enums_1.FieldType.Default,\r\n                value: Enums_1.FieldType.Required,\r\n                count: Enums_1.FieldType.Default,\r\n                min: Enums_1.FieldType.Default,\r\n                max: Enums_1.FieldType.Default,\r\n                stdDev: Enums_1.FieldType.Default\r\n            };\r\n            return _this;\r\n        }\r\n        return DataPoint;\r\n    }(DataPoint_1.DataPoint));\r\n    exports.DataPoint = DataPoint;\r\n});\r\n//# sourceMappingURL=DataPoint.js.map","define([\"require\", \"exports\", \"./DataPointType\"], function (require, exports, DataPointType_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Metric data single measurement.\r\n     */\r\n    var DataPoint = /** @class */ (function () {\r\n        function DataPoint() {\r\n            this.kind = DataPointType_1.DataPointType.Measurement;\r\n        }\r\n        return DataPoint;\r\n    }());\r\n    exports.DataPoint = DataPoint;\r\n});\r\n//# sourceMappingURL=DataPoint.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // THIS FILE WAS AUTOGENERATED\r\n    /**\r\n     * Type of the metric data measurement.\r\n     */\r\n    var DataPointType;\r\n    (function (DataPointType) {\r\n        DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n        DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n    })(DataPointType = exports.DataPointType || (exports.DataPointType = {}));\r\n});\r\n//# sourceMappingURL=DataPointType.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/PageViewData\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, PageViewData_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageView = /** @class */ (function (_super) {\r\n        __extends(PageView, _super);\r\n        /**\r\n         * Constructs a new instance of the PageEventTelemetry object\r\n         */\r\n        function PageView(name, url, durationMs, properties, measurements, id) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Default,\r\n                url: Enums_1.FieldType.Default,\r\n                duration: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default,\r\n                id: Enums_1.FieldType.Default,\r\n            };\r\n            _this.id = DataSanitizer_1.DataSanitizer.sanitizeId(id);\r\n            _this.url = DataSanitizer_1.DataSanitizer.sanitizeUrl(url);\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(name) || Util_1.Util.NotSpecified;\r\n            if (!isNaN(durationMs)) {\r\n                _this.duration = Util_1.Util.msToTimeSpan(durationMs);\r\n            }\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(measurements);\r\n            return _this;\r\n        }\r\n        PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n        PageView.dataType = \"PageviewData\";\r\n        return PageView;\r\n    }(PageViewData_1.PageViewData));\r\n    exports.PageView = PageView;\r\n});\r\n//# sourceMappingURL=PageView.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\", \"../Util\", \"../Interfaces/Contracts/Generated/RemoteDependencyData\"], function (require, exports, DataSanitizer_1, Enums_1, Util_1, Util_2, RemoteDependencyData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var RemoteDependencyData = /** @class */ (function (_super) {\r\n        __extends(RemoteDependencyData, _super);\r\n        /**\r\n         * Constructs a new instance of the RemoteDependencyData object\r\n         */\r\n        function RemoteDependencyData(id, absoluteUrl, commandName, value, success, resultCode, method, properties, measurements) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                id: Enums_1.FieldType.Required,\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Default,\r\n                resultCode: Enums_1.FieldType.Default,\r\n                duration: Enums_1.FieldType.Default,\r\n                success: Enums_1.FieldType.Default,\r\n                data: Enums_1.FieldType.Default,\r\n                target: Enums_1.FieldType.Default,\r\n                type: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default,\r\n                kind: Enums_1.FieldType.Default,\r\n                value: Enums_1.FieldType.Default,\r\n                count: Enums_1.FieldType.Default,\r\n                min: Enums_1.FieldType.Default,\r\n                max: Enums_1.FieldType.Default,\r\n                stdDev: Enums_1.FieldType.Default,\r\n                dependencyKind: Enums_1.FieldType.Default,\r\n                dependencySource: Enums_1.FieldType.Default,\r\n                commandName: Enums_1.FieldType.Default,\r\n                dependencyTypeName: Enums_1.FieldType.Default,\r\n            };\r\n            _this.id = id;\r\n            _this.duration = Util_1.Util.msToTimeSpan(value);\r\n            _this.success = success;\r\n            _this.resultCode = resultCode + \"\";\r\n            _this.type = \"Ajax\";\r\n            _this.data = DataSanitizer_1.DataSanitizer.sanitizeUrl(commandName);\r\n            var dependencyFields = Util_2.AjaxHelper.ParseDependencyPath(absoluteUrl, method, commandName);\r\n            _this.target = dependencyFields.target;\r\n            _this.name = dependencyFields.name;\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(measurements);\r\n            return _this;\r\n        }\r\n        RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n        RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n        return RemoteDependencyData;\r\n    }(RemoteDependencyData_1.RemoteDependencyData));\r\n    exports.RemoteDependencyData = RemoteDependencyData;\r\n});\r\n//# sourceMappingURL=RemoteDependencyData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n     */\r\n    var RemoteDependencyData = /** @class */ (function (_super) {\r\n        __extends(RemoteDependencyData, _super);\r\n        function RemoteDependencyData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.success = true;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return RemoteDependencyData;\r\n    }(Domain_1.Domain));\r\n    exports.RemoteDependencyData = RemoteDependencyData;\r\n});\r\n//# sourceMappingURL=RemoteDependencyData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/MessageData\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, MessageData_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Trace = /** @class */ (function (_super) {\r\n        __extends(Trace, _super);\r\n        /**\r\n         * Constructs a new instance of the TraceTelemetry object\r\n         */\r\n        function Trace(message, properties, severityLevel) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                message: Enums_1.FieldType.Required,\r\n                severityLevel: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default\r\n            };\r\n            message = message || Util_1.Util.NotSpecified;\r\n            _this.message = DataSanitizer_1.DataSanitizer.sanitizeMessage(message);\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(properties);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            return _this;\r\n        }\r\n        Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n        Trace.dataType = \"MessageData\";\r\n        return Trace;\r\n    }(MessageData_1.MessageData));\r\n    exports.Trace = Trace;\r\n});\r\n//# sourceMappingURL=Trace.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n     */\r\n    var MessageData = /** @class */ (function (_super) {\r\n        __extends(MessageData, _super);\r\n        function MessageData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            return _this;\r\n        }\r\n        return MessageData;\r\n    }(Domain_1.Domain));\r\n    exports.MessageData = MessageData;\r\n});\r\n//# sourceMappingURL=MessageData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/PageViewPerfData\", \"../Enums\", \"./Common/DataSanitizer\", \"../Util\", \"../Logging\"], function (require, exports, PageViewPerfData_1, Enums_1, DataSanitizer_1, Util_1, Logging_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageViewPerformance = /** @class */ (function (_super) {\r\n        __extends(PageViewPerformance, _super);\r\n        /**\r\n         * Constructs a new instance of the PageEventTelemetry object\r\n         */\r\n        function PageViewPerformance(name, url, unused, properties, measurements) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Default,\r\n                url: Enums_1.FieldType.Default,\r\n                duration: Enums_1.FieldType.Default,\r\n                perfTotal: Enums_1.FieldType.Default,\r\n                networkConnect: Enums_1.FieldType.Default,\r\n                sentRequest: Enums_1.FieldType.Default,\r\n                receivedResponse: Enums_1.FieldType.Default,\r\n                domProcessing: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default\r\n            };\r\n            _this.isValid = false;\r\n            /*\r\n             * http://www.w3.org/TR/navigation-timing/#processing-model\r\n             *  |-navigationStart\r\n             *  |             |-connectEnd\r\n             *  |             ||-requestStart\r\n             *  |             ||             |-responseStart\r\n             *  |             ||             |              |-responseEnd\r\n             *  |             ||             |              |\r\n             *  |             ||             |              |         |-loadEventEnd\r\n             *  |---network---||---request---|---response---|---dom---|\r\n             *  |--------------------------total----------------------|\r\n             */\r\n            var timing = PageViewPerformance.getPerformanceTiming();\r\n            if (timing) {\r\n                var total = PageViewPerformance.getDuration(timing.navigationStart, timing.loadEventEnd);\r\n                var network = PageViewPerformance.getDuration(timing.navigationStart, timing.connectEnd);\r\n                var request = PageViewPerformance.getDuration(timing.requestStart, timing.responseStart);\r\n                var response = PageViewPerformance.getDuration(timing.responseStart, timing.responseEnd);\r\n                var dom = PageViewPerformance.getDuration(timing.responseEnd, timing.loadEventEnd);\r\n                if (total == 0) {\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                }\r\n                else if (!PageViewPerformance.shouldCollectDuration(total, network, request, response, dom)) {\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                }\r\n                else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                    // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                    // in this case, don't report client performance from this page\r\n                    Logging_1._InternalLogging.throwInternal(Enums_1.LoggingSeverity.WARNING, Enums_1._InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                }\r\n                else {\r\n                    _this.durationMs = total;\r\n                    // convert to timespans\r\n                    _this.perfTotal = _this.duration = Util_1.Util.msToTimeSpan(total);\r\n                    _this.networkConnect = Util_1.Util.msToTimeSpan(network);\r\n                    _this.sentRequest = Util_1.Util.msToTimeSpan(request);\r\n                    _this.receivedResponse = Util_1.Util.msToTimeSpan(response);\r\n                    _this.domProcessing = Util_1.Util.msToTimeSpan(dom);\r\n                    _this.isValid = true;\r\n                }\r\n            }\r\n            _this.url = DataSanitizer_1.DataSanitizer.sanitizeUrl(url);\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(name) || Util_1.Util.NotSpecified;\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(measurements);\r\n            return _this;\r\n        }\r\n        /**\r\n         * Indicates whether this instance of PageViewPerformance is valid and should be sent\r\n         */\r\n        PageViewPerformance.prototype.getIsValid = function () {\r\n            return this.isValid;\r\n        };\r\n        /**\r\n        * Gets the total duration (PLT) in milliseconds. Check getIsValid() before using this method.\r\n        */\r\n        PageViewPerformance.prototype.getDurationMs = function () {\r\n            return this.durationMs;\r\n        };\r\n        PageViewPerformance.getPerformanceTiming = function () {\r\n            if (PageViewPerformance.isPerformanceTimingSupported()) {\r\n                return window.performance.timing;\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n        * Returns true is window performance timing API is supported, false otherwise.\r\n        */\r\n        PageViewPerformance.isPerformanceTimingSupported = function () {\r\n            // To do: add functionality when adding api support for trackpageview\r\n            //return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n            return false;\r\n        };\r\n        /**\r\n         * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n         * Returns true if ready, false otherwise.\r\n         */\r\n        PageViewPerformance.isPerformanceTimingDataReady = function () {\r\n            var timing = window.performance.timing;\r\n            return timing.domainLookupStart > 0\r\n                && timing.navigationStart > 0\r\n                && timing.responseStart > 0\r\n                && timing.requestStart > 0\r\n                && timing.loadEventEnd > 0\r\n                && timing.responseEnd > 0\r\n                && timing.connectEnd > 0\r\n                && timing.domLoading > 0;\r\n        };\r\n        PageViewPerformance.getDuration = function (start, end) {\r\n            var duration = undefined;\r\n            if (!(isNaN(start) || isNaN(end))) {\r\n                duration = Math.max(end - start, 0);\r\n            }\r\n            return duration;\r\n        };\r\n        /**\r\n         * This method tells if given durations should be excluded from collection.\r\n         */\r\n        PageViewPerformance.shouldCollectDuration = function () {\r\n            var durations = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                durations[_i] = arguments[_i];\r\n            }\r\n            // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n            var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n            var userAgent = navigator.userAgent;\r\n            var isGoogleBot = false;\r\n            if (userAgent) {\r\n                for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                    isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n                }\r\n            }\r\n            if (isGoogleBot) {\r\n                // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API. \r\n                return false;\r\n            }\r\n            else {\r\n                // for other page views, don't report if it's outside of a reasonable range\r\n                for (var i = 0; i < durations.length; i++) {\r\n                    if (durations[i] >= PageViewPerformance.MAX_DURATION_ALLOWED) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n        PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n        PageViewPerformance.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        return PageViewPerformance;\r\n    }(PageViewPerfData_1.PageViewPerfData));\r\n    exports.PageViewPerformance = PageViewPerformance;\r\n});\r\n//# sourceMappingURL=PageViewPerformance.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./PageViewData\"], function (require, exports, PageViewData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n     */\r\n    var PageViewPerfData = /** @class */ (function (_super) {\r\n        __extends(PageViewPerfData, _super);\r\n        function PageViewPerfData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return PageViewPerfData;\r\n    }(PageViewData_1.PageViewData));\r\n    exports.PageViewPerfData = PageViewPerfData;\r\n});\r\n//# sourceMappingURL=PageViewPerfData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../../Interfaces/Contracts/Generated/Data\", \"../../Enums\"], function (require, exports, Data_1, Enums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Data = /** @class */ (function (_super) {\r\n        __extends(Data, _super);\r\n        /**\r\n         * Constructs a new instance of telemetry data.\r\n         */\r\n        function Data(type, data) {\r\n            var _this = _super.call(this) || this;\r\n            /**\r\n             * The data contract for serializing this object.\r\n             */\r\n            _this.aiDataContract = {\r\n                baseType: Enums_1.FieldType.Required,\r\n                baseData: Enums_1.FieldType.Required\r\n            };\r\n            _this.baseType = type;\r\n            _this.baseData = data;\r\n            return _this;\r\n        }\r\n        return Data;\r\n    }(Data_1.Data));\r\n    exports.Data = Data;\r\n});\r\n//# sourceMappingURL=Data.js.map","// THIS FILE WAS AUTOGENERATED\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n    * Defines the level of severity for the event.\r\n    */\r\n    var SeverityLevel;\r\n    (function (SeverityLevel) {\r\n        SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n        SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n        SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n        SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n        SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n    })(SeverityLevel = exports.SeverityLevel || (exports.SeverityLevel = {}));\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // THIS FILE WAS AUTOGENERATED\r\n    var ContextTagKeys = /** @class */ (function () {\r\n        function ContextTagKeys() {\r\n            this.applicationVersion = \"ai.application.ver\";\r\n            this.applicationBuild = \"ai.application.build\";\r\n            this.applicationTypeId = \"ai.application.typeId\";\r\n            this.applicationId = \"ai.application.applicationId\";\r\n            this.applicationLayer = \"ai.application.layer\";\r\n            this.deviceId = \"ai.device.id\";\r\n            this.deviceIp = \"ai.device.ip\";\r\n            this.deviceLanguage = \"ai.device.language\";\r\n            this.deviceLocale = \"ai.device.locale\";\r\n            this.deviceModel = \"ai.device.model\";\r\n            this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n            this.deviceNetwork = \"ai.device.network\";\r\n            this.deviceNetworkName = \"ai.device.networkName\";\r\n            this.deviceOEMName = \"ai.device.oemName\";\r\n            this.deviceOS = \"ai.device.os\";\r\n            this.deviceOSVersion = \"ai.device.osVersion\";\r\n            this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n            this.deviceRoleName = \"ai.device.roleName\";\r\n            this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n            this.deviceType = \"ai.device.type\";\r\n            this.deviceMachineName = \"ai.device.machineName\";\r\n            this.deviceVMName = \"ai.device.vmName\";\r\n            this.deviceBrowser = \"ai.device.browser\";\r\n            this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n            this.locationIp = \"ai.location.ip\";\r\n            this.locationCountry = \"ai.location.country\";\r\n            this.locationProvince = \"ai.location.province\";\r\n            this.locationCity = \"ai.location.city\";\r\n            this.operationId = \"ai.operation.id\";\r\n            this.operationName = \"ai.operation.name\";\r\n            this.operationParentId = \"ai.operation.parentId\";\r\n            this.operationRootId = \"ai.operation.rootId\";\r\n            this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n            this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n            this.sessionId = \"ai.session.id\";\r\n            this.sessionIsFirst = \"ai.session.isFirst\";\r\n            this.sessionIsNew = \"ai.session.isNew\";\r\n            this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n            this.userAccountId = \"ai.user.accountId\";\r\n            this.userAgent = \"ai.user.userAgent\";\r\n            this.userId = \"ai.user.id\";\r\n            this.userStoreRegion = \"ai.user.storeRegion\";\r\n            this.userAuthUserId = \"ai.user.authUserId\";\r\n            this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n            this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n            this.cloudName = \"ai.cloud.name\";\r\n            this.cloudRole = \"ai.cloud.role\";\r\n            this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n            this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n            this.cloudEnvironment = \"ai.cloud.environment\";\r\n            this.cloudLocation = \"ai.cloud.location\";\r\n            this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n            this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n            this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n            this.internalNodeName = \"ai.internal.nodeName\";\r\n        }\r\n        return ContextTagKeys;\r\n    }());\r\n    exports.ContextTagKeys = ContextTagKeys;\r\n});\r\n//# sourceMappingURL=ContextTagKeys.js.map","define([\"require\", \"exports\", \"../JavaScriptSDK.Interfaces/IChannelControls\", \"../JavaScriptSDK.Enums/EventsDiscardedReason\", \"./CoreUtils\", \"./NotificationManager\"], function (require, exports, IChannelControls_1, EventsDiscardedReason_1, CoreUtils_1, NotificationManager_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    \"use strict\";\r\n    var AppInsightsCore = /** @class */ (function () {\r\n        function AppInsightsCore() {\r\n            this._extensions = new Array();\r\n        }\r\n        AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n            var _this = this;\r\n            if (!extensions || extensions.length === 0) {\r\n                // throw error\r\n                throw Error(\"At least one extension channel is required\");\r\n            }\r\n            if (!config || CoreUtils_1.CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n                throw Error(\"Please provide instrumentation key\");\r\n            }\r\n            this.config = config;\r\n            // add notification to the extensions in the config so other plugins can access it\r\n            this._notificationManager = new NotificationManager_1.NotificationManager();\r\n            this.config.extensions = this.config.extensions ? this.config.extensions : {};\r\n            this.config.extensions.NotificationManager = this._notificationManager;\r\n            // Initial validation\r\n            extensions.forEach(function (extension) {\r\n                if (CoreUtils_1.CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                    throw Error(\"Extensions must provide callback to initialize\");\r\n                }\r\n            });\r\n            this._extensions = extensions.sort(function (a, b) {\r\n                var extA = a;\r\n                var extB = b;\r\n                var typeExtA = typeof extA.processTelemetry;\r\n                var typeExtB = typeof extB.processTelemetry;\r\n                if (typeExtA === 'function' && typeExtB === 'function') {\r\n                    return extA.priority > extB.priority ? 1 : -1;\r\n                }\r\n                if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                    // keep non telemetryplugin specific extensions at start\r\n                    return 1;\r\n                }\r\n                if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                    return -1;\r\n                }\r\n            });\r\n            // Set next plugin for all but last extension\r\n            for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n                if (this._extensions[idx] && typeof this._extensions[idx].processTelemetry !== 'function') {\r\n                    // these are initialized only\r\n                    continue;\r\n                }\r\n                this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n            }\r\n            this._extensions.forEach(function (ext) { return ext.initialize(_this.config, _this, _this._extensions); }); // initialize\r\n        };\r\n        AppInsightsCore.prototype.getTransmissionControl = function () {\r\n            for (var i = 0; i < this._extensions.length; i++) {\r\n                var priority = this._extensions[i].priority;\r\n                if (!CoreUtils_1.CoreUtils.isNullOrUndefined(priority) && priority >= IChannelControls_1.MinChannelPriorty) {\r\n                    var firstChannel = this._extensions[i];\r\n                    return firstChannel; // return first channel in list\r\n                }\r\n            }\r\n            throw new Error(\"No channel extension found\");\r\n        };\r\n        AppInsightsCore.prototype.track = function (telemetryItem) {\r\n            if (telemetryItem === null) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                // throw error\r\n                throw Error(\"Invalid telemetry item\");\r\n            }\r\n            if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"Provide data.baseType for data.baseData\");\r\n            }\r\n            // do base validation before sending it through the pipeline        \r\n            this._validateTelmetryItem(telemetryItem);\r\n            if (!telemetryItem.instrumentationKey) {\r\n                // setup default ikey if not passed in\r\n                telemetryItem.instrumentationKey = this.config.instrumentationKey;\r\n            }\r\n            // invoke any common telemetry processors before sending through pipeline\r\n            var i = 0;\r\n            while (i < this._extensions.length) {\r\n                if (this._extensions[i].processTelemetry) {\r\n                    this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n        };\r\n        /**\r\n         * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n         * @param {INotificationListener} listener - An INotificationListener object.\r\n         */\r\n        AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n            this._notificationManager.addNotificationListener(listener);\r\n        };\r\n        /**\r\n         * Removes all instances of the listener.\r\n         * @param {INotificationListener} listener - INotificationListener to remove.\r\n         */\r\n        AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n            this._notificationManager.removeNotificationListener(listener);\r\n        };\r\n        AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"telemetry name required\");\r\n            }\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(telemetryItem.timestamp)) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"telemetry timestamp required\");\r\n            }\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(telemetryItem.instrumentationKey)) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"telemetry instrumentationKey required\");\r\n            }\r\n        };\r\n        AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n            this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason_1.EventsDiscardedReason.InvalidEvent);\r\n        };\r\n        return AppInsightsCore;\r\n    }());\r\n    exports.AppInsightsCore = AppInsightsCore;\r\n});\r\n//# sourceMappingURL=AppInsightsCore.js.map","define([\"require\", \"exports\", \"./SendBuffer\", \"./EnvelopeCreator\", \"./TelemetryValidation/EventValidator\", \"./TelemetryValidation/TraceValidator\", \"./TelemetryValidation/ExceptionValidator\", \"./TelemetryValidation/MetricValidator\", \"./TelemetryValidation/PageViewPerformanceValidator\", \"./TelemetryValidation/PageViewValidator\", \"./TelemetryValidation/RemoteDepdencyValidator\", \"./Serializer\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, SendBuffer_1, EnvelopeCreator_1, EventValidator_1, TraceValidator_1, ExceptionValidator_1, MetricValidator_1, PageViewPerformanceValidator_1, PageViewValidator_1, RemoteDepdencyValidator_1, Serializer_1, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Sender = /** @class */ (function () {\r\n        function Sender() {\r\n            this.priority = 200;\r\n            /**\r\n             * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n             */\r\n            this._XMLHttpRequestSupported = false;\r\n        }\r\n        Sender.prototype.pause = function () {\r\n            throw new Error(\"Method not implemented.\");\r\n        };\r\n        Sender.prototype.resume = function () {\r\n            throw new Error(\"Method not implemented.\");\r\n        };\r\n        Sender.prototype.flush = function () {\r\n            try {\r\n                this.triggerSend();\r\n            }\r\n            catch (e) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        Sender.prototype.teardown = function () {\r\n            throw new Error(\"Method not implemented.\");\r\n        };\r\n        Sender.prototype.initialize = function (config) {\r\n            this.identifier = \"AppInsightsChannelPlugin\";\r\n            this._consecutiveErrors = 0;\r\n            this._retryAt = null;\r\n            this._lastSend = 0;\r\n            this._config = Sender._getDefaultAppInsightsChannelConfig(config, this.identifier);\r\n            this._sender = null;\r\n            this._buffer = (applicationinsights_common_1.Util.canUseSessionStorage() && this._config.enableSessionStorageBuffer)\r\n                ? new SendBuffer_1.SessionStorageSendBuffer(this._config) : new SendBuffer_1.ArraySendBuffer(this._config);\r\n            if (!this._config.isBeaconApiDisabled() && applicationinsights_common_1.Util.IsBeaconApiSupported()) {\r\n                this._sender = this._beaconSender;\r\n            }\r\n            else {\r\n                if (typeof XMLHttpRequest != \"undefined\") {\r\n                    var testXhr = new XMLHttpRequest();\r\n                    if (\"withCredentials\" in testXhr) {\r\n                        this._sender = this._xhrSender;\r\n                        this._XMLHttpRequestSupported = true;\r\n                    }\r\n                    else if (typeof XDomainRequest !== \"undefined\") {\r\n                        this._sender = this._xdrSender; //IE 8 and 9\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        Sender.prototype.processTelemetry = function (telemetryItem) {\r\n            try {\r\n                // if master off switch is set, don't send any data\r\n                if (this._config.disableTelemetry()) {\r\n                    // Do not send/save data\r\n                    return;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                    return;\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!this._sender) {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                    return;\r\n                }\r\n                // first we need to validate that the envelope passed down is valid\r\n                var isValid = Sender._validate(telemetryItem);\r\n                if (!isValid) {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TelemetryEnvelopeInvalid, \"Invalid telemetry envelope\");\r\n                    return;\r\n                }\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                var aiEnvelope = Sender._constructEnvelope(telemetryItem);\r\n                if (!aiEnvelope) {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                // check if the incoming payload is too large, truncate if necessary\r\n                var payload = Serializer_1.Serializer.serialize(aiEnvelope);\r\n                // flush if we would exceed the max-size limit by adding this item\r\n                var bufferPayload = this._buffer.getItems();\r\n                var batch = this._buffer.batchPayloads(bufferPayload);\r\n                if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                    this.triggerSend();\r\n                }\r\n                // enqueue the payload\r\n                this._buffer.enqueue(payload);\r\n                // ensure an invocation timeout is set\r\n                this._setupTimer();\r\n                // Uncomment if you want to use DataLossanalyzer\r\n                // DataLossAnalyzer.incrementItemsQueued();\r\n            }\r\n            catch (e) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n            // hand off the telemetry item to the next plugin\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(telemetryItem);\r\n            }\r\n        };\r\n        Sender.prototype.setNextPlugin = function (next) {\r\n            this._nextPlugin = next;\r\n        };\r\n        /**\r\n         * xhr state changes\r\n         */\r\n        Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n            if (xhr.readyState === 4) {\r\n                var response = null;\r\n                if (!this._appId) {\r\n                    response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    if (response && response.appId) {\r\n                        this._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                    if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                        this._resendPayload(payload);\r\n                        applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.TransmissionFailed, \". \" +\r\n                            \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else {\r\n                    if (xhr.status === 206) {\r\n                        if (!response) {\r\n                            response = this._parseResponse(xhr.responseText || xhr.response);\r\n                        }\r\n                        if (response && !this._config.isRetryDisabled()) {\r\n                            this._onPartialSuccess(payload, response);\r\n                        }\r\n                        else {\r\n                            this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._consecutiveErrors = 0;\r\n                        this._onSuccess(payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Immediately send buffered data\r\n         * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n         */\r\n        Sender.prototype.triggerSend = function (async) {\r\n            if (async === void 0) { async = true; }\r\n            try {\r\n                // Send data only if disableTelemetry is false\r\n                if (!this._config.disableTelemetry()) {\r\n                    if (this._buffer.count() > 0) {\r\n                        var payload = this._buffer.getItems();\r\n                        // invoke send\r\n                        this._sender(payload, async);\r\n                    }\r\n                    // update lastSend time to enable throttling\r\n                    this._lastSend = +new Date;\r\n                }\r\n                else {\r\n                    this._buffer.clear();\r\n                }\r\n                clearTimeout(this._timeoutHandle);\r\n                this._timeoutHandle = null;\r\n                this._retryAt = null;\r\n            }\r\n            catch (e) {\r\n                /* Ignore this error for IE under v10 */\r\n                if (!applicationinsights_common_1.Util.getIEVersion() || applicationinsights_common_1.Util.getIEVersion() > 9) {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * error handler\r\n         */\r\n        Sender.prototype._onError = function (payload, message, event) {\r\n            applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n            this._buffer.clearSent(payload);\r\n        };\r\n        /**\r\n         * partial success handler\r\n         */\r\n        Sender.prototype._onPartialSuccess = function (payload, results) {\r\n            var failed = [];\r\n            var retry = [];\r\n            // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n            var errors = results.errors.reverse();\r\n            for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                var error = errors_1[_i];\r\n                var extracted = payload.splice(error.index, 1)[0];\r\n                if (this._isRetriable(error.statusCode)) {\r\n                    retry.push(extracted);\r\n                }\r\n                else {\r\n                    // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                    failed.push(extracted);\r\n                }\r\n            }\r\n            if (payload.length > 0) {\r\n                this._onSuccess(payload, results.itemsAccepted);\r\n            }\r\n            if (failed.length > 0) {\r\n                this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n            }\r\n            if (retry.length > 0) {\r\n                this._resendPayload(retry);\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                    \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                    \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n            }\r\n        };\r\n        /**\r\n         * success handler\r\n         */\r\n        Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n            // Uncomment if you want to use DataLossanalyzer\r\n            // DataLossAnalyzer.decrementItemsQueued(countOfItemsInPayload);\r\n            this._buffer.clearSent(payload);\r\n        };\r\n        /**\r\n         * xdr state changes\r\n         */\r\n        Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n            if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n                this._consecutiveErrors = 0;\r\n                this._onSuccess(payload, 0);\r\n            }\r\n            else {\r\n                var results = this._parseResponse(xdr.responseText);\r\n                if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                    && !this._config.isRetryDisabled()) {\r\n                    this._onPartialSuccess(payload, results);\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n                }\r\n            }\r\n        };\r\n        Sender._constructEnvelope = function (envelope) {\r\n            switch (envelope.baseType) {\r\n                case applicationinsights_common_1.Event.dataType:\r\n                    return EnvelopeCreator_1.EventEnvelopeCreator.EventEnvelopeCreator.Create(envelope);\r\n                case applicationinsights_common_1.Trace.dataType:\r\n                    return EnvelopeCreator_1.TraceEnvelopeCreator.TraceEnvelopeCreator.Create(envelope);\r\n                case applicationinsights_common_1.PageView.dataType:\r\n                    return EnvelopeCreator_1.PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(envelope);\r\n                case applicationinsights_common_1.PageViewPerformance.dataType:\r\n                    return EnvelopeCreator_1.PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(envelope);\r\n                case applicationinsights_common_1.Exception.dataType:\r\n                    return EnvelopeCreator_1.ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(envelope);\r\n                case applicationinsights_common_1.Metric.dataType:\r\n                    return EnvelopeCreator_1.MetricEnvelopeCreator.MetricEnvelopeCreator.Create(envelope);\r\n                case applicationinsights_common_1.RemoteDependencyData.dataType:\r\n                    return EnvelopeCreator_1.DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(envelope);\r\n                default:\r\n                    return null;\r\n            }\r\n        };\r\n        Sender._getDefaultAppInsightsChannelConfig = function (config, identifier) {\r\n            var resultConfig = {};\r\n            var pluginConfig = config.extensions && config.extensions[identifier] ? config.extensions[identifier] : {};\r\n            // set default values\r\n            resultConfig.endpointUrl = function () { return config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"; };\r\n            resultConfig.emitLineDelimitedJson = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.emitLineDelimitedJson); };\r\n            resultConfig.maxBatchInterval = function () { return !isNaN(pluginConfig.maxBatchInterval) ? pluginConfig.maxBatchInterval : 15000; };\r\n            resultConfig.maxBatchSizeInBytes = function () { return pluginConfig.maxBatchSizeInBytes > 0 ? pluginConfig.maxBatchSizeInBytes : 102400; }; // 100kb\r\n            resultConfig.disableTelemetry = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.disableTelemetry); };\r\n            resultConfig.enableSessionStorageBuffer = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.enableSessionStorageBuffer, true); };\r\n            resultConfig.isRetryDisabled = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.isRetryDisabled); };\r\n            resultConfig.isBeaconApiDisabled = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.isBeaconApiDisabled, true); };\r\n            return resultConfig;\r\n        };\r\n        Sender._validate = function (envelope) {\r\n            // call the appropriate Validate depending on the baseType\r\n            switch (envelope.baseType) {\r\n                case applicationinsights_common_1.Event.dataType:\r\n                    return EventValidator_1.EventValidator.EventValidator.Validate(envelope);\r\n                case applicationinsights_common_1.Trace.dataType:\r\n                    return TraceValidator_1.TraceValidator.TraceValidator.Validate(envelope);\r\n                case applicationinsights_common_1.Exception.dataType:\r\n                    return ExceptionValidator_1.ExceptionValidator.ExceptionValidator.Validate(envelope);\r\n                case applicationinsights_common_1.Metric.dataType:\r\n                    return MetricValidator_1.MetricValidator.MetricValidator.Validate(envelope);\r\n                case applicationinsights_common_1.PageView.dataType:\r\n                    return PageViewValidator_1.PageViewValidator.PageViewValidator.Validate(envelope);\r\n                case applicationinsights_common_1.PageViewPerformance.dataType:\r\n                    return PageViewPerformanceValidator_1.PageViewPerformanceValidator.PageViewPerformanceValidator.Validate(envelope);\r\n                case applicationinsights_common_1.RemoteDependencyData.dataType:\r\n                    return RemoteDepdencyValidator_1.RemoteDepdencyValidator.RemoteDepdencyValidator.Validate(envelope);\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Send Beacon API request\r\n         * @param payload {string} - The data payload to be sent.\r\n         * @param isAsync {boolean} - not used\r\n         * Note: Beacon API does not support custom headers and we are not able to get\r\n         * appId from the backend for the correct correlation.\r\n         */\r\n        Sender.prototype._beaconSender = function (payload, isAsync) {\r\n            var url = this._config.endpointUrl();\r\n            var batch = this._buffer.batchPayloads(payload);\r\n            // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n            // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n            var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n            // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n            var queued = navigator.sendBeacon(url, plainTextBatch);\r\n            if (queued) {\r\n                this._buffer.markAsSent(payload);\r\n            }\r\n            else {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API.\");\r\n            }\r\n        };\r\n        /**\r\n         * Send XMLHttpRequest\r\n         * @param payload {string} - The data payload to be sent.\r\n         * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n         */\r\n        Sender.prototype._xhrSender = function (payload, isAsync) {\r\n            var _this = this;\r\n            var xhr = new XMLHttpRequest();\r\n            xhr[applicationinsights_common_1.DisabledPropertyName] = true;\r\n            xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            // append Sdk-Context request header only in case of breeze endpoint \r\n            if (applicationinsights_common_1.Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n                xhr.setRequestHeader(applicationinsights_common_1.RequestHeaders.sdkContextHeader, applicationinsights_common_1.RequestHeaders.sdkContextHeaderAppIdRequest);\r\n            }\r\n            xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n            xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n            // compose an array of payloads\r\n            var batch = this._buffer.batchPayloads(payload);\r\n            xhr.send(batch);\r\n            this._buffer.markAsSent(payload);\r\n        };\r\n        /**\r\n         * Parses the response from the backend.\r\n         * @param response - XMLHttpRequest or XDomainRequest response\r\n         */\r\n        Sender.prototype._parseResponse = function (response) {\r\n            try {\r\n                if (response && response !== \"\") {\r\n                    var result = JSON.parse(response);\r\n                    if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                        result.itemsReceived - result.itemsAccepted == result.errors.length) {\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + applicationinsights_common_1.Util.getExceptionName(e), {\r\n                    response: response\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n         * @param payload\r\n         */\r\n        Sender.prototype._resendPayload = function (payload) {\r\n            if (!payload || payload.length === 0) {\r\n                return;\r\n            }\r\n            this._buffer.clearSent(payload);\r\n            this._consecutiveErrors++;\r\n            for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                var item = payload_1[_i];\r\n                this._buffer.enqueue(item);\r\n            }\r\n            // setup timer\r\n            this._setRetryTime();\r\n            this._setupTimer();\r\n        };\r\n        /** Calculates the time to wait before retrying in case of an error based on\r\n         * http://en.wikipedia.org/wiki/Exponential_backoff\r\n         */\r\n        Sender.prototype._setRetryTime = function () {\r\n            var SlotDelayInSeconds = 10;\r\n            var delayInSeconds;\r\n            if (this._consecutiveErrors <= 1) {\r\n                delayInSeconds = SlotDelayInSeconds;\r\n            }\r\n            else {\r\n                var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n                var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n            }\r\n            // TODO: Log the backoff time like the C# version does.\r\n            var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n            // TODO: Log the retry at time like the C# version does.\r\n            this._retryAt = retryAfterTimeSpan;\r\n        };\r\n        /**\r\n         * Sets up the timer which triggers actually sending the data.\r\n         */\r\n        Sender.prototype._setupTimer = function () {\r\n            var _this = this;\r\n            if (!this._timeoutHandle) {\r\n                var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n                var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n                this._timeoutHandle = setTimeout(function () {\r\n                    _this.triggerSend();\r\n                }, timerValue);\r\n            }\r\n        };\r\n        /**\r\n         * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n         * @param statusCode\r\n         */\r\n        Sender.prototype._isRetriable = function (statusCode) {\r\n            return statusCode == 408 // Timeout\r\n                || statusCode == 429 // Too many requests.\r\n                || statusCode == 500 // Internal server error.\r\n                || statusCode == 503; // Service unavailable.\r\n        };\r\n        Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n            if (xhr) {\r\n                return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n            }\r\n            return message;\r\n        };\r\n        /**\r\n         * Send XDomainRequest\r\n         * @param payload {string} - The data payload to be sent.\r\n         * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n         *\r\n         * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n         * to maintain consistency with the xhrSender's contract\r\n         * Note: XDomainRequest does not support custom headers and we are not able to get\r\n         * appId from the backend for the correct correlation.\r\n         */\r\n        Sender.prototype._xdrSender = function (payload, isAsync) {\r\n            var _this = this;\r\n            var xdr = new XDomainRequest();\r\n            xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n            xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n            // XDomainRequest requires the same protocol as the hosting page. \r\n            // If the protocol doesn't match, we can't send the telemetry :(. \r\n            var hostingProtocol = window.location.protocol;\r\n            if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.TransmissionFailed, \". \" +\r\n                    \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n                this._buffer.clear();\r\n                return;\r\n            }\r\n            var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n            xdr.open('POST', endpointUrl);\r\n            // compose an array of payloads\r\n            var batch = this._buffer.batchPayloads(payload);\r\n            xdr.send(batch);\r\n            this._buffer.markAsSent(payload);\r\n        };\r\n        Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n            if (xdr) {\r\n                return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n            }\r\n            return message;\r\n        };\r\n        return Sender;\r\n    }());\r\n    exports.Sender = Sender;\r\n});\r\n//# sourceMappingURL=Sender.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var MetricValidator = /** @class */ (function () {\r\n        function MetricValidator() {\r\n        }\r\n        MetricValidator.prototype.Validate = function (event) {\r\n            return false;\r\n        };\r\n        MetricValidator.MetricValidator = new MetricValidator();\r\n        return MetricValidator;\r\n    }());\r\n    exports.MetricValidator = MetricValidator;\r\n});\r\n//# sourceMappingURL=MetricValidator.js.map","define([\"require\", \"exports\", \"applicationinsights-common\"], function (require, exports, applicationinsights_common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /*\r\n     * An array based send buffer.\r\n     */\r\n    var ArraySendBuffer = /** @class */ (function () {\r\n        function ArraySendBuffer(config) {\r\n            this._config = config;\r\n            this._buffer = [];\r\n        }\r\n        ArraySendBuffer.prototype.enqueue = function (payload) {\r\n            this._buffer.push(payload);\r\n        };\r\n        ArraySendBuffer.prototype.count = function () {\r\n            return this._buffer.length;\r\n        };\r\n        ArraySendBuffer.prototype.clear = function () {\r\n            this._buffer.length = 0;\r\n        };\r\n        ArraySendBuffer.prototype.getItems = function () {\r\n            return this._buffer.slice(0);\r\n        };\r\n        ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n            if (payload && payload.length > 0) {\r\n                var batch = this._config.emitLineDelimitedJson() ?\r\n                    payload.join(\"\\n\") :\r\n                    \"[\" + payload.join(\",\") + \"]\";\r\n                return batch;\r\n            }\r\n            return null;\r\n        };\r\n        ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n            this.clear();\r\n        };\r\n        ArraySendBuffer.prototype.clearSent = function (payload) {\r\n            // not supported\r\n        };\r\n        return ArraySendBuffer;\r\n    }());\r\n    exports.ArraySendBuffer = ArraySendBuffer;\r\n    /*\r\n     * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n     */\r\n    var SessionStorageSendBuffer = /** @class */ (function () {\r\n        function SessionStorageSendBuffer(config) {\r\n            this._bufferFullMessageSent = false;\r\n            this._config = config;\r\n            var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n            var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            this._buffer = bufferItems.concat(notDeliveredItems);\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            // update DataLossAnalyzer with the number of recovered items\r\n            // Uncomment if you want to use DataLossanalyzer\r\n            // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        }\r\n        SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n            if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // sent internal log only once per page view\r\n                if (!this._bufferFullMessageSent) {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                    this._bufferFullMessageSent = true;\r\n                }\r\n                return;\r\n            }\r\n            this._buffer.push(payload);\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        };\r\n        SessionStorageSendBuffer.prototype.count = function () {\r\n            return this._buffer.length;\r\n        };\r\n        SessionStorageSendBuffer.prototype.clear = function () {\r\n            this._buffer.length = 0;\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n            this._bufferFullMessageSent = false;\r\n        };\r\n        SessionStorageSendBuffer.prototype.getItems = function () {\r\n            return this._buffer.slice(0);\r\n        };\r\n        SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n            if (payload && payload.length > 0) {\r\n                var batch = this._config.emitLineDelimitedJson() ?\r\n                    payload.join(\"\\n\") :\r\n                    \"[\" + payload.join(\",\") + \"]\";\r\n                return batch;\r\n            }\r\n            return null;\r\n        };\r\n        SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n            this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n            var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            if (sentElements instanceof Array && payload instanceof Array) {\r\n                sentElements = sentElements.concat(payload);\r\n                if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                    // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                    // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                    sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n                }\r\n                this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n            }\r\n        };\r\n        SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n            var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        };\r\n        SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n            var remaining = [];\r\n            for (var i in buffer) {\r\n                var contains = false;\r\n                for (var j in payloads) {\r\n                    if (payloads[j] === buffer[i]) {\r\n                        contains = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!contains) {\r\n                    remaining.push(buffer[i]);\r\n                }\r\n            }\r\n            ;\r\n            return remaining;\r\n        };\r\n        SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n            try {\r\n                var bufferJson = applicationinsights_common_1.Util.getSessionStorage(key);\r\n                if (bufferJson) {\r\n                    var buffer = JSON.parse(bufferJson);\r\n                    if (buffer) {\r\n                        return buffer;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + key + \", \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n            return [];\r\n        };\r\n        SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n            try {\r\n                var bufferJson = JSON.stringify(buffer);\r\n                applicationinsights_common_1.Util.setSessionStorage(key, bufferJson);\r\n            }\r\n            catch (e) {\r\n                // if there was an error, clear the buffer\r\n                // telemetry is stored in the _buffer array so we won't loose any items\r\n                applicationinsights_common_1.Util.setSessionStorage(key, JSON.stringify([]));\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + key + \", \" + applicationinsights_common_1.Util.getExceptionName(e) + \". Buffer cleared\", { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n        SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n        // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped. \r\n        SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n        return SessionStorageSendBuffer;\r\n    }());\r\n    exports.SessionStorageSendBuffer = SessionStorageSendBuffer;\r\n});\r\n//# sourceMappingURL=SendBuffer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ContextTagKeys = [\r\n        \"ai.application.ver\",\r\n        \"ai.application.build\",\r\n        \"ai.application.typeId\",\r\n        \"ai.application.applicationId\",\r\n        \"ai.application.layer\",\r\n        \"ai.device.id\",\r\n        \"ai.device.ip\",\r\n        \"ai.device.language\",\r\n        \"ai.device.locale\",\r\n        \"ai.device.model\",\r\n        \"ai.device.friendlyName\",\r\n        \"ai.device.network\",\r\n        \"ai.device.networkName\",\r\n        \"ai.device.oemName\",\r\n        \"ai.device.os\",\r\n        \"ai.device.osVersion\",\r\n        \"ai.device.roleInstance\",\r\n        \"ai.device.roleName\",\r\n        \"ai.device.screenResolution\",\r\n        \"ai.device.type\",\r\n        \"ai.device.machineName\",\r\n        \"ai.device.vmName\",\r\n        \"ai.device.browser\",\r\n        \"ai.device.browserVersion\",\r\n        \"ai.location.ip\",\r\n        \"ai.location.country\",\r\n        \"ai.location.province\",\r\n        \"ai.location.city\",\r\n        \"ai.operation.id\",\r\n        \"ai.operation.name\",\r\n        \"ai.operation.parentId\",\r\n        \"ai.operation.rootId\",\r\n        \"ai.operation.syntheticSource\",\r\n        \"ai.operation.correlationVector\",\r\n        \"ai.session.id\",\r\n        \"ai.session.isFirst\",\r\n        \"ai.session.isNew\",\r\n        \"ai.user.accountAcquisitionDate\",\r\n        \"ai.user.accountId\",\r\n        \"ai.user.userAgent\",\r\n        \"ai.user.id\",\r\n        \"ai.user.storeRegion\",\r\n        \"ai.user.authUserId\",\r\n        \"ai.user.anonUserAcquisitionDate\",\r\n        \"ai.user.authUserAcquisitionDate\",\r\n        \"ai.cloud.name\",\r\n        \"ai.cloud.role\",\r\n        \"ai.cloud.roleVer\",\r\n        \"ai.cloud.roleInstance\",\r\n        \"ai.cloud.environment\",\r\n        \"ai.cloud.location\",\r\n        \"ai.cloud.deploymentUnit\",\r\n        \"ai.internal.sdkVersion\",\r\n        \"ai.internal.agentVersion\",\r\n        \"ai.internal.nodeName\",\r\n    ];\r\n    // these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\n    var baseType = \"baseType\";\r\n    var baseData = \"baseData\";\r\n    var EnvelopeCreator = /** @class */ (function () {\r\n        function EnvelopeCreator() {\r\n        }\r\n        EnvelopeCreator.extractProperties = function (data) {\r\n            var customProperties = null;\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value !== \"number\") {\r\n                        if (!customProperties) {\r\n                            customProperties = {};\r\n                        }\r\n                        customProperties[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            return customProperties;\r\n        };\r\n        EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(data)) {\r\n                for (var key in data) {\r\n                    if (data.hasOwnProperty(key)) {\r\n                        var value = data[key];\r\n                        if (typeof value === \"number\") {\r\n                            measurements[key] = value;\r\n                        }\r\n                        else {\r\n                            properties[key] = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        EnvelopeCreator.createEnvelope = function (envelopeType, telemetryItem, data) {\r\n            var envelope = new applicationinsights_common_1.Envelope(data, envelopeType);\r\n            envelope.iKey = telemetryItem.instrumentationKey;\r\n            var iKeyNoDashes = telemetryItem.instrumentationKey.replace(/-/g, \"\");\r\n            envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n            // loop through the envelope ctx (Part A) and pick out the ones that should go in outgoing envelope tags\r\n            for (var key in telemetryItem.ctx) {\r\n                if (telemetryItem.ctx.hasOwnProperty(key)) {\r\n                    if (exports.ContextTagKeys.indexOf(key) >= 0) {\r\n                        envelope.tags[key] = telemetryItem.ctx[key];\r\n                    }\r\n                }\r\n            }\r\n            // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n            telemetryItem.tags.forEach(function (tag) {\r\n                for (var key in tag) {\r\n                    if (tag.hasOwnProperty(key)) {\r\n                        if (exports.ContextTagKeys.indexOf(key) >= 0) {\r\n                            envelope.tags[key] = tag[key];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            return envelope;\r\n        };\r\n        return EnvelopeCreator;\r\n    }());\r\n    exports.EnvelopeCreator = EnvelopeCreator;\r\n    var DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(DependencyEnvelopeCreator, _super);\r\n        function DependencyEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        DependencyEnvelopeCreator.prototype.Create = function (telemetryItem) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customMeasurements = {};\r\n            var customProperties = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var id = telemetryItem.baseData.id;\r\n            var absoluteUrl = telemetryItem.baseData.absoluteUrl;\r\n            var command = telemetryItem.baseData.command;\r\n            var totalTime = telemetryItem.baseData.totalTime;\r\n            var success = telemetryItem.baseData.success;\r\n            var resultCode = telemetryItem.baseData.resultCode;\r\n            var method = telemetryItem.baseData.method;\r\n            var baseData = new applicationinsights_common_1.RemoteDependencyData(id, absoluteUrl, command, totalTime, success, resultCode, method, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.RemoteDependencyData.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(applicationinsights_common_1.RemoteDependencyData.envelopeType, telemetryItem, data);\r\n        };\r\n        DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n        return DependencyEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.DependencyEnvelopeCreator = DependencyEnvelopeCreator;\r\n    var EventEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(EventEnvelopeCreator, _super);\r\n        function EventEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        EventEnvelopeCreator.prototype.Create = function (telemetryItem) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var eventName = telemetryItem.baseData.name;\r\n            var baseData = new applicationinsights_common_1.Event(eventName, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Event.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(applicationinsights_common_1.Event.envelopeType, telemetryItem, data);\r\n        };\r\n        EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n        return EventEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.EventEnvelopeCreator = EventEnvelopeCreator;\r\n    var ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(ExceptionEnvelopeCreator, _super);\r\n        function ExceptionEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        ExceptionEnvelopeCreator.prototype.Create = function (telemetryItem) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var exception = telemetryItem.baseData.exception;\r\n            var severityLevel = telemetryItem.baseData.severityLevel;\r\n            var baseData = new applicationinsights_common_1.Exception(exception, customProperties, customMeasurements, severityLevel);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Exception.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(applicationinsights_common_1.Exception.envelopeType, telemetryItem, data);\r\n        };\r\n        ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n        return ExceptionEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.ExceptionEnvelopeCreator = ExceptionEnvelopeCreator;\r\n    var MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(MetricEnvelopeCreator, _super);\r\n        function MetricEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        MetricEnvelopeCreator.prototype.Create = function (telemetryItem) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n            var name = telemetryItem.baseData.name;\r\n            var average = telemetryItem.baseData.average;\r\n            var sampleCount = telemetryItem.baseData.sampleCount;\r\n            var min = telemetryItem.baseData.min;\r\n            var max = telemetryItem.baseData.max;\r\n            var baseData = new applicationinsights_common_1.Metric(name, average, sampleCount, min, max, customProperties);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Metric.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(applicationinsights_common_1.Metric.envelopeType, telemetryItem, data);\r\n        };\r\n        MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n        return MetricEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.MetricEnvelopeCreator = MetricEnvelopeCreator;\r\n    var PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(PageViewEnvelopeCreator, _super);\r\n        function PageViewEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        PageViewEnvelopeCreator.prototype.Create = function (telemetryItem) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var name = telemetryItem.baseData.name;\r\n            var url = telemetryItem.baseData.uri;\r\n            var duration = telemetryItem.baseData.duration;\r\n            // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.refUri)) {\r\n                customProperties[\"refUri\"] = telemetryItem.baseData.refUri;\r\n            }\r\n            // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.pageType)) {\r\n                customProperties[\"pageType\"] = telemetryItem.baseData.pageType;\r\n            }\r\n            // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.isLoggedIn)) {\r\n                customProperties[\"isLoggedIn\"] = telemetryItem.baseData.isLoggedIn;\r\n            }\r\n            // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.pageTags)) {\r\n                var pageTags = telemetryItem.baseData.pageTags;\r\n                for (var key in pageTags) {\r\n                    if (pageTags.hasOwnProperty(key)) {\r\n                        customProperties[key] = pageTags[key];\r\n                    }\r\n                }\r\n            }\r\n            var baseData = new applicationinsights_common_1.PageView(name, url, duration, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.PageView.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(applicationinsights_common_1.PageView.envelopeType, telemetryItem, data);\r\n        };\r\n        PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n        return PageViewEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.PageViewEnvelopeCreator = PageViewEnvelopeCreator;\r\n    var PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(PageViewPerformanceEnvelopeCreator, _super);\r\n        function PageViewPerformanceEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        PageViewPerformanceEnvelopeCreator.prototype.Create = function (telemetryItem) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var name = telemetryItem.baseData.name;\r\n            var url = telemetryItem.baseData.uri;\r\n            var duration = telemetryItem.baseData.duration;\r\n            var baseData = new applicationinsights_common_1.PageViewPerformance(name, url, duration, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.PageViewPerformance.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(applicationinsights_common_1.PageViewPerformance.envelopeType, telemetryItem, data);\r\n        };\r\n        PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n        return PageViewPerformanceEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.PageViewPerformanceEnvelopeCreator = PageViewPerformanceEnvelopeCreator;\r\n    var TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(TraceEnvelopeCreator, _super);\r\n        function TraceEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        TraceEnvelopeCreator.prototype.Create = function (telemetryItem) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var message = telemetryItem.baseData.message;\r\n            var severityLevel = telemetryItem.baseData.severityLevel;\r\n            var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n            var baseData = new applicationinsights_common_1.Trace(message, customProperties, severityLevel);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Trace.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(applicationinsights_common_1.Trace.envelopeType, telemetryItem, data);\r\n        };\r\n        TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n        return TraceEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.TraceEnvelopeCreator = TraceEnvelopeCreator;\r\n});\r\n//# sourceMappingURL=EnvelopeCreator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var EventValidator = /** @class */ (function () {\r\n        function EventValidator() {\r\n        }\r\n        EventValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n            https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties || !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n            \r\n            if (!item.domainProperties || !item.domainProperties[\"name\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        EventValidator.EventValidator = new EventValidator();\r\n        return EventValidator;\r\n    }());\r\n    exports.EventValidator = EventValidator;\r\n});\r\n//# sourceMappingURL=EventValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var TraceValidator = /** @class */ (function () {\r\n        function TraceValidator() {\r\n        }\r\n        TraceValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n            \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"message\"] ||\r\n                !item.domainProperties[\"severityLevel\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        TraceValidator.TraceValidator = new TraceValidator();\r\n        return TraceValidator;\r\n    }());\r\n    exports.TraceValidator = TraceValidator;\r\n});\r\n//# sourceMappingURL=TraceValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var ExceptionValidator = /** @class */ (function () {\r\n        function ExceptionValidator() {\r\n        }\r\n        ExceptionValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"exceptions\"] ||\r\n                !ExceptionValidator._validateExceptions(item.domainProperties[\"exceptions\"])) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        // TODO implement validation of exceptions\r\n        ExceptionValidator._validateExceptions = function (exceptions) {\r\n            // typeName\r\n            // message\r\n            // parsedStack\r\n            // stack\r\n            // hasFullStack\r\n            return true;\r\n        };\r\n        ExceptionValidator.ExceptionValidator = new ExceptionValidator();\r\n        return ExceptionValidator;\r\n    }());\r\n    exports.ExceptionValidator = ExceptionValidator;\r\n});\r\n//# sourceMappingURL=ExceptionValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageViewPerformanceValidator = /** @class */ (function () {\r\n        function PageViewPerformanceValidator() {\r\n        }\r\n        PageViewPerformanceValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n            \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"domProcessing\"] ||\r\n                !item.domainProperties[\"duration\"] ||\r\n                !item.domainProperties[\"name\"] ||\r\n                !item.domainProperties[\"networkConnect\"] ||\r\n                !item.domainProperties[\"perfTotal\"] ||\r\n                !item.domainProperties[\"receivedResponse\"] ||\r\n                !item.domainProperties[\"sentRequest\"] ||\r\n                !item.domainProperties[\"url\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        PageViewPerformanceValidator.PageViewPerformanceValidator = new PageViewPerformanceValidator();\r\n        return PageViewPerformanceValidator;\r\n    }());\r\n    exports.PageViewPerformanceValidator = PageViewPerformanceValidator;\r\n});\r\n//# sourceMappingURL=PageViewPerformanceValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageViewValidator = /** @class */ (function () {\r\n        function PageViewValidator() {\r\n        }\r\n        PageViewValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"id\"] ||\r\n                !item.domainProperties[\"name\"] ||\r\n                !item.domainProperties[\"duration\"] ||\r\n                !item.domainProperties[\"url\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        PageViewValidator.PageViewValidator = new PageViewValidator();\r\n        return PageViewValidator;\r\n    }());\r\n    exports.PageViewValidator = PageViewValidator;\r\n});\r\n//# sourceMappingURL=PageViewValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var RemoteDepdencyValidator = /** @class */ (function () {\r\n        function RemoteDepdencyValidator() {\r\n        }\r\n        RemoteDepdencyValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"id\"] ||\r\n                !item.domainProperties[\"name\"] ||\r\n                !item.domainProperties[\"resultCode\"] ||\r\n                !item.domainProperties[\"duration\"] ||\r\n                !item.domainProperties[\"success\"] ||\r\n                !item.domainProperties[\"data\"] ||\r\n                !item.domainProperties[\"target\"] ||\r\n                !item.domainProperties[\"type\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        RemoteDepdencyValidator.RemoteDepdencyValidator = new RemoteDepdencyValidator();\r\n        return RemoteDepdencyValidator;\r\n    }());\r\n    exports.RemoteDepdencyValidator = RemoteDepdencyValidator;\r\n});\r\n//# sourceMappingURL=RemoteDepdencyValidator.js.map","define([\"require\", \"exports\", \"applicationinsights-common\"], function (require, exports, applicationinsights_common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Serializer = /** @class */ (function () {\r\n        function Serializer() {\r\n        }\r\n        /**\r\n         * Serializes the current object to a JSON string.\r\n         */\r\n        Serializer.serialize = function (input) {\r\n            var output = Serializer._serializeObject(input, \"root\");\r\n            return JSON.stringify(output);\r\n        };\r\n        Serializer._serializeObject = function (source, name) {\r\n            var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n            var output = {};\r\n            if (!source) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                return output;\r\n            }\r\n            if (source[circularReferenceCheck]) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                return output;\r\n            }\r\n            if (!source.aiDataContract) {\r\n                // special case for measurements/properties/tags\r\n                if (name === \"measurements\") {\r\n                    output = Serializer._serializeStringMap(source, \"number\", name);\r\n                }\r\n                else if (name === \"properties\") {\r\n                    output = Serializer._serializeStringMap(source, \"string\", name);\r\n                }\r\n                else if (name === \"tags\") {\r\n                    output = Serializer._serializeStringMap(source, \"string\", name);\r\n                }\r\n                else if (applicationinsights_common_1.Util.isArray(source)) {\r\n                    output = Serializer._serializeArray(source, name);\r\n                }\r\n                else {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                    try {\r\n                        // verify that the object can be stringified\r\n                        JSON.stringify(source);\r\n                        output = source;\r\n                    }\r\n                    catch (e) {\r\n                        // if serialization fails return an empty string\r\n                        applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            source[circularReferenceCheck] = true;\r\n            for (var field in source.aiDataContract) {\r\n                var contract = source.aiDataContract[field];\r\n                var isRequired = (typeof contract === \"function\") ? (contract() & applicationinsights_common_1.FieldType.Required) : (contract & applicationinsights_common_1.FieldType.Required);\r\n                var isHidden = (typeof contract === \"function\") ? (contract() & applicationinsights_common_1.FieldType.Hidden) : (contract & applicationinsights_common_1.FieldType.Hidden);\r\n                var isArray = contract & applicationinsights_common_1.FieldType.Array;\r\n                var isPresent = source[field] !== undefined;\r\n                var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n                if (isRequired && !isPresent && !isArray) {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                    // If not in debug mode, continue and hope the error is permissible\r\n                    continue;\r\n                }\r\n                if (isHidden) {\r\n                    // Don't serialize hidden fields\r\n                    continue;\r\n                }\r\n                var value;\r\n                if (isObject) {\r\n                    if (isArray) {\r\n                        // special case; resurse on each object in the source array\r\n                        value = Serializer._serializeArray(source[field], field);\r\n                    }\r\n                    else {\r\n                        // recurse on the source object in this field\r\n                        value = Serializer._serializeObject(source[field], field);\r\n                    }\r\n                }\r\n                else {\r\n                    // assign the source field to the output even if undefined or required\r\n                    value = source[field];\r\n                }\r\n                // only emit this field if the value is defined\r\n                if (value !== undefined) {\r\n                    output[field] = value;\r\n                }\r\n            }\r\n            delete source[circularReferenceCheck];\r\n            return output;\r\n        };\r\n        Serializer._serializeArray = function (sources, name) {\r\n            var output = undefined;\r\n            if (!!sources) {\r\n                if (!applicationinsights_common_1.Util.isArray(sources)) {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                }\r\n                else {\r\n                    output = [];\r\n                    for (var i = 0; i < sources.length; i++) {\r\n                        var source = sources[i];\r\n                        var item = Serializer._serializeObject(source, name + \"[\" + i + \"]\");\r\n                        output.push(item);\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n        Serializer._serializeStringMap = function (map, expectedType, name) {\r\n            var output = undefined;\r\n            if (map) {\r\n                output = {};\r\n                for (var field in map) {\r\n                    var value = map[field];\r\n                    if (expectedType === \"string\") {\r\n                        if (value === undefined) {\r\n                            output[field] = \"undefined\";\r\n                        }\r\n                        else if (value === null) {\r\n                            output[field] = \"null\";\r\n                        }\r\n                        else if (!value.toString) {\r\n                            output[field] = \"invalid field: toString() is not defined.\";\r\n                        }\r\n                        else {\r\n                            output[field] = value.toString();\r\n                        }\r\n                    }\r\n                    else if (expectedType === \"number\") {\r\n                        if (value === undefined) {\r\n                            output[field] = \"undefined\";\r\n                        }\r\n                        else if (value === null) {\r\n                            output[field] = \"null\";\r\n                        }\r\n                        else {\r\n                            var num = parseFloat(value);\r\n                            if (isNaN(num)) {\r\n                                output[field] = \"NaN\";\r\n                            }\r\n                            else {\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                        applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, output[field], null, true);\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n        return Serializer;\r\n    }());\r\n    exports.Serializer = Serializer;\r\n});\r\n//# sourceMappingURL=Serializer.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n    * Class encapsulates sending page views and page view performance telemetry.\r\n    */\r\n    var PageViewManager = /** @class */ (function () {\r\n        function PageViewManager(appInsights, overridePageViewDuration, core) {\r\n            this.pageViewPerformanceSent = false;\r\n            this.overridePageViewDuration = false;\r\n            this.overridePageViewDuration = overridePageViewDuration;\r\n            this.appInsights = appInsights;\r\n            if (core) {\r\n                this._channel = (core.getTransmissionControl());\r\n            }\r\n        }\r\n        /**\r\n        * Currently supported cases:\r\n        * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n        *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n        * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n        * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n        * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n        *\r\n        * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n        */\r\n        PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n            var _this = this;\r\n            var name = pageView.name;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n                pageView.name = window.document && window.document.title || \"\";\r\n            }\r\n            var uri = pageView.uri;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n                pageView.uri = window.location && window.location.href || \"\";\r\n            }\r\n            // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n            // do not provide the duration, set duration to undefined\r\n            // Also this is case 4\r\n            if (!applicationinsights_common_1.PageViewPerformance.isPerformanceTimingSupported()) {\r\n                this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                this._channel.flush();\r\n                // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n                return;\r\n            }\r\n            var pageViewSent = false;\r\n            var customDuration = undefined;\r\n            // if the performance timing is supported by the browser, calculate the custom duration\r\n            var start = applicationinsights_common_1.PageViewPerformance.getPerformanceTiming().navigationStart;\r\n            customDuration = applicationinsights_common_1.PageViewPerformance.getDuration(start, +new Date);\r\n            if (!applicationinsights_common_1.PageViewPerformance.shouldCollectDuration(customDuration)) {\r\n                customDuration = undefined;\r\n            }\r\n            // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n            // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n            var duration = pageView.duration;\r\n            if (this.overridePageViewDuration || !isNaN(duration)) {\r\n                if (isNaN(duration)) {\r\n                    // case 3\r\n                    pageView.duration = customDuration;\r\n                }\r\n                // case 2\r\n                this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                this._channel.flush();\r\n                pageViewSent = true;\r\n            }\r\n            // now try to send the page view performance telemetry\r\n            var maxDurationLimit = 60000;\r\n            var handle = setInterval(function () {\r\n                try {\r\n                    if (applicationinsights_common_1.PageViewPerformance.isPerformanceTimingDataReady()) {\r\n                        clearInterval(handle);\r\n                        // TODO: For now, sent undefined for measurements in the below code this package only supports pageViewTelemetry. Added task \r\n                        // https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310811\r\n                        var pageViewPerformance = new applicationinsights_common_1.PageViewPerformance(name, uri, null, customProperties, undefined);\r\n                        if (!pageViewPerformance.getIsValid() && !pageViewSent) {\r\n                            // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                            // That's the best value we can get that makes sense.\r\n                            pageView.duration = customDuration;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                            _this._channel.flush();\r\n                        }\r\n                        else {\r\n                            if (!pageViewSent) {\r\n                                pageView.duration = pageViewPerformance.getDurationMs();\r\n                                _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                            }\r\n                            if (!_this.pageViewPerformanceSent) {\r\n                                _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance);\r\n                                _this.pageViewPerformanceSent = true;\r\n                            }\r\n                            _this._channel.flush();\r\n                        }\r\n                    }\r\n                    else if (applicationinsights_common_1.PageViewPerformance.getDuration(start, +new Date) > maxDurationLimit) {\r\n                        // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                        // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                        clearInterval(handle);\r\n                        if (!pageViewSent) {\r\n                            pageView.duration = maxDurationLimit;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                            _this._channel.flush();\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n                }\r\n            }, 100);\r\n        };\r\n        return PageViewManager;\r\n    }());\r\n    exports.PageViewManager = PageViewManager;\r\n});\r\n//# sourceMappingURL=PageViewManager.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"./Context/Application\", \"./Context/Device\", \"./Context/Internal\", \"./Context/Location\", \"./Context/Operation\", \"./Context/Sample\", \"./Context/User\", \"./Context/Session\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, Application_1, Device_1, Internal_1, Location_1, Operation_1, Sample_1, User_1, Session_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var TelemetryContext = /** @class */ (function () {\r\n        function TelemetryContext(config, core) {\r\n            this._config = config;\r\n            this._core = core;\r\n            this._telemetryInitializers = [];\r\n            // window will be undefined in node.js where we do not want to initialize contexts\r\n            if (typeof window !== 'undefined') {\r\n                this._sessionManager = new Session_1._SessionManager(config);\r\n                this.application = new Application_1.Application();\r\n                this.device = new Device_1.Device();\r\n                this.internal = new Internal_1.Internal(config);\r\n                this.location = new Location_1.Location();\r\n                this.user = new User_1.User(config);\r\n                this.operation = new Operation_1.Operation();\r\n                this.session = new Session_1.Session();\r\n                this.sample = new Sample_1.Sample(config.sampleRate());\r\n            }\r\n            this._addDefaultTelemetryInitializers();\r\n        }\r\n        /**\r\n        * Adds internal telemetry initializer to the collection.\r\n        */\r\n        TelemetryContext.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n            this._telemetryInitializers.push(telemetryInitializer);\r\n        };\r\n        /**\r\n         * Uses channel to send telemetry object to the endpoint\r\n         */\r\n        TelemetryContext.prototype.track = function (telemetryItem) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem)) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TrackArgumentsNotSpecified, \"cannot call .track() with a null or undefined argument\", null, true);\r\n            }\r\n            else {\r\n                // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n                if (telemetryItem.name === applicationinsights_common_1.PageView.envelopeType) {\r\n                    applicationinsights_common_1._InternalLogging.resetInternalMessageCount();\r\n                }\r\n                if (this.session) {\r\n                    // If customer did not provide custom session id update sessionmanager\r\n                    if (typeof this.session.id !== \"string\") {\r\n                        this._sessionManager.update();\r\n                    }\r\n                }\r\n                this._track(telemetryItem);\r\n            }\r\n            return telemetryItem;\r\n        };\r\n        // Todo: move to separate extension\r\n        TelemetryContext.prototype._addDefaultTelemetryInitializers = function () {\r\n            if (!this._config.isBrowserLinkTrackingEnabled()) {\r\n                var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n                var dropBrowserLinkRequests = function (envelope) {\r\n                    if (envelope.name === applicationinsights_common_1.RemoteDependencyData.envelopeType) {\r\n                        var remoteData = envelope.data;\r\n                        if (remoteData && remoteData.baseData) {\r\n                            for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                                if (remoteData.baseData.name.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                this.addTelemetryInitializer(dropBrowserLinkRequests);\r\n            }\r\n        };\r\n        TelemetryContext.prototype._track = function (telemetryItem) {\r\n            var tagsItem = {};\r\n            if (this.session) {\r\n                // If customer set id, apply his context; otherwise apply context generated from cookies \r\n                if (typeof this.session.id === \"string\") {\r\n                    this._applySessionContext(tagsItem, this.session);\r\n                }\r\n                else {\r\n                    this._applySessionContext(tagsItem, this._sessionManager.automaticSession);\r\n                }\r\n            }\r\n            // set Part A fields\r\n            this._applyApplicationContext(tagsItem, this.application);\r\n            this._applyDeviceContext(tagsItem, this.device);\r\n            this._applyInternalContext(tagsItem, this.internal);\r\n            this._applyLocationContext(tagsItem, this.location);\r\n            this._applySampleContext(tagsItem, this.sample);\r\n            this._applyUserContext(tagsItem, this.user);\r\n            this._applyOperationContext(tagsItem, this.operation);\r\n            telemetryItem.tags.push(tagsItem);\r\n            // set instrumentation key\r\n            telemetryItem.instrumentationKey = this._config.instrumentationKey();\r\n            var doNotSendItem = false;\r\n            try {\r\n                var telemetryInitializersCount = this._telemetryInitializers.length;\r\n                for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n                    var telemetryInitializer = this._telemetryInitializers[i];\r\n                    if (telemetryInitializer) {\r\n                        if (telemetryInitializer.apply(null, [telemetryItem]) === false) {\r\n                            doNotSendItem = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                doNotSendItem = true;\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) }, true);\r\n            }\r\n            if (!doNotSendItem) {\r\n                if (telemetryItem.name === applicationinsights_common_1.Metric.envelopeType || this.sample.isSampledIn(telemetryItem)) {\r\n                    var iKeyNoDashes = this._config.instrumentationKey().replace(/-/g, \"\");\r\n                    telemetryItem.name = telemetryItem.name.replace(\"{0}\", iKeyNoDashes);\r\n                    // map and send data\r\n                    this._core.track(telemetryItem);\r\n                }\r\n                else {\r\n                    applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.TelemetrySampledAndNotSent, \"Telemetry is sampled and not sent to the AI service.\", { SampleRate: this.sample.sampleRate }, true);\r\n                }\r\n            }\r\n            return telemetryItem;\r\n        };\r\n        TelemetryContext.prototype._applyApplicationContext = function (tagsItem, appContext) {\r\n            if (appContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof appContext.ver === \"string\") {\r\n                    tagsItem[tagKeys.applicationVersion] = appContext.ver;\r\n                }\r\n                if (typeof appContext.build === \"string\") {\r\n                    tagsItem[tagKeys.applicationBuild] = appContext.build;\r\n                }\r\n            }\r\n        };\r\n        TelemetryContext.prototype._applyDeviceContext = function (tagsItem, deviceContext) {\r\n            var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n            if (deviceContext) {\r\n                if (typeof deviceContext.id === \"string\") {\r\n                    tagsItem[tagKeys.deviceId] = deviceContext.id;\r\n                }\r\n                if (typeof deviceContext.ip === \"string\") {\r\n                    tagsItem[tagKeys.deviceIp] = deviceContext.ip;\r\n                }\r\n                if (typeof deviceContext.language === \"string\") {\r\n                    tagsItem[tagKeys.deviceLanguage] = deviceContext.language;\r\n                }\r\n                if (typeof deviceContext.locale === \"string\") {\r\n                    tagsItem[tagKeys.deviceLocale] = deviceContext.locale;\r\n                }\r\n                if (typeof deviceContext.model === \"string\") {\r\n                    tagsItem[tagKeys.deviceModel] = deviceContext.model;\r\n                }\r\n                if (typeof deviceContext.network !== \"undefined\") {\r\n                    tagsItem[tagKeys.deviceNetwork] = deviceContext.network;\r\n                }\r\n                if (typeof deviceContext.oemName === \"string\") {\r\n                    tagsItem[tagKeys.deviceOEMName] = deviceContext.oemName;\r\n                }\r\n                if (typeof deviceContext.os === \"string\") {\r\n                    tagsItem[tagKeys.deviceOS] = deviceContext.os;\r\n                }\r\n                if (typeof deviceContext.osversion === \"string\") {\r\n                    tagsItem[tagKeys.deviceOSVersion] = deviceContext.osversion;\r\n                }\r\n                if (typeof deviceContext.resolution === \"string\") {\r\n                    tagsItem[tagKeys.deviceScreenResolution] = deviceContext.resolution;\r\n                }\r\n                if (typeof deviceContext.type === \"string\") {\r\n                    tagsItem[tagKeys.deviceType] = deviceContext.type;\r\n                }\r\n            }\r\n        };\r\n        TelemetryContext.prototype._applyInternalContext = function (tagsItem, internalContext) {\r\n            if (internalContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof internalContext.agentVersion === \"string\") {\r\n                    tagsItem[tagKeys.internalAgentVersion] = internalContext.agentVersion;\r\n                }\r\n                if (typeof internalContext.sdkVersion === \"string\") {\r\n                    tagsItem[tagKeys.internalSdkVersion] = internalContext.sdkVersion;\r\n                }\r\n            }\r\n        };\r\n        TelemetryContext.prototype._applyLocationContext = function (tagsItem, locationContext) {\r\n            if (locationContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof locationContext.ip === \"string\") {\r\n                    tagsItem[tagKeys.locationIp] = locationContext.ip;\r\n                }\r\n            }\r\n        };\r\n        TelemetryContext.prototype._applyOperationContext = function (tagsItem, operationContext) {\r\n            if (operationContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof operationContext.id === \"string\") {\r\n                    tagsItem[tagKeys.operationId] = operationContext.id;\r\n                }\r\n                if (typeof operationContext.name === \"string\") {\r\n                    tagsItem[tagKeys.operationName] = operationContext.name;\r\n                }\r\n                if (typeof operationContext.parentId === \"string\") {\r\n                    tagsItem[tagKeys.operationParentId] = operationContext.parentId;\r\n                }\r\n                if (typeof operationContext.rootId === \"string\") {\r\n                    tagsItem[tagKeys.operationRootId] = operationContext.rootId;\r\n                }\r\n                if (typeof operationContext.syntheticSource === \"string\") {\r\n                    tagsItem[tagKeys.operationSyntheticSource] = operationContext.syntheticSource;\r\n                }\r\n            }\r\n        };\r\n        TelemetryContext.prototype._applySampleContext = function (tagsItem, sampleContext) {\r\n            if (sampleContext) {\r\n                tagsItem.sampleRate = sampleContext.sampleRate;\r\n            }\r\n        };\r\n        TelemetryContext.prototype._applySessionContext = function (tags, sessionContext) {\r\n            if (sessionContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof sessionContext.id === \"string\") {\r\n                    tags[tagKeys.sessionId] = sessionContext.id;\r\n                }\r\n                if (typeof sessionContext.isFirst !== \"undefined\") {\r\n                    tags[tagKeys.sessionIsFirst] = sessionContext.isFirst;\r\n                }\r\n            }\r\n        };\r\n        TelemetryContext.prototype._applyUserContext = function (tagsItem, userContext) {\r\n            if (userContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof userContext.accountId === \"string\") {\r\n                    tagsItem[tagKeys.userAccountId] = userContext.accountId;\r\n                }\r\n                if (typeof userContext.agent === \"string\") {\r\n                    tagsItem[tagKeys.userAgent] = userContext.agent;\r\n                }\r\n                if (typeof userContext.id === \"string\") {\r\n                    tagsItem[tagKeys.userId] = userContext.id;\r\n                }\r\n                if (typeof userContext.authenticatedId === \"string\") {\r\n                    tagsItem[tagKeys.userAuthUserId] = userContext.authenticatedId;\r\n                }\r\n                if (typeof userContext.storeRegion === \"string\") {\r\n                    tagsItem[tagKeys.userStoreRegion] = userContext.storeRegion;\r\n                }\r\n            }\r\n        };\r\n        return TelemetryContext;\r\n    }());\r\n    exports.TelemetryContext = TelemetryContext;\r\n});\r\n//# sourceMappingURL=TelemetryContext.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Location = /** @class */ (function () {\r\n        function Location() {\r\n        }\r\n        return Location;\r\n    }());\r\n    exports.Location = Location;\r\n});\r\n//# sourceMappingURL=Location.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Application = /** @class */ (function () {\r\n        function Application() {\r\n        }\r\n        return Application;\r\n    }());\r\n    exports.Application = Application;\r\n});\r\n//# sourceMappingURL=Application.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Device = /** @class */ (function () {\r\n        /**\r\n         * Constructs a new instance of the Device class\r\n         */\r\n        function Device() {\r\n            // don't attempt to fingerprint browsers\r\n            this.id = \"browser\";\r\n            // Device type is a dimension in our data platform\r\n            // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n            this.type = \"Browser\";\r\n        }\r\n        return Device;\r\n    }());\r\n    exports.Device = Device;\r\n});\r\n//# sourceMappingURL=Device.js.map","define([\"require\", \"exports\", \"../ApplicationInsights\"], function (require, exports, ApplicationInsights_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Internal = /** @class */ (function () {\r\n        /**\r\n        * Constructs a new instance of the internal telemetry data class.\r\n        */\r\n        function Internal(config) {\r\n            this.sdkVersion = (config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + ApplicationInsights_1.ApplicationInsights.Version;\r\n        }\r\n        return Internal;\r\n    }());\r\n    exports.Internal = Internal;\r\n});\r\n//# sourceMappingURL=Internal.js.map","define([\"require\", \"exports\", \"applicationinsights-common\"], function (require, exports, applicationinsights_common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Operation = /** @class */ (function () {\r\n        function Operation() {\r\n            this.id = applicationinsights_common_1.Util.newId();\r\n            if (window && window.location && window.location.pathname) {\r\n                this.name = window.location.pathname;\r\n            }\r\n        }\r\n        return Operation;\r\n    }());\r\n    exports.Operation = Operation;\r\n});\r\n//# sourceMappingURL=Operation.js.map","define([\"require\", \"exports\", \"../SamplingScoreGenerator\", \"applicationinsights-common\"], function (require, exports, SamplingScoreGenerator_1, applicationinsights_common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Sample = /** @class */ (function () {\r\n        function Sample(sampleRate) {\r\n            // We're using 32 bit math, hence max value is (2^31 - 1)\r\n            this.INT_MAX_VALUE = 2147483647;\r\n            if (sampleRate > 100 || sampleRate < 0) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n                this.sampleRate = 100;\r\n            }\r\n            this.sampleRate = sampleRate;\r\n            this.samplingScoreGenerator = new SamplingScoreGenerator_1.SamplingScoreGenerator();\r\n        }\r\n        /**\r\n        * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n        */\r\n        Sample.prototype.isSampledIn = function (envelope) {\r\n            // return true as sampling will move to different extension\r\n            return true;\r\n        };\r\n        return Sample;\r\n    }());\r\n    exports.Sample = Sample;\r\n});\r\n//# sourceMappingURL=Sample.js.map","define([\"require\", \"exports\", \"./HashCodeScoreGenerator\", \"applicationinsights-common\"], function (require, exports, HashCodeScoreGenerator_1, applicationinsights_common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var SamplingScoreGenerator = /** @class */ (function () {\r\n        function SamplingScoreGenerator() {\r\n            this.hashCodeGeneragor = new HashCodeScoreGenerator_1.HashCodeScoreGenerator();\r\n        }\r\n        SamplingScoreGenerator.prototype.getSamplingScore = function (envelope) {\r\n            var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n            var score = 0;\r\n            if (envelope.tags[tagKeys.userId]) {\r\n                score = this.hashCodeGeneragor.getHashCodeScore(envelope.tags[tagKeys.userId]);\r\n            }\r\n            else if (envelope.tags[tagKeys.operationId]) {\r\n                score = this.hashCodeGeneragor.getHashCodeScore(envelope.tags[tagKeys.operationId]);\r\n            }\r\n            else {\r\n                score = Math.random();\r\n            }\r\n            return score;\r\n        };\r\n        return SamplingScoreGenerator;\r\n    }());\r\n    exports.SamplingScoreGenerator = SamplingScoreGenerator;\r\n});\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var HashCodeScoreGenerator = /** @class */ (function () {\r\n        function HashCodeScoreGenerator() {\r\n        }\r\n        HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n            var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n            return score * 100;\r\n        };\r\n        HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n            if (input == \"\") {\r\n                return 0;\r\n            }\r\n            while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n                input = input.concat(input);\r\n            }\r\n            // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n            var hash = 5381;\r\n            for (var i = 0; i < input.length; ++i) {\r\n                hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n                // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n                // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n                hash = hash & hash;\r\n            }\r\n            return Math.abs(hash);\r\n        };\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n        // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n        HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n        return HashCodeScoreGenerator;\r\n    }());\r\n    exports.HashCodeScoreGenerator = HashCodeScoreGenerator;\r\n});\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","define([\"require\", \"exports\", \"applicationinsights-common\"], function (require, exports, applicationinsights_common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var User = /** @class */ (function () {\r\n        function User(config) {\r\n            //get userId or create new one if none exists\r\n            var cookie = applicationinsights_common_1.Util.getCookie(User.userCookieName);\r\n            if (cookie) {\r\n                var params = cookie.split(User.cookieSeparator);\r\n                if (params.length > 0) {\r\n                    this.id = params[0];\r\n                }\r\n            }\r\n            this.config = config;\r\n            if (!this.id) {\r\n                this.id = applicationinsights_common_1.Util.newId();\r\n                var date = new Date();\r\n                var acqStr = applicationinsights_common_1.Util.toISOStringForIE8(date);\r\n                this.accountAcquisitionDate = acqStr;\r\n                // without expiration, cookies expire at the end of the session\r\n                // set it to 365 days from now\r\n                // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n                date.setTime(date.getTime() + 31536000000);\r\n                var newCookie = [this.id, acqStr];\r\n                var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n                applicationinsights_common_1.Util.setCookie(User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n                // If we have an ai_session in local storage this means the user actively removed our cookies.\r\n                // We should respect their wishes and clear ourselves from local storage\r\n                applicationinsights_common_1.Util.removeStorage('ai_session');\r\n            }\r\n            // We still take the account id from the ctor param for backward compatibility. \r\n            // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n            this.accountId = config.accountId ? config.accountId() : undefined;\r\n            // Get the auth user id and account id from the cookie if exists\r\n            // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n            var authCookie = applicationinsights_common_1.Util.getCookie(User.authUserCookieName);\r\n            if (authCookie) {\r\n                authCookie = decodeURI(authCookie);\r\n                var authCookieString = authCookie.split(User.cookieSeparator);\r\n                if (authCookieString[0]) {\r\n                    this.authenticatedId = authCookieString[0];\r\n                }\r\n                if (authCookieString.length > 1 && authCookieString[1]) {\r\n                    this.accountId = authCookieString[1];\r\n                }\r\n            }\r\n        }\r\n        /**\r\n        * Sets the authenticated user id and the account id in this session.\r\n        *\r\n        * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n        * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n        */\r\n        User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n            if (storeInCookie === void 0) { storeInCookie = false; }\r\n            // Validate inputs to ensure no cookie control characters.\r\n            var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n            if (isInvalidInput) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                    \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n                return;\r\n            }\r\n            // Create cookie string.\r\n            this.authenticatedId = authenticatedUserId;\r\n            var authCookie = this.authenticatedId;\r\n            if (accountId) {\r\n                this.accountId = accountId;\r\n                authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n            }\r\n            if (storeInCookie) {\r\n                // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n                // Encoding the cookie to handle unexpected unicode characters.\r\n                applicationinsights_common_1.Util.setCookie(User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n            }\r\n        };\r\n        /**\r\n         * Clears the authenticated user id and the account id from the user context.\r\n         * @returns {}\r\n         */\r\n        User.prototype.clearAuthenticatedUserContext = function () {\r\n            this.authenticatedId = null;\r\n            this.accountId = null;\r\n            applicationinsights_common_1.Util.deleteCookie(User.authUserCookieName);\r\n        };\r\n        User.prototype.validateUserInput = function (id) {\r\n            // Validate:\r\n            // 1. Id is a non-empty string.\r\n            // 2. It does not contain special characters for cookies.\r\n            if (typeof id !== 'string' ||\r\n                !id ||\r\n                id.match(/,|;|=| |\\|/)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        User.cookieSeparator = '|';\r\n        User.userCookieName = 'ai_user';\r\n        User.authUserCookieName = 'ai_authUser';\r\n        return User;\r\n    }());\r\n    exports.User = User;\r\n});\r\n//# sourceMappingURL=User.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"../../JavaScriptSDK/Extensions/ajax/ajaxUtils\"], function (require, exports, applicationinsights_common_1, ajaxUtils_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Session = /** @class */ (function () {\r\n        function Session() {\r\n        }\r\n        return Session;\r\n    }());\r\n    exports.Session = Session;\r\n    var _SessionManager = /** @class */ (function () {\r\n        function _SessionManager(config) {\r\n            if (!config) {\r\n                config = {};\r\n            }\r\n            if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n                config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n            }\r\n            if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n                config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n            }\r\n            this.config = config;\r\n            this.automaticSession = new Session();\r\n        }\r\n        _SessionManager.prototype.update = function () {\r\n            if (!this.automaticSession.id) {\r\n                this.initializeAutomaticSession();\r\n            }\r\n            var now = ajaxUtils_1.dateTime.Now();\r\n            var acquisitionExpired = now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n            var renewalExpired = now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n            // renew if acquisitionSpan or renewalSpan has ellapsed\r\n            if (acquisitionExpired || renewalExpired) {\r\n                // update automaticSession so session state has correct id                \r\n                this.automaticSession.isFirst = undefined;\r\n                this.renew();\r\n            }\r\n            else {\r\n                // do not update the cookie more often than cookieUpdateInterval\r\n                if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                    this.automaticSession.renewalDate = now;\r\n                    this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *  Record the current state of the automatic session and store it in our cookie string format\r\n         *  into the browser's local storage. This is used to restore the session data when the cookie\r\n         *  expires.\r\n         */\r\n        _SessionManager.prototype.backup = function () {\r\n            this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        };\r\n        /**\r\n         *  Use ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n         *  initialize the automatic session.\r\n         */\r\n        _SessionManager.prototype.initializeAutomaticSession = function () {\r\n            var cookie = applicationinsights_common_1.Util.getCookie('ai_session');\r\n            if (cookie && typeof cookie.split === \"function\") {\r\n                this.initializeAutomaticSessionWithData(cookie);\r\n            }\r\n            else {\r\n                // There's no cookie, but we might have session data in local storage\r\n                // This can happen if the session expired or the user actively deleted the cookie\r\n                // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n                // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n                var storage = applicationinsights_common_1.Util.getStorage('ai_session');\r\n                if (storage) {\r\n                    this.initializeAutomaticSessionWithData(storage);\r\n                }\r\n            }\r\n            if (!this.automaticSession.id) {\r\n                this.automaticSession.isFirst = true;\r\n                this.renew();\r\n            }\r\n        };\r\n        /**\r\n         *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n         *  use this data to initialize automaticSession.\r\n         *\r\n         *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n         */\r\n        _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n            var params = sessionData.split(\"|\");\r\n            if (params.length > 0) {\r\n                this.automaticSession.id = params[0];\r\n            }\r\n            try {\r\n                if (params.length > 1) {\r\n                    var acq = +params[1];\r\n                    this.automaticSession.acquisitionDate = +new Date(acq);\r\n                    this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n                }\r\n                if (params.length > 2) {\r\n                    var renewal = +params[2];\r\n                    this.automaticSession.renewalDate = +new Date(renewal);\r\n                    this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n                }\r\n            }\r\n            catch (e) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.CRITICAL, applicationinsights_common_1._InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n            if (this.automaticSession.renewalDate == 0) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n            }\r\n        };\r\n        _SessionManager.prototype.renew = function () {\r\n            var now = ajaxUtils_1.dateTime.Now();\r\n            this.automaticSession.id = applicationinsights_common_1.Util.newId();\r\n            this.automaticSession.acquisitionDate = now;\r\n            this.automaticSession.renewalDate = now;\r\n            this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n            if (!applicationinsights_common_1.Util.canUseLocalStorage()) {\r\n                applicationinsights_common_1._InternalLogging.throwInternal(applicationinsights_common_1.LoggingSeverity.WARNING, applicationinsights_common_1._InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n            }\r\n        };\r\n        _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n            // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n            // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n            var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n            var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n            var cookieExpiry = new Date();\r\n            var cookie = [guid, acq, renewal];\r\n            if (acquisitionExpiry < renewalExpiry) {\r\n                cookieExpiry.setTime(acquisitionExpiry);\r\n            }\r\n            else {\r\n                cookieExpiry.setTime(renewalExpiry);\r\n            }\r\n            var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n            applicationinsights_common_1.Util.setCookie('ai_session', cookie.join('|') + ';expires=' + cookieExpiry.toUTCString(), cookieDomnain);\r\n            this.cookieUpdatedTimestamp = ajaxUtils_1.dateTime.Now();\r\n        };\r\n        _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n            // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n            // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n            // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n            applicationinsights_common_1.Util.setStorage('ai_session', [guid, acq, renewal].join('|'));\r\n        };\r\n        _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n        _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n        _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n        return _SessionManager;\r\n    }());\r\n    exports._SessionManager = _SessionManager;\r\n});\r\n//# sourceMappingURL=Session.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var extensions = /** @class */ (function () {\r\n        function extensions() {\r\n        }\r\n        extensions.IsNullOrUndefined = function (obj) {\r\n            return typeof (obj) === \"undefined\" || obj === null;\r\n        };\r\n        return extensions;\r\n    }());\r\n    exports.extensions = extensions;\r\n    var stringUtils = /** @class */ (function () {\r\n        function stringUtils() {\r\n        }\r\n        stringUtils.GetLength = function (strObject) {\r\n            var res = 0;\r\n            if (!extensions.IsNullOrUndefined(strObject)) {\r\n                var stringified = \"\";\r\n                try {\r\n                    stringified = strObject.toString();\r\n                }\r\n                catch (ex) {\r\n                    // some troubles with complex object\r\n                }\r\n                res = stringified.length;\r\n                res = isNaN(res) ? 0 : res;\r\n            }\r\n            return res;\r\n        };\r\n        return stringUtils;\r\n    }());\r\n    exports.stringUtils = stringUtils;\r\n    var dateTime = /** @class */ (function () {\r\n        function dateTime() {\r\n        }\r\n        ///<summary>Return the number of milliseconds since 1970/01/01 in local timezon</summary>\r\n        dateTime.Now = (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n        ///<summary>Gets duration between two timestamps</summary>\r\n        dateTime.GetDuration = function (start, end) {\r\n            var result = null;\r\n            if (start !== 0 && end !== 0 && !extensions.IsNullOrUndefined(start) && !extensions.IsNullOrUndefined(end)) {\r\n                result = end - start;\r\n            }\r\n            return result;\r\n        };\r\n        return dateTime;\r\n    }());\r\n    exports.dateTime = dateTime;\r\n    var EventHelper = /** @class */ (function () {\r\n        function EventHelper() {\r\n        }\r\n        ///<summary>Binds the specified function to an event, so that the function gets called whenever the event fires on the object</summary>\r\n        ///<param name=\"obj\">Object to which </param>\r\n        ///<param name=\"eventNameWithoutOn\">String that specifies any of the standard DHTML Events without \"on\" prefix</param>\r\n        ///<param name=\"handlerRef\">Pointer that specifies the function to call when event fires</param>\r\n        ///<returns>True if the function was bound successfully to the event, otherwise false</returns>\r\n        EventHelper.AttachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n            var result = false;\r\n            if (!extensions.IsNullOrUndefined(obj)) {\r\n                if (!extensions.IsNullOrUndefined(obj.attachEvent)) {\r\n                    // IE before version 9                    \r\n                    obj.attachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n                    result = true;\r\n                }\r\n                else {\r\n                    if (!extensions.IsNullOrUndefined(obj.addEventListener)) {\r\n                        // all browsers except IE before version 9\r\n                        obj.addEventListener(eventNameWithoutOn, handlerRef, false);\r\n                        result = true;\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        EventHelper.DetachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n            if (!extensions.IsNullOrUndefined(obj)) {\r\n                if (!extensions.IsNullOrUndefined(obj.detachEvent)) {\r\n                    obj.detachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n                }\r\n                else {\r\n                    if (!extensions.IsNullOrUndefined(obj.removeEventListener)) {\r\n                        obj.removeEventListener(eventNameWithoutOn, handlerRef, false);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return EventHelper;\r\n    }());\r\n    exports.EventHelper = EventHelper;\r\n});\r\n//# sourceMappingURL=ajaxUtils.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var TelemetryItemCreator = /** @class */ (function () {\r\n        function TelemetryItemCreator() {\r\n        }\r\n        TelemetryItemCreator.createItem = function (pageView, baseType, envelopeName, customProperties) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(pageView) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(baseType) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(envelopeName)) {\r\n                throw Error(\"pageView doesn't contain all required fields\");\r\n            }\r\n            ;\r\n            return TelemetryItemCreator.creator.create(pageView, baseType, envelopeName, customProperties);\r\n        };\r\n        TelemetryItemCreator.prototype.create = function (pageView, baseType, envelopeName, customProperties) {\r\n            envelopeName = applicationinsights_common_1.DataSanitizer.sanitizeString(envelopeName) || applicationinsights_common_1.Util.NotSpecified;\r\n            if (baseType === applicationinsights_common_1.PageView.dataType) {\r\n                var item = {\r\n                    name: envelopeName,\r\n                    timestamp: new Date(),\r\n                    instrumentationKey: \"\",\r\n                    ctx: {},\r\n                    tags: [],\r\n                    data: {},\r\n                    baseType: baseType,\r\n                    baseData: pageView\r\n                };\r\n                // Part C\r\n                if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(customProperties)) {\r\n                    for (var prop in customProperties) {\r\n                        if (customProperties.hasOwnProperty(prop)) {\r\n                            item.data[prop] = customProperties[prop];\r\n                        }\r\n                    }\r\n                }\r\n                return item;\r\n            }\r\n            throw Error(\"Not implemented\");\r\n        };\r\n        TelemetryItemCreator.creator = new TelemetryItemCreator();\r\n        return TelemetryItemCreator;\r\n    }());\r\n    exports.TelemetryItemCreator = TelemetryItemCreator;\r\n});\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","/// <reference types=\"applicationinsights-core-js\" />\r\n/// <reference types=\"applicationinsights-common\" />\r\n/// <reference types=\"applicationinsights-analytics-js\" />\r\n/// <reference types=\"applicationinsights-channel-js\" />\r\n\r\nimport { IConfiguration, AppInsightsCore, IAppInsightsCore } from \"applicationinsights-core-js\";\r\nimport { ApplicationInsights } from \"applicationinsights-analytics-js\";\r\nimport { Util, _InternalLogging, LoggingSeverity, _InternalMessageId, IConfig } from \"applicationinsights-common\";\r\nimport { Sender } from \"applicationinsights-channel-js\";\r\n\r\n\r\n\"use strict\";\r\n\r\nexport interface Snippet {\r\n    queue: Array<() => void>;\r\n    config: IConfiguration;\r\n}\r\n\r\nexport class Initialization {\r\n    public snippet: Snippet;\r\n    public config: IConfiguration;\r\n    private core: IAppInsightsCore;\r\n    private appInsights: ApplicationInsights;\r\n\r\n    constructor(snippet: Snippet) {\r\n\r\n        // initialize the queue and config in case they are undefined\r\n        snippet.queue = snippet.queue || [];\r\n        var config: IConfiguration = snippet.config || <any>{};\r\n\r\n        // ensure instrumentationKey is specified\r\n        if (config && !config.instrumentationKey) {\r\n            config = <any>snippet;\r\n            ApplicationInsights.Version = \"2.0.0\";\r\n        }\r\n\r\n        this.appInsights = new ApplicationInsights();\r\n        // set default values using config passed through snippet\r\n        config = Initialization.getDefaultConfig(config, this.appInsights.identifier);\r\n\r\n        this.snippet = snippet;\r\n        this.config = config;\r\n    }\r\n\r\n    public loadAppInsights() {\r\n\r\n        this.core = new AppInsightsCore();\r\n        let extensions = [];\r\n        let appInsightsChannel : Sender = new Sender();\r\n\r\n\r\n\r\n        extensions.push(appInsightsChannel);\r\n        extensions.push(this.appInsights);\r\n\r\n        // initialize core\r\n        this.core.initialize(this.config, extensions);\r\n        \r\n        // initialize extensions\r\n        this.appInsights.initialize(this.config, this.core, extensions);\r\n        appInsightsChannel.initialize(this.config);\r\n        return this.appInsights;\r\n    }\r\n\r\n    public emptyQueue() {\r\n\r\n        // call functions that were queued before the main script was loaded\r\n        try {\r\n            if (Util.isArray(this.snippet.queue)) {\r\n                // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                var length = this.snippet.queue.length;\r\n                for (var i = 0; i < length; i++) {\r\n                    var call = this.snippet.queue[i];\r\n                    call();\r\n                }\r\n\r\n                this.snippet.queue = undefined;\r\n                delete this.snippet.queue;\r\n            }\r\n        } catch (exception) {\r\n            var properties: any = {};\r\n            if (exception && typeof exception.toString === \"function\") {\r\n                properties.exception = exception.toString();\r\n            }\r\n\r\n            // need from core\r\n            // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n            //     LoggingSeverity.WARNING,\r\n            //     _InternalMessageId.FailedToSendQueuedTelemetry,\r\n            //     \"Failed to send queued telemetry\",\r\n            //     properties);\r\n        }\r\n    }\r\n\r\n    public pollInteralLogs(appInsightsInstance: ApplicationInsights) {\r\n        // return setInterval(() => {\r\n        //     var queue: Array<_InternalLogMessage> = ApplicationInsights._InternalLogging.queue;\r\n        //     var length = queue.length;\r\n        //     for (var i = 0; i < length; i++) {\r\n        //         appInsightsInstance.trackTrace(queue[i].message);\r\n        //     }\r\n        //     queue.length = 0;\r\n        // }, this.config.diagnosticLogInterval);\r\n    }\r\n\r\n    public addHousekeepingBeforeUnload(appInsightsInstance: ApplicationInsights): void {\r\n        // Add callback to push events when the user navigates away\r\n\r\n        if (!appInsightsInstance.config.disableFlushOnBeforeUnload && ('onbeforeunload' in window)) {\r\n            var performHousekeeping = function () {\r\n                // Adds the ability to flush all data before the page unloads.\r\n                // Note: This approach tries to push an async request with all the pending events onbeforeunload.\r\n                // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                // Telemetry here will help us analyze how effective this approach is.\r\n                // Another approach would be to make this call sync with a acceptable timeout to reduce the \r\n                // impact on user experience.\r\n                \r\n                //appInsightsInstance.context._sender.triggerSend();\r\n\r\n                this.core.getTransmissionControl().flush(true);\r\n                // Back up the current session to local storage\r\n                // This lets us close expired sessions after the cookies themselves expire\r\n                appInsightsInstance.context._sessionManager.backup();\r\n            };\r\n\r\n            if (!Util.addEventHandler('beforeunload', performHousekeeping)) {\r\n                _InternalLogging.throwInternal(\r\n                    LoggingSeverity.CRITICAL,\r\n                    _InternalMessageId.FailedToAddHandlerForOnBeforeUnload,\r\n                    'Could not add handler for beforeunload');\r\n            }\r\n        }\r\n    }\r\n\r\n    public static getDefaultConfig(configuration?: IConfiguration, identifier?: string): IConfiguration {\r\n        if (!configuration) {\r\n            configuration = <IConfiguration>{};\r\n        }\r\n\r\n        if (configuration) {\r\n            identifier = identifier ? identifier : \"AppAnalytics\"; // To do: define constant        \r\n        }\r\n\r\n        let config = configuration.extensions ? <IConfig>configuration.extensions[identifier] : {};\r\n\r\n        // set default values\r\n        configuration.endpointUrl = configuration.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\";\r\n        config.sessionRenewalMs = 30 * 60 * 1000;\r\n        config.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n        \r\n        config.enableDebug = Util.stringToBoolOrDefault(config.enableDebug);\r\n        config.disableExceptionTracking = Util.stringToBoolOrDefault(config.disableExceptionTracking);\r\n        config.verboseLogging = Util.stringToBoolOrDefault(config.verboseLogging);\r\n        config.diagnosticLogInterval = config.diagnosticLogInterval || 10000;\r\n        config.autoTrackPageVisitTime = Util.stringToBoolOrDefault(config.autoTrackPageVisitTime);\r\n\r\n        if (isNaN(config.samplingPercentage) || config.samplingPercentage <= 0 || config.samplingPercentage >= 100) {\r\n            config.samplingPercentage = 100;\r\n        }\r\n\r\n        config.disableAjaxTracking = Util.stringToBoolOrDefault(config.disableAjaxTracking)\r\n        config.maxAjaxCallsPerView = !isNaN(config.maxAjaxCallsPerView) ? config.maxAjaxCallsPerView : 500;\r\n        \r\n        config.disableCorrelationHeaders = Util.stringToBoolOrDefault(config.disableCorrelationHeaders);\r\n        config.correlationHeaderExcludedDomains = config.correlationHeaderExcludedDomains || [\r\n            \"*.blob.core.windows.net\", \r\n            \"*.blob.core.chinacloudapi.cn\",\r\n            \"*.blob.core.cloudapi.de\",\r\n            \"*.blob.core.usgovcloudapi.net\"];\r\n        config.disableFlushOnBeforeUnload = Util.stringToBoolOrDefault(config.disableFlushOnBeforeUnload);\r\n        config.isCookieUseDisabled = Util.stringToBoolOrDefault(config.isCookieUseDisabled);\r\n        config.isStorageUseDisabled = Util.stringToBoolOrDefault(config.isStorageUseDisabled);\r\n        config.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(config.isBrowserLinkTrackingEnabled);\r\n        config.enableCorsCorrelation = Util.stringToBoolOrDefault(config.enableCorsCorrelation);\r\n\r\n        return configuration;\r\n    }\r\n}"],"sourceRoot":""}