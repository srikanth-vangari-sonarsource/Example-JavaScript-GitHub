{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/applicationinsights-core-js/bundle/applicationinsights-core-js.js","webpack:///./node_modules/applicationinsights-common/bundle/applicationinsights-common.js","webpack:///./node_modules/applicationinsights-common/bundle/Util.js","webpack:///./node_modules/applicationinsights-common/bundle/Enums.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/DataSanitizer.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Domain.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/CoreUtils.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/PageViewData.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/applicationinsights-analytics-js.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK.Enums/EventsDiscardedReason.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/NotificationManager.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/DiagnosticLogger.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK.Enums/LoggingEnums.js","webpack:///./node_modules/applicationinsights-common/bundle/RequestResponseHeaders.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Data.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Base.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/EventData.js","webpack:///../../Init.ts","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/ApplicationInsights.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Metric.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/MetricData.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK.Interfaces/IChannelControls.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/AppInsightsCore.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/DataPoint.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/DataPoint.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/DataPointType.js","webpack:///./node_modules/applicationinsights-common/bundle/Constants.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/Envelope.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Envelope.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Event.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Exception.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/StackFrame.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/ExceptionData.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/ExceptionDetails.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/PageView.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/RemoteDependencyData.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/RemoteDependencyData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Trace.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/MessageData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/PageViewPerformance.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/PageViewPerfData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/Data.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/SeverityLevel.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/ContextTagKeys.js","webpack:///./node_modules/applicationinsights-common/bundle/TelemetryItemCreator.js","webpack:///./node_modules/applicationinsights-analytics-js/bundle/JavaScriptSDK/Telemetry/PageViewManager.js","webpack:///../../Initialization.ts","webpack:///./node_modules/applicationinsights-channel-js/bundle/applicationinsights-channel-js.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/Sender.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/PageViewPerformanceValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/SendBuffer.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/EnvelopeCreator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/EventValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/TraceValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/ExceptionValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/MetricValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/PageViewValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/RemoteDepdencyValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/Serializer.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/Offline.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/applicationinsights-properties-js.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/PropertiesPlugin.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/Context/Device.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/Context/Session.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/Context/Application.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/Context/Internal.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/Context/Location.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/Context/Operation.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/Context/User.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/Context/Sample.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/SamplingScoreGenerator.js","webpack:///./node_modules/applicationinsights-properties-js/bundle/HashCodeScoreGenerator.js","webpack:///./node_modules/applicationinsights-dependencies-js/bundle/applicationinsights-dependencies-js.js","webpack:///./node_modules/applicationinsights-dependencies-js/bundle/ajax.js","webpack:///./node_modules/applicationinsights-dependencies-js/bundle/ajaxRecord.js","webpack:///./node_modules/applicationinsights-dependencies-js/bundle/ajaxUtils.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","require","IChannelControls_1","EventsDiscardedReason_1","AppInsightsCore_1","CoreUtils_1","NotificationManager_1","DiagnosticLogger_1","LoggingEnums_1","MinChannelPriorty","EventsDiscardedReason","AppInsightsCore","CoreUtils","NotificationManager","DiagnosticLogger","_InternalLogMessage","_InternalMessageId","LoggingSeverity","apply","Util_1","Enums_1","RequestResponseHeaders_1","Constants_1","Data_1","Base_1","Envelope_1","Event_1","Exception_1","Metric_1","PageView_1","PageViewData_1","RemoteDependencyData_1","Trace_1","PageViewPerformance_1","Data_2","SeverityLevel_1","ContextTagKeys_1","DataSanitizer_1","TelemetryItemCreator_1","Util","CorrelationIdHelper","UrlHelper","DateTimeUtils","FieldType","RequestHeaders","DisabledPropertyName","AIData","Data","AIBase","Base","Envelope","Event","Exception","Metric","PageView","PageViewData","RemoteDependencyData","Trace","PageViewPerformance","SeverityLevel","ContextTagKeys","DataSanitizer","TelemetryItemCreator","applicationinsights_core_js_1","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","StorageType","LocalStorage","storageType","fail","uid","storage","Date","localStorage","sessionStorage","setItem","getItem","removeItem","exception","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","logger","e","throwInternal","WARNING","BrowserCannotReadLocalStorage","getExceptionName","dump","setStorage","data","BrowserCannotWriteLocalStorage","removeStorage","BrowserFailedRemovalFromLocalStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","push","getSessionStorage","BrowserCannotReadSessionStorage","setSessionStorage","BrowserCannotWriteSessionStorage","removeSessionStorage","BrowserFailedRemovalFromSessionStorage","disableCookies","_canUseCookies","canUseCookies","document","cookie","CannotAccessCookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","str","defaultValue","toString","getCookie","length","cookieName","cookies","split","trim","substring","deleteCookie","replace","newId","result","random","Math","charAt","floor","isArray","obj","isError","isDate","toISOStringForIE8","date","toISOString","pad","num","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","message","url","lineNumber","columnNumber","error","objectTypeDump","propertyValueDump","JSON","stringify","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","NotSpecified","parseUrl","htmlAnchorElement","createElement","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","canIncludeCorrelationHeader","config","requestUrl","currentHost","disableCorrelationHeaders","requestHost","host","enableCorsCorrelation","excludedDomains","correlationHeaderExcludedDomains","RegExp","test","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","requestContextTargetKey","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","pathName","target","parsedUrl","sanitizeString","Now","performance","now","timing","navigationStart","getTime","GetDuration","start","end","isNullOrUndefined","sanitizeKeyAndAddUniqueness","map","origLength","field","sanitizeKey","uniqueField","MAX_NAME_LENGTH","padNumber","NameTooLong","maxLength","MAX_STRING_LENGTH","StringValueTooLong","sanitizeUrl","sanitizeInput","MAX_URL_LENGTH","UrlTooLong","sanitizeMessage","MAX_MESSAGE_LENGTH","MessageTruncated","sanitizeException","MAX_EXCEPTION_LENGTH","ExceptionTruncated","sanitizeProperties","properties","tempProps","prop","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","IdTooLong","input","_msgId","substr","Domain","newGuid","GuidRegex","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","EventData_1","_super","_this","ver","EventData","ApplicationInsights_1","ApplicationInsights","Unknown","NonRetryableStatus","InvalidEvent","SizeLimitExceeded","KillSwitch","QueueFull","listeners","addNotificationListener","listener","removeNotificationListener","index","splice","eventsSent","events","_loop_1","this_1","setTimeout","eventsDiscarded","reason","_loop_2","this_2","msgId","msg","isUserAct","messageId","AiUserActionablePrefix","AiNonUserActionablePrefix","diagnosticText","sanitizeDiagnosticText","text","dataType","AIInternalMessagePrefix","enableDebugExceptions","consoleLoggingLevel","telemetryLoggingLevel","maxInternalMessageLimit","queue","_messageCount","_messageLogged","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","severity","messageKey","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_areInternalMessagesThrottled","logMessage","throttleLimitMessage","throttleMessage","MessageLimitPerPVExceeded","BrowserDoesNotSupportLocalStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","SessionStorageBufferFull","requestContextHeader","requestContextAppIdFormat","requestIdHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","Domain_1","aiName","applicationinsights_analytics_js_1","appInsightsDefaultConfig","Initialization_1","Initialization","getDefaultConfig","initialize","snippet","initialization","appInsightsLocal","loadAppInsights","emptyQueue","addHousekeepingBeforeUnload","applicationinsights_common_1","PageViewManager_1","identifier","priority","_isInitialized","_trackAjaxAttempts","_initialize","processTelemetry","env","doNotSendItem","telemetryInitializersCount","_telemetryInitializers","telemetryInitializer","_logger","CRITICAL","_nextPlugin","setNextPlugin","next","trackTrace","trace","customProperties","telemetryItem","envelopeType","_setTelemetryNameAndIKey","core","track","trackMetric","metric","trackPageView","pageView","_pageViewManager","autoTrackPageVisitTime","_pageVisitTimeManager","trackPreviousPageVisit","uri","sendPageViewInternal","systemProperties","sendPageViewPerformanceInternal","pageViewPerformance","trackPageViewPerformance","item","startTrackPage","title","_pageTracking","stopTrackPage","stop","trackException","_onerror","URL","_sendCORSException","Error","severityLevel","errorString","addTelemetryInitializer","extensions","_globalconfig","instrumentationKey","extensionConfig","defaults","isCookieUseDisabled","isStorageUseDisabled","configGetters","accountId","sessionRenewalMs","sessionExpirationMs","sampleRate","samplingPercentage","cookieDomain","sdkExtension","isBrowserLinkTrackingEnabled","appId","PageViewManager","overridePageViewDuration","_addDefaultTelemetryInitializers","Timing","action","duration","pageViewItem","disableExceptionTracking","autoExceptionInstrumented","originalOnError_1","instance_1","onerror","handled","browserLinkPaths_1","_addTelemetryInitializer","envelope","baseType","remoteData","baseData","iKeyNoDashes","Version","_name","_events","getDuration","MetricData_1","DataPoint_1","count","max","aiDataContract","Required","metrics","Default","dataPoint","DataPoint","MetricData","_extensions","_channelController","ChannelController","_notificationManager","forEach","extension","validationError","isValid_1","_a","concat","sort","extA","extB","typeExtA","typeExtB","ext","idx","curr","ChannelControllerPriority","getTransmissionControls","ChannelControls","_notifiyInvalidEvent","timestamp","_validateTelmetryItem","pollInternalLogs","diagnosticLoggingInterval","setInterval","channelQueue","queues","configurable","channels","queueItem","arr","plugin","arguments","kind","stdDev","DataPointType_1","DataPointType","Measurement","time","iKey","Hidden","tags","StackFrame_1","ExceptionData_1","ExceptionDetails_1","exceptions","_ExceptionDetails","CreateSimpleException","typeName","assembly","fileName","details","line","hasFullStack","ExceptionData","outerId","parsedStack","parseStack","frames","level","totalSizeInBytes","frame","_StackFrame","regex","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","ExceptionDetails","matches","match","baseSize","StackFrame","durationMs","Util_2","commandName","success","resultCode","type","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData_1","MessageData","PageViewPerfData_1","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","isValid","getPerformanceTiming","total","loadEventEnd","network","connectEnd","request","requestStart","responseStart","response","responseEnd","dom","shouldCollectDuration","getIsValid","getDurationMs","isPerformanceTimingSupported","isPerformanceTimingDataReady","domainLookupStart","domLoading","durations","_i","botAgentNames","isGoogleBot","i_1","MAX_DURATION_ALLOWED","PageViewPerfData","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalSdkVersion","internalAgentVersion","internalNodeName","envelopeName","ctx","appInsights","pageViewPerformanceSent","_channel","q","flush","pageViewSent","customDuration","handle","clearInterval","applicationinsights_properties_js_1","PropertiesPlugin","dependencies","applicationinsights_dependencies_js_1","AjaxPlugin","setAuthenticatedUserContext","authenticatedUserId","storeInCookie","user","clearAuthenticatedUserContext","trackDependencyData","dependency","appInsightsChannel","applicationinsights_channel_js_1","Sender","pollInteralLogs","appInsightsInstance","disableFlushOnBeforeUnload","channel","_sessionManager","backup","configuration","enableDebug","diagnosticLogInterval","disableAjaxTracking","maxAjaxCallsPerView","Sender_1","SendBuffer_1","EnvelopeCreator_1","EventValidator_1","TraceValidator_1","ExceptionValidator_1","MetricValidator_1","PageViewPerformanceValidator_1","PageViewValidator_1","RemoteDepdencyValidator_1","Serializer_1","applicationinsights_core_js_2","Offline_1","_XMLHttpRequestSupported","pause","resume","triggerSend","teardown","_serializer","Serializer","_consecutiveErrors","_retryAt","_lastSend","_config","_getDefaultAppInsightsChannelConfig","_sender","_buffer","enableSessionStorageBuffer","SessionStorageSendBuffer","ArraySendBuffer","isBeaconApiDisabled","_beaconSender","XMLHttpRequest","_xhrSender","XDomainRequest","_xdrSender","disableTelemetry","_validate","aiEnvelope","_constructEnvelope","payload","serialize","bufferPayload","getItems","batch","batchPayloads","maxBatchSizeInBytes","enqueue","_setupTimer","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","_appId","_parseResponse","responseText","status","isRetryDisabled","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","Offline","isOffline","_onPartialSuccess","_onSuccess","async","clear","clearTimeout","_timeoutHandle","event","clearSent","results","failed","retry","errors_1","errors","reverse","extracted","statusCode","itemsAccepted","itemsReceived","join","_xdrOnLoad","xdr","_formatErrorMessageXdr","EventEnvelopeCreator","Create","TraceEnvelopeCreator","PageViewEnvelopeCreator","PageViewPerformanceEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","DependencyEnvelopeCreator","resultConfig","pluginConfig","emitLineDelimitedJson","maxBatchInterval","EventValidator","Validate","TraceValidator","ExceptionValidator","MetricValidator","PageViewValidator","PageViewPerformanceValidator","RemoteDepdencyValidator","isAsync","plainTextBatch","Blob","markAsSent","open","setRequestHeader","onreadystatechange","send","parse","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","retryAfterTimeSpan","retryInterval","timerValue","onload","hostingProtocol","lastIndexOf","_bufferFullMessageSent","bufferItems","getBuffer","BUFFER_KEY","notDeliveredItems","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","setBuffer","removePayloadsFromBuffer","sentElements","payloads","buffer","remaining","contains","j","bufferJson","EnvelopeCreator","extractProperties","extractPropsAndMeasurements","createEnvelope","tag","customMeasurements","bd","command","average","sampleCount","refUri","pageType","isLoggedIn","pageTags","_validateExceptions","output","_serializeObject","source","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","OfflineListener","_onlineStatus","_setOnline","_setOffline","isListening","body","ononline","onoffline","isOnline","onLine","PropertiesPlugin_1","default","Session_1","Application_1","Device_1","Internal_1","Location_1","Operation_1","User_1","Sample_1","_extensionConfig","_SessionManager","application","Application","device","Device","internal","Internal","Location","User","operation","Operation","session","Session","sample","Sample","isSampledIn","update","_processTelemetryInternal","nextPlugin","tagsItem","_applySessionContext","automaticSession","_applyApplicationContext","_applyDeviceContext","_applyInternalContext","_applyLocationContext","_applySampleContext","_applyUserContext","_applyOperationContext","sessionContext","tagKeys","isFirst","appContext","build","deviceContext","ip","language","locale","model","oemName","os","osversion","resolution","internalContext","agentVersion","sdkVersion","locationContext","sampleContext","operationContext","parentId","rootId","syntheticSource","userContext","agent","authenticatedId","storeRegion","acquisitionSpan","renewalSpan","initializeAutomaticSession","acquisitionExpired","acquisitionDate","renewalExpired","renewalDate","renew","cookieUpdatedTimestamp","cookieUpdateInterval","initializeAutomaticSessionWithData","sessionData","params","acq","renewal","guid","acquisitionExpiry","renewalExpiry","cookieExpiry","setTime","cookieDomnain","toUTCString","userCookieName","cookieSeparator","acqStr","accountAcquisitionDate","newCookie","authCookie","authUserCookieName","authCookieString","decodeURI","validateUserInput","encodeURI","SamplingScoreGenerator_1","INT_MAX_VALUE","samplingRate","samplingScoreGenerator","SamplingScoreGenerator","HashCodeScoreGenerator_1","hashCodeGeneragor","HashCodeScoreGenerator","getSamplingScore","getHashCodeScore","getHashCode","MIN_INPUT_LENGTH","hash","charCodeAt","abs","ajax_1","AjaxMonitor","ajaxRecord_1","ajaxUtils_1","currentWindowHost","initialized","isMonitoredInstance","excludeAjaxDataValidation","ajaxData","supportsMonitoring","abort","ex","instrumentOpen","originalOpen","ajaxMonitorInstance","xhrMonitoringState","openDone","openHandler","_core","ajaxDiagnosticsMessage","getFailedAjaxDiagnosticsMessage","ajaxRecord","attachToOnReadyStateChange","instrumentSend","originalSend","content","sendDone","sendHandler","requestSentTime","instrumentAbort","originalAbort","abortDone","aborted","onreadystatechangeCallbackAttached","EventHelper","AttachEvent","onAjaxComplete","exceptionText","responseFinishedTime","CalculateMetrics","ajaxTotalDuration","correlationContext","responseHeadersString","getAllResponseHeaders","getResponseHeader","XHRMonitoringState","setRequestHeaderDone","completed","requestHeadersSize","ttfb","responseReceivingDuration","callbackDuration","pageUrl","requestSize","responseStartedTime","callbackFinishedTime","endTime","originalOnreadystatechage","clientFailure","stringUtils","GetLength","strObject","res","stringified","eventNameWithoutOn","handlerRef","attachEvent","DetachEvent","detachEvent","removeEventListener"],"mappings":"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","file":"./aisdk.0.0.19.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 17);\n","define([\"require\", \"exports\", \"./JavaScriptSDK.Interfaces/IChannelControls\", \"./JavaScriptSDK.Enums/EventsDiscardedReason\", \"./JavaScriptSDK/AppInsightsCore\", \"./JavaScriptSDK/CoreUtils\", \"./JavaScriptSDK/NotificationManager\", \"./JavaScriptSDK/DiagnosticLogger\", \"./JavaScriptSDK.Enums/LoggingEnums\"], function (require, exports, IChannelControls_1, EventsDiscardedReason_1, AppInsightsCore_1, CoreUtils_1, NotificationManager_1, DiagnosticLogger_1, LoggingEnums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MinChannelPriorty = IChannelControls_1.MinChannelPriorty;\r\n    exports.EventsDiscardedReason = EventsDiscardedReason_1.EventsDiscardedReason;\r\n    exports.AppInsightsCore = AppInsightsCore_1.AppInsightsCore;\r\n    exports.CoreUtils = CoreUtils_1.CoreUtils;\r\n    exports.NotificationManager = NotificationManager_1.NotificationManager;\r\n    exports.DiagnosticLogger = DiagnosticLogger_1.DiagnosticLogger;\r\n    exports._InternalLogMessage = DiagnosticLogger_1._InternalLogMessage;\r\n    exports._InternalMessageId = LoggingEnums_1._InternalMessageId;\r\n    exports.LoggingSeverity = LoggingEnums_1.LoggingSeverity;\r\n});\r\n//# sourceMappingURL=applicationinsights-core-js.js.map","define([\"require\", \"exports\", \"./Util\", \"./Enums\", \"./RequestResponseHeaders\", \"./Constants\", \"./Interfaces/Contracts/Generated/Data\", \"./Interfaces/Contracts/Generated/Base\", \"./Telemetry/Common/Envelope\", \"./Telemetry/Event\", \"./Telemetry/Exception\", \"./Telemetry/Metric\", \"./Telemetry/PageView\", \"./Interfaces/Contracts/Generated/PageViewData\", \"./Telemetry/RemoteDependencyData\", \"./Telemetry/Trace\", \"./Telemetry/PageViewPerformance\", \"./Telemetry/Common/Data\", \"./Interfaces/Contracts/Generated/SeverityLevel\", \"./Interfaces/Contracts/Generated/ContextTagKeys\", \"./Telemetry/Common/DataSanitizer\", \"./TelemetryItemCreator\"], function (require, exports, Util_1, Enums_1, RequestResponseHeaders_1, Constants_1, Data_1, Base_1, Envelope_1, Event_1, Exception_1, Metric_1, PageView_1, PageViewData_1, RemoteDependencyData_1, Trace_1, PageViewPerformance_1, Data_2, SeverityLevel_1, ContextTagKeys_1, DataSanitizer_1, TelemetryItemCreator_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Util = Util_1.Util;\r\n    exports.CorrelationIdHelper = Util_1.CorrelationIdHelper;\r\n    exports.UrlHelper = Util_1.UrlHelper;\r\n    exports.DateTimeUtils = Util_1.DateTimeUtils;\r\n    exports.FieldType = Enums_1.FieldType;\r\n    exports.RequestHeaders = RequestResponseHeaders_1.RequestHeaders;\r\n    exports.DisabledPropertyName = Constants_1.DisabledPropertyName;\r\n    exports.AIData = Data_1.Data;\r\n    exports.AIBase = Base_1.Base;\r\n    exports.Envelope = Envelope_1.Envelope;\r\n    exports.Event = Event_1.Event;\r\n    exports.Exception = Exception_1.Exception;\r\n    exports.Metric = Metric_1.Metric;\r\n    exports.PageView = PageView_1.PageView;\r\n    exports.PageViewData = PageViewData_1.PageViewData;\r\n    exports.RemoteDependencyData = RemoteDependencyData_1.RemoteDependencyData;\r\n    exports.Trace = Trace_1.Trace;\r\n    exports.PageViewPerformance = PageViewPerformance_1.PageViewPerformance;\r\n    exports.Data = Data_2.Data;\r\n    exports.SeverityLevel = SeverityLevel_1.SeverityLevel;\r\n    exports.ContextTagKeys = ContextTagKeys_1.ContextTagKeys;\r\n    exports.DataSanitizer = DataSanitizer_1.DataSanitizer;\r\n    exports.TelemetryItemCreator = TelemetryItemCreator_1.TelemetryItemCreator;\r\n});\r\n//# sourceMappingURL=applicationinsights-common.js.map","define([\"require\", \"exports\", \"./Enums\", \"applicationinsights-core-js\", \"./RequestResponseHeaders\", \"./Telemetry/Common/DataSanitizer\"], function (require, exports, Enums_1, applicationinsights_core_js_1, RequestResponseHeaders_1, DataSanitizer_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Util = /** @class */ (function () {\r\n        function Util() {\r\n        }\r\n        /*\r\n         * Force the SDK not to use local and session storage\r\n        */\r\n        Util.disableStorage = function () {\r\n            Util._canUseLocalStorage = false;\r\n            Util._canUseSessionStorage = false;\r\n        };\r\n        /**\r\n         * Gets the localStorage object if available\r\n         * @return {Storage} - Returns the storage object if available else returns null\r\n         */\r\n        Util._getLocalStorageObject = function () {\r\n            if (Util.canUseLocalStorage()) {\r\n                return Util._getVerifiedStorageObject(Enums_1.StorageType.LocalStorage);\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n         * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n         * @param storageType Type of storage\r\n         * @return {Storage} Returns storage object verified that it is usable\r\n         */\r\n        Util._getVerifiedStorageObject = function (storageType) {\r\n            var storage = null;\r\n            var fail;\r\n            var uid;\r\n            try {\r\n                uid = new Date;\r\n                storage = storageType === Enums_1.StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n                storage.setItem(uid, uid);\r\n                fail = storage.getItem(uid) != uid;\r\n                storage.removeItem(uid);\r\n                if (fail) {\r\n                    storage = null;\r\n                }\r\n            }\r\n            catch (exception) {\r\n                storage = null;\r\n            }\r\n            return storage;\r\n        };\r\n        /**\r\n         *  Checks if endpoint URL is application insights internal injestion service URL.\r\n         *\r\n         *  @param endpointUrl Endpoint URL to check.\r\n         *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n         */\r\n        Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n            return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n        };\r\n        /**\r\n         *  Check if the browser supports local storage.\r\n         *\r\n         *  @returns {boolean} True if local storage is supported.\r\n         */\r\n        Util.canUseLocalStorage = function () {\r\n            if (Util._canUseLocalStorage === undefined) {\r\n                Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(Enums_1.StorageType.LocalStorage);\r\n            }\r\n            return Util._canUseLocalStorage;\r\n        };\r\n        /**\r\n         *  Get an object from the browser's local storage\r\n         *\r\n         *  @param {string} name - the name of the object to get from storage\r\n         *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n         */\r\n        Util.getStorage = function (logger, name) {\r\n            var storage = Util._getLocalStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    return storage.getItem(name);\r\n                }\r\n                catch (e) {\r\n                    Util._canUseLocalStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         *  Set the contents of an object in the browser's local storage\r\n         *\r\n         *  @param {string} name - the name of the object to set in storage\r\n         *  @param {string} data - the contents of the object to set in storage\r\n         *  @returns {boolean} True if the storage object could be written.\r\n         */\r\n        Util.setStorage = function (logger, name, data) {\r\n            var storage = Util._getLocalStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.setItem(name, data);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseLocalStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         *  Remove an object from the browser's local storage\r\n         *\r\n         *  @param {string} name - the name of the object to remove from storage\r\n         *  @returns {boolean} True if the storage object could be removed.\r\n         */\r\n        Util.removeStorage = function (logger, name) {\r\n            var storage = Util._getLocalStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.removeItem(name);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseLocalStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Gets the sessionStorage object if available\r\n         * @return {Storage} - Returns the storage object if available else returns null\r\n         */\r\n        Util._getSessionStorageObject = function () {\r\n            if (Util.canUseSessionStorage()) {\r\n                return Util._getVerifiedStorageObject(Enums_1.StorageType.SessionStorage);\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         *  Check if the browser supports session storage.\r\n         *\r\n         *  @returns {boolean} True if session storage is supported.\r\n         */\r\n        Util.canUseSessionStorage = function () {\r\n            if (Util._canUseSessionStorage === undefined) {\r\n                Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(Enums_1.StorageType.SessionStorage);\r\n            }\r\n            return Util._canUseSessionStorage;\r\n        };\r\n        /**\r\n         *  Gets the list of session storage keys\r\n         *\r\n         *  @returns {string[]} List of session storage keys\r\n         */\r\n        Util.getSessionStorageKeys = function () {\r\n            var keys = [];\r\n            if (Util.canUseSessionStorage()) {\r\n                for (var key in window.sessionStorage) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        };\r\n        /**\r\n         *  Get an object from the browser's session storage\r\n         *\r\n         *  @param {string} name - the name of the object to get from storage\r\n         *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n         */\r\n        Util.getSessionStorage = function (logger, name) {\r\n            var storage = Util._getSessionStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    return storage.getItem(name);\r\n                }\r\n                catch (e) {\r\n                    Util._canUseSessionStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         *  Set the contents of an object in the browser's session storage\r\n         *\r\n         *  @param {string} name - the name of the object to set in storage\r\n         *  @param {string} data - the contents of the object to set in storage\r\n         *  @returns {boolean} True if the storage object could be written.\r\n         */\r\n        Util.setSessionStorage = function (logger, name, data) {\r\n            var storage = Util._getSessionStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.setItem(name, data);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseSessionStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         *  Remove an object from the browser's session storage\r\n         *\r\n         *  @param {string} name - the name of the object to remove from storage\r\n         *  @returns {boolean} True if the storage object could be removed.\r\n         */\r\n        Util.removeSessionStorage = function (logger, name) {\r\n            var storage = Util._getSessionStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.removeItem(name);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseSessionStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /*\r\n         * Force the SDK not to store and read any data from cookies\r\n         */\r\n        Util.disableCookies = function () {\r\n            Util._canUseCookies = false;\r\n        };\r\n        /*\r\n         * helper method to tell if document.cookie object is available\r\n         */\r\n        Util.canUseCookies = function (logger) {\r\n            if (Util._canUseCookies === undefined) {\r\n                Util._canUseCookies = false;\r\n                try {\r\n                    Util._canUseCookies = Util.document.cookie !== undefined;\r\n                }\r\n                catch (e) {\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n                ;\r\n            }\r\n            return Util._canUseCookies;\r\n        };\r\n        /**\r\n         * helper method to set userId and sessionId cookie\r\n         */\r\n        Util.setCookie = function (logger, name, value, domain) {\r\n            var domainAttrib = \"\";\r\n            var secureAttrib = \"\";\r\n            if (domain) {\r\n                domainAttrib = \";domain=\" + domain;\r\n            }\r\n            if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n                secureAttrib = \";secure\";\r\n            }\r\n            if (Util.canUseCookies(logger)) {\r\n                Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n            }\r\n        };\r\n        Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = false; }\r\n            if (str === undefined || str === null) {\r\n                return defaultValue;\r\n            }\r\n            return str.toString().toLowerCase() === \"true\";\r\n        };\r\n        /**\r\n         * helper method to access userId and sessionId cookie\r\n         */\r\n        Util.getCookie = function (logger, name) {\r\n            if (!Util.canUseCookies(logger)) {\r\n                return;\r\n            }\r\n            var value = \"\";\r\n            if (name && name.length) {\r\n                var cookieName = name + \"=\";\r\n                var cookies = Util.document.cookie.split(\";\");\r\n                for (var i = 0; i < cookies.length; i++) {\r\n                    var cookie = cookies[i];\r\n                    cookie = Util.trim(cookie);\r\n                    if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                        value = cookie.substring(cookieName.length, cookies[i].length);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        };\r\n        /**\r\n         * Deletes a cookie by setting it's expiration time in the past.\r\n         * @param name - The name of the cookie to delete.\r\n         */\r\n        Util.deleteCookie = function (logger, name) {\r\n            if (Util.canUseCookies(logger)) {\r\n                // Setting the expiration date in the past immediately removes the cookie\r\n                Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n            }\r\n        };\r\n        /**\r\n         * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n         */\r\n        Util.trim = function (str) {\r\n            if (typeof str !== \"string\")\r\n                return str;\r\n            return str.replace(/^\\s+|\\s+$/g, \"\");\r\n        };\r\n        /**\r\n         * generate random id string\r\n         */\r\n        Util.newId = function () {\r\n            var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n            var result = \"\";\r\n            // tslint:disable-next-line:insecure-random\r\n            var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n            while (random > 0) {\r\n                var char = base64chars.charAt(random % 64);\r\n                result += char;\r\n                random = Math.floor(random / 64);\r\n            }\r\n            return result;\r\n        };\r\n        /**\r\n         * Check if an object is of type Array\r\n         */\r\n        Util.isArray = function (obj) {\r\n            return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n        };\r\n        /**\r\n         * Check if an object is of type Error\r\n         */\r\n        Util.isError = function (obj) {\r\n            return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n        };\r\n        /**\r\n         * Check if an object is of type Date\r\n         */\r\n        Util.isDate = function (obj) {\r\n            return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n        };\r\n        /**\r\n         * Convert a date to I.S.O. format in IE8\r\n         */\r\n        Util.toISOStringForIE8 = function (date) {\r\n            if (Util.isDate(date)) {\r\n                if (Date.prototype.toISOString) {\r\n                    return date.toISOString();\r\n                }\r\n                else {\r\n                    var pad = function (num) {\r\n                        var r = String(num);\r\n                        if (r.length === 1) {\r\n                            r = \"0\" + r;\r\n                        }\r\n                        return r;\r\n                    };\r\n                    return date.getUTCFullYear()\r\n                        + \"-\" + pad(date.getUTCMonth() + 1)\r\n                        + \"-\" + pad(date.getUTCDate())\r\n                        + \"T\" + pad(date.getUTCHours())\r\n                        + \":\" + pad(date.getUTCMinutes())\r\n                        + \":\" + pad(date.getUTCSeconds())\r\n                        + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                        + \"Z\";\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Gets IE version if we are running on IE, or null otherwise\r\n         */\r\n        Util.getIEVersion = function (userAgentStr) {\r\n            if (userAgentStr === void 0) { userAgentStr = null; }\r\n            var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n            return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n        };\r\n        /**\r\n         * Convert ms to c# time span format\r\n         */\r\n        Util.msToTimeSpan = function (totalms) {\r\n            if (isNaN(totalms) || totalms < 0) {\r\n                totalms = 0;\r\n            }\r\n            totalms = Math.round(totalms);\r\n            var ms = \"\" + totalms % 1000;\r\n            var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n            var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n            var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n            var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n            ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n            sec = sec.length < 2 ? \"0\" + sec : sec;\r\n            min = min.length < 2 ? \"0\" + min : min;\r\n            hour = hour.length < 2 ? \"0\" + hour : hour;\r\n            return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n        };\r\n        /**\r\n        * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n        * happens in a script from other domain (cross origin, CORS).\r\n        */\r\n        Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n            return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n        };\r\n        /**\r\n        * Returns string representation of an object suitable for diagnostics logging.\r\n        */\r\n        Util.dump = function (object) {\r\n            var objectTypeDump = Object.prototype.toString.call(object);\r\n            var propertyValueDump = JSON.stringify(object);\r\n            if (objectTypeDump === \"[object Error]\") {\r\n                propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n            }\r\n            return objectTypeDump + propertyValueDump;\r\n        };\r\n        /**\r\n        * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n        */\r\n        Util.getExceptionName = function (object) {\r\n            var objectTypeDump = Object.prototype.toString.call(object);\r\n            if (objectTypeDump === \"[object Error]\") {\r\n                return object.name;\r\n            }\r\n            return \"\";\r\n        };\r\n        /**\r\n         * Adds an event handler for the specified event\r\n         * @param eventName {string} - The name of the event\r\n         * @param callback {any} - The callback function that needs to be executed for the given event\r\n         * @return {boolean} - true if the handler was successfully added\r\n         */\r\n        Util.addEventHandler = function (eventName, callback) {\r\n            if (!window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n                return false;\r\n            }\r\n            // Create verb for the event\r\n            var verbEventName = 'on' + eventName;\r\n            // check if addEventListener is available\r\n            if (window.addEventListener) {\r\n                window.addEventListener(eventName, callback, false);\r\n            }\r\n            else if (window[\"attachEvent\"]) {\r\n                window[\"attachEvent\"](verbEventName, callback);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * Tells if a browser supports a Beacon API\r\n         */\r\n        Util.IsBeaconApiSupported = function () {\r\n            return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n        };\r\n        Util.document = typeof document !== \"undefined\" ? document : {};\r\n        Util._canUseCookies = undefined;\r\n        Util._canUseLocalStorage = undefined;\r\n        Util._canUseSessionStorage = undefined;\r\n        // listing only non-geo specific locations \r\n        Util._internalEndpoints = [\r\n            \"https://dc.services.visualstudio.com/v2/track\",\r\n            \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n            \"https://dc-int.services.visualstudio.com/v2/track\"\r\n        ];\r\n        Util.NotSpecified = \"not_specified\";\r\n        return Util;\r\n    }());\r\n    exports.Util = Util;\r\n    var UrlHelper = /** @class */ (function () {\r\n        function UrlHelper() {\r\n        }\r\n        UrlHelper.parseUrl = function (url) {\r\n            if (!UrlHelper.htmlAnchorElement) {\r\n                UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : {};\r\n            }\r\n            UrlHelper.htmlAnchorElement.href = url;\r\n            return UrlHelper.htmlAnchorElement;\r\n        };\r\n        UrlHelper.getAbsoluteUrl = function (url) {\r\n            var result;\r\n            var a = UrlHelper.parseUrl(url);\r\n            if (a) {\r\n                result = a.href;\r\n            }\r\n            return result;\r\n        };\r\n        UrlHelper.getPathName = function (url) {\r\n            var result;\r\n            var a = UrlHelper.parseUrl(url);\r\n            if (a) {\r\n                result = a.pathname;\r\n            }\r\n            return result;\r\n        };\r\n        UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n            if (method) {\r\n                return method.toUpperCase() + \" \" + absoluteUrl;\r\n            }\r\n            else {\r\n                return absoluteUrl;\r\n            }\r\n        };\r\n        UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n        return UrlHelper;\r\n    }());\r\n    exports.UrlHelper = UrlHelper;\r\n    var CorrelationIdHelper = /** @class */ (function () {\r\n        function CorrelationIdHelper() {\r\n        }\r\n        /**\r\n        * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n        */\r\n        CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n            if (config && config.disableCorrelationHeaders) {\r\n                return false;\r\n            }\r\n            if (!requestUrl) {\r\n                return false;\r\n            }\r\n            var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n            if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n                return false;\r\n            }\r\n            var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n            if (!excludedDomains || excludedDomains.length == 0) {\r\n                return true;\r\n            }\r\n            for (var i = 0; i < excludedDomains.length; i++) {\r\n                var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                if (regex.test(requestHost)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n        * Combines target appId and target role name from response header.\r\n        */\r\n        CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n            if (responseHeader) {\r\n                var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestResponseHeaders_1.RequestHeaders.requestContextTargetKey);\r\n                if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                    return correlationId;\r\n                }\r\n            }\r\n        };\r\n        /**\r\n        * Gets key from correlation response header\r\n        */\r\n        CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n            if (responseHeader) {\r\n                var keyValues = responseHeader.split(\",\");\r\n                for (var i = 0; i < keyValues.length; ++i) {\r\n                    var keyValue = keyValues[i].split(\"=\");\r\n                    if (keyValue.length == 2 && keyValue[0] == key) {\r\n                        return keyValue[1];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n        return CorrelationIdHelper;\r\n    }());\r\n    exports.CorrelationIdHelper = CorrelationIdHelper;\r\n    var AjaxHelper = /** @class */ (function () {\r\n        function AjaxHelper() {\r\n        }\r\n        AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, pathName) {\r\n            var target, name;\r\n            if (absoluteUrl && absoluteUrl.length > 0) {\r\n                var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n                target = parsedUrl.host;\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n            else {\r\n                target = pathName;\r\n                name = pathName;\r\n            }\r\n            return {\r\n                target: target,\r\n                name: name\r\n            };\r\n        };\r\n        return AjaxHelper;\r\n    }());\r\n    exports.AjaxHelper = AjaxHelper;\r\n    /**\r\n     * A utility class that helps getting time related parameters\r\n     */\r\n    var DateTimeUtils = /** @class */ (function () {\r\n        function DateTimeUtils() {\r\n        }\r\n        /**\r\n         * Get the number of milliseconds since 1970/01/01 in local timezone\r\n         */\r\n        DateTimeUtils.Now = (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n        /**\r\n         * Gets duration between two timestamps\r\n         */\r\n        DateTimeUtils.GetDuration = function (start, end) {\r\n            var result = null;\r\n            if (start !== 0 && end !== 0 && !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(start) && !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(end)) {\r\n                result = end - start;\r\n            }\r\n            return result;\r\n        };\r\n        return DateTimeUtils;\r\n    }());\r\n    exports.DateTimeUtils = DateTimeUtils;\r\n});\r\n//# sourceMappingURL=Util.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n    * Type of storage to differentiate between local storage and session storage\r\n    */\r\n    var StorageType;\r\n    (function (StorageType) {\r\n        StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n        StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n    })(StorageType = exports.StorageType || (exports.StorageType = {}));\r\n    /**\r\n     * Enum is used in aiDataContract to describe how fields are serialized.\r\n     * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n     */\r\n    var FieldType;\r\n    (function (FieldType) {\r\n        FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n        FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n        FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n        FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n    })(FieldType = exports.FieldType || (exports.FieldType = {}));\r\n    ;\r\n});\r\n//# sourceMappingURL=Enums.js.map","define([\"require\", \"exports\", \"applicationinsights-core-js\", \"../../Util\"], function (require, exports, applicationinsights_core_js_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var DataSanitizer = /** @class */ (function () {\r\n        function DataSanitizer() {\r\n        }\r\n        DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n            var origLength = key.length;\r\n            var field = DataSanitizer.sanitizeKey(logger, key);\r\n            // validation truncated the length.  We need to add uniqueness\r\n            if (field.length !== origLength) {\r\n                var i = 0;\r\n                var uniqueField = field;\r\n                while (map[uniqueField] !== undefined) {\r\n                    i++;\r\n                    uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n                }\r\n                field = uniqueField;\r\n            }\r\n            return field;\r\n        };\r\n        DataSanitizer.sanitizeKey = function (logger, name) {\r\n            if (name) {\r\n                // Remove any leading or trailing whitepace\r\n                name = Util_1.Util.trim(name.toString());\r\n                // truncate the string to 150 chars\r\n                if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                    name = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n                }\r\n            }\r\n            return name;\r\n        };\r\n        DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n            if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n            if (value) {\r\n                maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n                value = Util_1.Util.trim(value);\r\n                if (value.toString().length > maxLength) {\r\n                    value = value.toString().substring(0, maxLength);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n                }\r\n            }\r\n            return value;\r\n        };\r\n        DataSanitizer.sanitizeUrl = function (logger, url) {\r\n            return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, applicationinsights_core_js_1._InternalMessageId.UrlTooLong);\r\n        };\r\n        DataSanitizer.sanitizeMessage = function (logger, message) {\r\n            if (message) {\r\n                if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                    message = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n        DataSanitizer.sanitizeException = function (logger, exception) {\r\n            if (exception) {\r\n                if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                    exception = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n                }\r\n            }\r\n            return exception;\r\n        };\r\n        DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n            if (properties) {\r\n                var tempProps = {};\r\n                for (var prop in properties) {\r\n                    var value = DataSanitizer.sanitizeString(logger, properties[prop], DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                    prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                    tempProps[prop] = value;\r\n                }\r\n                properties = tempProps;\r\n            }\r\n            return properties;\r\n        };\r\n        DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n            if (measurements) {\r\n                var tempMeasurements = {};\r\n                for (var measure in measurements) {\r\n                    var value = measurements[measure];\r\n                    measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                    tempMeasurements[measure] = value;\r\n                }\r\n                measurements = tempMeasurements;\r\n            }\r\n            return measurements;\r\n        };\r\n        DataSanitizer.sanitizeId = function (logger, id) {\r\n            return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, applicationinsights_core_js_1._InternalMessageId.IdTooLong).toString() : id;\r\n        };\r\n        DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n            if (input) {\r\n                input = Util_1.Util.trim(input);\r\n                if (input.length > maxLength) {\r\n                    input = input.substring(0, maxLength);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n                }\r\n            }\r\n            return input;\r\n        };\r\n        DataSanitizer.padNumber = function (num) {\r\n            var s = \"00\" + num;\r\n            return s.substr(s.length - 3);\r\n        };\r\n        /**\r\n        * Max length allowed for custom names.\r\n        */\r\n        DataSanitizer.MAX_NAME_LENGTH = 150;\r\n        /**\r\n         * Max length allowed for Id field in page views.\r\n         */\r\n        DataSanitizer.MAX_ID_LENGTH = 128;\r\n        /**\r\n         * Max length allowed for custom values.\r\n         */\r\n        DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n        /**\r\n         * Max length allowed for names\r\n         */\r\n        DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n        /**\r\n         * Max length allowed for url.\r\n         */\r\n        DataSanitizer.MAX_URL_LENGTH = 2048;\r\n        /**\r\n         * Max length allowed for messages.\r\n         */\r\n        DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n        /**\r\n         * Max length allowed for exceptions.\r\n         */\r\n        DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n        return DataSanitizer;\r\n    }());\r\n    exports.DataSanitizer = DataSanitizer;\r\n});\r\n//# sourceMappingURL=DataSanitizer.js.map","// THIS FILE WAS AUTOGENERATED\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * The abstract common base of all domains.\r\n     */\r\n    var Domain = /** @class */ (function () {\r\n        function Domain() {\r\n        }\r\n        return Domain;\r\n    }());\r\n    exports.Domain = Domain;\r\n});\r\n//# sourceMappingURL=Domain.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var CoreUtils = /** @class */ (function () {\r\n        function CoreUtils() {\r\n        }\r\n        CoreUtils.isNullOrUndefined = function (input) {\r\n            return input === null || input === undefined;\r\n        };\r\n        /**\r\n    * Creates a new GUID.\r\n    * @return {string} A GUID.\r\n    */\r\n        CoreUtils.newGuid = function () {\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n                // tslint:disable-next-line:insecure-random\r\n                var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n        };\r\n        return CoreUtils;\r\n    }());\r\n    exports.CoreUtils = CoreUtils;\r\n    var GuidRegex = /[xy]/g;\r\n});\r\n//# sourceMappingURL=CoreUtils.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./EventData\"], function (require, exports, EventData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n     */\r\n    var PageViewData = /** @class */ (function (_super) {\r\n        __extends(PageViewData, _super);\r\n        function PageViewData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return PageViewData;\r\n    }(EventData_1.EventData));\r\n    exports.PageViewData = PageViewData;\r\n});\r\n//# sourceMappingURL=PageViewData.js.map","define([\"require\", \"exports\", \"./JavaScriptSDK/ApplicationInsights\"], function (require, exports, ApplicationInsights_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ApplicationInsights = ApplicationInsights_1.ApplicationInsights;\r\n});\r\n//# sourceMappingURL=applicationinsights-analytics-js.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n     */\r\n    exports.EventsDiscardedReason = {\r\n        /**\r\n         * Unknown.\r\n         */\r\n        Unknown: 0,\r\n        /**\r\n         * Status set to non-retryable.\r\n         */\r\n        NonRetryableStatus: 1,\r\n        /**\r\n         * The event is invalid.\r\n         */\r\n        InvalidEvent: 2,\r\n        /**\r\n         * The size of the event is too large.\r\n         */\r\n        SizeLimitExceeded: 3,\r\n        /**\r\n         * The server is not accepting events from this instrumentation key.\r\n         */\r\n        KillSwitch: 4,\r\n        /**\r\n         * The event queue is full.\r\n         */\r\n        QueueFull: 5,\r\n    };\r\n});\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Class to manage sending notifications to all the listeners.\r\n     */\r\n    var NotificationManager = /** @class */ (function () {\r\n        function NotificationManager() {\r\n            this.listeners = [];\r\n        }\r\n        /**\r\n         * Adds a notification listener.\r\n         * @param {INotificationListener} listener - The notification listener to be added.\r\n         */\r\n        NotificationManager.prototype.addNotificationListener = function (listener) {\r\n            this.listeners.push(listener);\r\n        };\r\n        /**\r\n         * Removes all instances of the listener.\r\n         * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n         */\r\n        NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n            var index = this.listeners.indexOf(listener);\r\n            while (index > -1) {\r\n                this.listeners.splice(index, 1);\r\n                index = this.listeners.indexOf(listener);\r\n            }\r\n        };\r\n        /**\r\n         * Notification for events sent.\r\n         * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n         */\r\n        NotificationManager.prototype.eventsSent = function (events) {\r\n            var _this = this;\r\n            var _loop_1 = function (i) {\r\n                if (this_1.listeners[i].eventsSent) {\r\n                    setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (var i = 0; i < this.listeners.length; ++i) {\r\n                _loop_1(i);\r\n            }\r\n        };\r\n        /**\r\n         * Notification for events being discarded.\r\n         * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n         * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n         * constant should be used to check the different values.\r\n         */\r\n        NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n            var _this = this;\r\n            var _loop_2 = function (i) {\r\n                if (this_2.listeners[i].eventsDiscarded) {\r\n                    setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n                }\r\n            };\r\n            var this_2 = this;\r\n            for (var i = 0; i < this.listeners.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n        };\r\n        return NotificationManager;\r\n    }());\r\n    exports.NotificationManager = NotificationManager;\r\n});\r\n//# sourceMappingURL=NotificationManager.js.map","define([\"require\", \"exports\", \"../JavaScriptSDK.Enums/LoggingEnums\", \"./CoreUtils\"], function (require, exports, LoggingEnums_1, CoreUtils_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var _InternalLogMessage = /** @class */ (function () {\r\n        function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n            if (isUserAct === void 0) { isUserAct = false; }\r\n            this.messageId = msgId;\r\n            this.message =\r\n                (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                    msgId;\r\n            var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n                (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n            this.message += diagnosticText;\r\n        }\r\n        _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n            return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n        };\r\n        _InternalLogMessage.dataType = \"MessageData\";\r\n        /**\r\n         * For user non actionable traces use AI Internal prefix.\r\n         */\r\n        _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n        /**\r\n         * Prefix of the traces in portal.\r\n         */\r\n        _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n        return _InternalLogMessage;\r\n    }());\r\n    exports._InternalLogMessage = _InternalLogMessage;\r\n    var DiagnosticLogger = /** @class */ (function () {\r\n        function DiagnosticLogger(config) {\r\n            /**\r\n            *  Session storage key for the prefix for the key indicating message type already logged\r\n            */\r\n            this.AIInternalMessagePrefix = \"AITR_\";\r\n            /**\r\n             * When this is true the SDK will throw exceptions to aid in debugging.\r\n             */\r\n            this.enableDebugExceptions = function () { return false; };\r\n            /**\r\n             * 0: OFF\r\n             * 1: CRITICAL (default)\r\n             * 2: >= WARNING\r\n             */\r\n            this.consoleLoggingLevel = function () { return 1; };\r\n            /**\r\n             * 0: OFF (default)\r\n             * 1: CRITICAL\r\n             * 2: >= WARNING\r\n             */\r\n            this.telemetryLoggingLevel = function () { return 0; };\r\n            /**\r\n             * The maximum number of internal messages allowed to be sent per page view\r\n             */\r\n            this.maxInternalMessageLimit = function () { return 25; };\r\n            /**\r\n             * The internal logging queue\r\n             */\r\n            this.queue = [];\r\n            /**\r\n             * Count of internal messages sent\r\n             */\r\n            this._messageCount = 0;\r\n            /**\r\n             * Holds information about what message types were already logged to console or sent to server.\r\n             */\r\n            this._messageLogged = {};\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(config)) {\r\n                // TODO: Use default config\r\n                // config = AppInsightsCore.defaultConfig;\r\n                // For now, use defaults specified in DiagnosticLogger members;\r\n                return;\r\n            }\r\n            if (!CoreUtils_1.CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n                this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n            }\r\n            if (!CoreUtils_1.CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n                this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n            }\r\n            if (!CoreUtils_1.CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n                this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n            }\r\n            if (!CoreUtils_1.CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n                this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n            }\r\n        }\r\n        /**\r\n         * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n         * @param severity {LoggingSeverity} - The severity of the log message\r\n         * @param message {_InternalLogMessage} - The log message.\r\n         */\r\n        DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n            if (isUserAct === void 0) { isUserAct = false; }\r\n            var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n            if (this.enableDebugExceptions()) {\r\n                throw message;\r\n            }\r\n            else {\r\n                if (typeof (message) !== \"undefined\" && !!message) {\r\n                    if (typeof (message.message) !== \"undefined\") {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message.messageId;\r\n                            if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingEnums_1.LoggingSeverity.WARNING) {\r\n                                this.warnToConsole(message.message);\r\n                                this._messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                            if (this.consoleLoggingLevel() >= LoggingEnums_1.LoggingSeverity.WARNING) {\r\n                                this.warnToConsole(message.message);\r\n                            }\r\n                        }\r\n                        this.logInternalMessage(severity, message);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * This will write a warning to the console if possible\r\n         * @param message {string} - The warning message\r\n         */\r\n        DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n            if (typeof console !== \"undefined\" && !!console) {\r\n                if (typeof console.warn === \"function\") {\r\n                    console.warn(message);\r\n                }\r\n                else if (typeof console.log === \"function\") {\r\n                    console.log(message);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Resets the internal message count\r\n         */\r\n        DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n            this._messageCount = 0;\r\n            this._messageLogged = {};\r\n        };\r\n        /**\r\n         * Logs a message to the internal queue.\r\n         * @param severity {LoggingSeverity} - The severity of the log message\r\n         * @param message {_InternalLogMessage} - The message to log.\r\n         */\r\n        DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n            if (this._areInternalMessagesThrottled()) {\r\n                return;\r\n            }\r\n            // check if this message type was already logged for this session and if so, don't log it again\r\n            var logMessage = true;\r\n            var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n            // if the session storage is not available, limit to only one message type per page view\r\n            if (this._messageLogged[messageKey]) {\r\n                logMessage = false;\r\n            }\r\n            else {\r\n                this._messageLogged[messageKey] = true;\r\n            }\r\n            if (logMessage) {\r\n                // Push the event in the internal queue\r\n                if (severity <= this.telemetryLoggingLevel()) {\r\n                    this.queue.push(message);\r\n                    this._messageCount++;\r\n                }\r\n                // When throttle limit reached, send a special event\r\n                if (this._messageCount == this.maxInternalMessageLimit()) {\r\n                    var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                    var throttleMessage = new _InternalLogMessage(LoggingEnums_1._InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                    this.queue.push(throttleMessage);\r\n                    this.warnToConsole(throttleLimitMessage);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Indicates whether the internal events are throttled\r\n         */\r\n        DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n            return this._messageCount >= this.maxInternalMessageLimit();\r\n        };\r\n        return DiagnosticLogger;\r\n    }());\r\n    exports.DiagnosticLogger = DiagnosticLogger;\r\n});\r\n//# sourceMappingURL=DiagnosticLogger.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var LoggingSeverity;\r\n    (function (LoggingSeverity) {\r\n        /**\r\n         * Error will be sent as internal telemetry\r\n         */\r\n        LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n        /**\r\n         * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n         */\r\n        LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n    })(LoggingSeverity = exports.LoggingSeverity || (exports.LoggingSeverity = {}));\r\n    /**\r\n     * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n     */ ;\r\n    exports._InternalMessageId = {\r\n        // Non user actionable\r\n        BrowserDoesNotSupportLocalStorage: 0,\r\n        BrowserCannotReadLocalStorage: 1,\r\n        BrowserCannotReadSessionStorage: 2,\r\n        BrowserCannotWriteLocalStorage: 3,\r\n        BrowserCannotWriteSessionStorage: 4,\r\n        BrowserFailedRemovalFromLocalStorage: 5,\r\n        BrowserFailedRemovalFromSessionStorage: 6,\r\n        CannotSendEmptyTelemetry: 7,\r\n        ClientPerformanceMathError: 8,\r\n        ErrorParsingAISessionCookie: 9,\r\n        ErrorPVCalc: 10,\r\n        ExceptionWhileLoggingError: 11,\r\n        FailedAddingTelemetryToBuffer: 12,\r\n        FailedMonitorAjaxAbort: 13,\r\n        FailedMonitorAjaxDur: 14,\r\n        FailedMonitorAjaxOpen: 15,\r\n        FailedMonitorAjaxRSC: 16,\r\n        FailedMonitorAjaxSend: 17,\r\n        FailedMonitorAjaxGetCorrelationHeader: 18,\r\n        FailedToAddHandlerForOnBeforeUnload: 19,\r\n        FailedToSendQueuedTelemetry: 20,\r\n        FailedToReportDataLoss: 21,\r\n        FlushFailed: 22,\r\n        MessageLimitPerPVExceeded: 23,\r\n        MissingRequiredFieldSpecification: 24,\r\n        NavigationTimingNotSupported: 25,\r\n        OnError: 26,\r\n        SessionRenewalDateIsZero: 27,\r\n        SenderNotInitialized: 28,\r\n        StartTrackEventFailed: 29,\r\n        StopTrackEventFailed: 30,\r\n        StartTrackFailed: 31,\r\n        StopTrackFailed: 32,\r\n        TelemetrySampledAndNotSent: 33,\r\n        TrackEventFailed: 34,\r\n        TrackExceptionFailed: 35,\r\n        TrackMetricFailed: 36,\r\n        TrackPVFailed: 37,\r\n        TrackPVFailedCalc: 38,\r\n        TrackTraceFailed: 39,\r\n        TransmissionFailed: 40,\r\n        FailedToSetStorageBuffer: 41,\r\n        FailedToRestoreStorageBuffer: 42,\r\n        InvalidBackendResponse: 43,\r\n        FailedToFixDepricatedValues: 44,\r\n        InvalidDurationValue: 45,\r\n        TelemetryEnvelopeInvalid: 46,\r\n        CreateEnvelopeError: 47,\r\n        // User actionable\r\n        CannotSerializeObject: 48,\r\n        CannotSerializeObjectNonSerializable: 49,\r\n        CircularReferenceDetected: 50,\r\n        ClearAuthContextFailed: 51,\r\n        ExceptionTruncated: 52,\r\n        IllegalCharsInName: 53,\r\n        ItemNotInArray: 54,\r\n        MaxAjaxPerPVExceeded: 55,\r\n        MessageTruncated: 56,\r\n        NameTooLong: 57,\r\n        SampleRateOutOfRange: 58,\r\n        SetAuthContextFailed: 59,\r\n        SetAuthContextFailedAccountName: 60,\r\n        StringValueTooLong: 61,\r\n        StartCalledMoreThanOnce: 62,\r\n        StopCalledWithoutStart: 63,\r\n        TelemetryInitializerFailed: 64,\r\n        TrackArgumentsNotSpecified: 65,\r\n        UrlTooLong: 66,\r\n        SessionStorageBufferFull: 67,\r\n        CannotAccessCookie: 68,\r\n        IdTooLong: 69,\r\n    };\r\n});\r\n//# sourceMappingURL=LoggingEnums.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var RequestHeaders = /** @class */ (function () {\r\n        function RequestHeaders() {\r\n        }\r\n        /**\r\n         * Request-Context header\r\n         */\r\n        RequestHeaders.requestContextHeader = \"Request-Context\";\r\n        /**\r\n         * Target instrumentation header that is added to the response and retrieved by the\r\n         * calling application when processing incoming responses.\r\n         */\r\n        RequestHeaders.requestContextTargetKey = \"appId\";\r\n        /**\r\n         * Request-Context appId format\r\n         */\r\n        RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n        /**\r\n         * Request-Id header\r\n         */\r\n        RequestHeaders.requestIdHeader = \"Request-Id\";\r\n        /**\r\n         * Sdk-Context header\r\n         * If this header passed with appId in content then appId will be returned back by the backend.\r\n         */\r\n        RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n        /**\r\n         * String to pass in header for requesting appId back from the backend.\r\n         */\r\n        RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n        RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n        return RequestHeaders;\r\n    }());\r\n    exports.RequestHeaders = RequestHeaders;\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Base\"], function (require, exports, Base_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Data struct to contain both B and C sections.\r\n     */\r\n    var Data = /** @class */ (function (_super) {\r\n        __extends(Data, _super);\r\n        function Data() {\r\n            return _super.call(this) || this;\r\n        }\r\n        return Data;\r\n    }(Base_1.Base));\r\n    exports.Data = Data;\r\n});\r\n//# sourceMappingURL=Data.js.map","// THIS FILE WAS AUTOGENERATED\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n         * Data struct to contain only C section with custom fields.\r\n         */\r\n    var Base = /** @class */ (function () {\r\n        function Base() {\r\n        }\r\n        return Base;\r\n    }());\r\n    exports.Base = Base;\r\n});\r\n//# sourceMappingURL=Base.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n     */\r\n    var EventData = /** @class */ (function (_super) {\r\n        __extends(EventData, _super);\r\n        function EventData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return EventData;\r\n    }(Domain_1.Domain));\r\n    exports.EventData = EventData;\r\n});\r\n//# sourceMappingURL=EventData.js.map","import { ApplicationInsights } from \"applicationinsights-analytics-js\";\r\nimport { Initialization, Snippet } from \"./Initialization\";\r\n\r\n\"use strict\";\r\n//should be global function that should load as soon as SDK loads\r\ntry {\r\n\r\n    // E2E sku on load initializes core and pipeline using snippet as input for configuration\r\n    var aiName;\r\n    if (typeof window !== \"undefined\" && typeof JSON !== \"undefined\") {\r\n        // get snippet or initialize to an empty object\r\n\r\n        // get sdk instance name should not conflict if page uses existing sdk for a layer of instrumentation\r\n        aiName = window[\"appInsightsSDK\"];\r\n\r\n        if (window[aiName] === undefined) {\r\n            // if no snippet is present, initialize default values\r\n            ApplicationInsights.appInsightsDefaultConfig = Initialization.getDefaultConfig();\r\n        } else {\r\n            if (window[aiName].initialize) { // initialize if required\r\n                // this is the typical case for browser+snippet\r\n                var snippet: Snippet = window[aiName] || <any>{};\r\n\r\n                // overwrite snippet with full appInsights\r\n                var initialization = new Initialization(snippet);\r\n                var appInsightsLocal = initialization.loadAppInsights();\r\n\r\n                // apply full appInsights to the global instance that was initialized in the snippet\r\n                for (var field in appInsightsLocal) {\r\n                    snippet[field] = appInsightsLocal[field];\r\n                }\r\n\r\n                // Empty queue of all api calls logged prior to sdk download\r\n                initialization.emptyQueue();\r\n\r\n                initialization.addHousekeepingBeforeUnload(appInsightsLocal);\r\n            }\r\n        }\r\n    }\r\n} catch (e) {\r\n    // TODO: Find better place to warn to console when SDK initialization fails\r\n    if (console) {\r\n        console.warn('Failed to initialize AppInsights JS SDK for instance ' + aiName + e.message);\r\n    }\r\n}","/**\r\n * ApplicationInsights.ts\r\n * @copyright Microsoft 2018\r\n */\r\ndefine([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\", \"./Telemetry/PageViewManager\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1, PageViewManager_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    \"use strict\";\r\n    var durationProperty = \"duration\";\r\n    var ApplicationInsights = /** @class */ (function () {\r\n        function ApplicationInsights() {\r\n            this.identifier = \"ApplicationInsightsAnalytics\";\r\n            this.priority = 160; // take from reserved priority range 100- 200\r\n            this._isInitialized = false;\r\n            // Counts number of trackAjax invokations.\r\n            // By default we only monitor X ajax call per view to avoid too much load.\r\n            // Default value is set in config.\r\n            // This counter keeps increasing even after the limit is reached.\r\n            this._trackAjaxAttempts = 0;\r\n            this.initialize = this._initialize.bind(this);\r\n        }\r\n        ApplicationInsights.prototype.processTelemetry = function (env) {\r\n            var doNotSendItem = false;\r\n            try {\r\n                var telemetryInitializersCount = this._telemetryInitializers.length;\r\n                for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n                    var telemetryInitializer = this._telemetryInitializers[i];\r\n                    if (telemetryInitializer) {\r\n                        if (telemetryInitializer.apply(null, [env]) === false) {\r\n                            doNotSendItem = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                doNotSendItem = true;\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryInitializerFailed, \"One of telemetry initializers failed, telemetry item will not be sent: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) }, true);\r\n            }\r\n            if (!doNotSendItem && !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(env);\r\n            }\r\n        };\r\n        ApplicationInsights.prototype.setNextPlugin = function (next) {\r\n            this._nextPlugin = next;\r\n        };\r\n        /**\r\n         * @description Log a diagnostic message\r\n         * @param {ITraceTelemetry} trace\r\n         * @param {{[key: string]: any}} [customProperties]\r\n         * @memberof ApplicationInsights\r\n         */\r\n        ApplicationInsights.prototype.trackTrace = function (trace, customProperties) {\r\n            try {\r\n                var telemetryItem = applicationinsights_common_1.TelemetryItemCreator.create(trace, applicationinsights_common_1.Trace.dataType, applicationinsights_common_1.Trace.envelopeType, this._logger, customProperties);\r\n                this._setTelemetryNameAndIKey(telemetryItem);\r\n                this.core.track(telemetryItem);\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.TrackTraceFailed, \"trackTrace failed, trace will not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        /**\r\n         * @description Log a numeric value that is not associated with a specific event. Typically\r\n         * used to send regular reports of performance indicators. To send single measurement, just\r\n         * use the name and average fields of {@link IMetricTelemetry}. If you take measurements\r\n         * frequently, you can reduce the telemetry bandwidth by aggregating multiple measurements\r\n         * and sending the resulting average at intervals\r\n         * @param {IMetricTelemetry} metric input object argument. Only name and average are mandatory.\r\n         * @param {{[key: string]: any}} customProperties additional data used to filter metrics in the\r\n         * portal. Defaults to empty.\r\n         * @memberof ApplicationInsights\r\n         */\r\n        ApplicationInsights.prototype.trackMetric = function (metric, customProperties) {\r\n            try {\r\n                var telemetryItem = applicationinsights_common_1.TelemetryItemCreator.create(metric, applicationinsights_common_1.Metric.dataType, applicationinsights_common_1.Metric.envelopeType, this._logger, customProperties);\r\n                this._setTelemetryNameAndIKey(telemetryItem);\r\n                this.core.track(telemetryItem);\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TrackMetricFailed, \"trackMetric failed, metric will not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        /**\r\n         * Logs that a page or other item was viewed.\r\n         * @param IPageViewTelemetry The string you used as the name in startTrackPage. Defaults to the document title.\r\n         * @param customProperties Additional data used to filter events and metrics. Defaults to empty. If a user wants\r\n         *                         to provide a custom duration, it'll have to be in customProperties\r\n         */\r\n        ApplicationInsights.prototype.trackPageView = function (pageView, customProperties) {\r\n            try {\r\n                this._pageViewManager.trackPageView(pageView, customProperties);\r\n                if (this.config.autoTrackPageVisitTime) {\r\n                    this._pageVisitTimeManager.trackPreviousPageVisit(pageView.name, pageView.uri);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TrackPVFailed, \"trackPageView failed, page view will not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        /**\r\n         * Create a page view telemetry item and send it to the SDK pipeline through the core.track API\r\n         * @param pageView Page view item to be sent\r\n         * @param properties Custom properties (Part C) that a user can add to the telemetry item\r\n         * @param systemProperties System level properties (Part A) that a user can add to the telemetry item\r\n         */\r\n        ApplicationInsights.prototype.sendPageViewInternal = function (pageView, properties, systemProperties) {\r\n            var telemetryItem = applicationinsights_common_1.TelemetryItemCreator.create(pageView, applicationinsights_common_1.PageView.dataType, applicationinsights_common_1.PageView.envelopeType, this._logger, properties, systemProperties);\r\n            // set instrumentation key\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n            // reset ajaxes counter\r\n            this._trackAjaxAttempts = 0;\r\n        };\r\n        ApplicationInsights.prototype.sendPageViewPerformanceInternal = function (pageViewPerformance, properties) {\r\n            var telemetryItem = applicationinsights_common_1.TelemetryItemCreator.create(pageViewPerformance, applicationinsights_common_1.PageViewPerformance.dataType, applicationinsights_common_1.PageViewPerformance.envelopeType, this._logger, properties);\r\n            // set instrumentation key\r\n            this._setTelemetryNameAndIKey(telemetryItem);\r\n            this.core.track(telemetryItem);\r\n        };\r\n        ApplicationInsights.prototype.trackPageViewPerformance = function (pageViewPerformance, customProperties) {\r\n            var item = new applicationinsights_common_1.PageViewPerformance(this.core.logger, pageViewPerformance.name, pageViewPerformance.url, undefined, customProperties);\r\n            this.sendPageViewPerformanceInternal(item, customProperties);\r\n        };\r\n        /**\r\n         * Starts timing how long the user views a page or other item. Call this when the page opens.\r\n         * This method doesn't send any telemetry. Call {@link stopTrackTelemetry} to log the page when it closes.\r\n         * @param name A string that idenfities this item, unique within this HTML document. Defaults to the document title.\r\n         */\r\n        ApplicationInsights.prototype.startTrackPage = function (name) {\r\n            try {\r\n                if (typeof name !== \"string\") {\r\n                    name = window.document && window.document.title || \"\";\r\n                }\r\n                this._pageTracking.start(name);\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.StartTrackFailed, \"startTrackPage failed, page view may not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        /**\r\n         * Logs how long a page or other item was visible, after {@link startTrackPage}. Call this when the page closes.\r\n         * @param name The string you used as the name in startTrackPage. Defaults to the document title.\r\n         * @param url A relative or absolute URL that identifies the page or other item. Defaults to the window location.\r\n         * @param properties Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n         *                   Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric\r\n         */\r\n        ApplicationInsights.prototype.stopTrackPage = function (name, url, properties) {\r\n            try {\r\n                if (typeof name !== \"string\") {\r\n                    name = window.document && window.document.title || \"\";\r\n                }\r\n                if (typeof url !== \"string\") {\r\n                    url = window.location && window.location.href || \"\";\r\n                }\r\n                this._pageTracking.stop(name, url, properties);\r\n                if (this.config.autoTrackPageVisitTime) {\r\n                    this._pageVisitTimeManager.trackPreviousPageVisit(name, url);\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.StopTrackFailed, \"stopTrackPage failed, page view will not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        /**\r\n         * Log an exception you have caught.\r\n         *\r\n         * @param {IExceptionTelemetry} exception   Object which contains exception to be sent\r\n         * @param {{[key: string]: any}} customProperties   Additional data used to filter pages and metrics in the portal. Defaults to empty.\r\n         *\r\n         * Any property of type double will be considered a measurement, and will be treated by Application Insights as a metric.\r\n         * @memberof ApplicationInsights\r\n         */\r\n        ApplicationInsights.prototype.trackException = function (exception, customProperties) {\r\n            try {\r\n                var telemetryItem = applicationinsights_common_1.TelemetryItemCreator.create(exception, applicationinsights_common_1.Exception.dataType, applicationinsights_common_1.Exception.envelopeType, this._logger, customProperties);\r\n                this._setTelemetryNameAndIKey(telemetryItem);\r\n                this.core.track(telemetryItem);\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TrackExceptionFailed, \"trackException failed, exception will not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        /**\r\n         * @description Custom error handler for Application Insights Analytics\r\n         * @param {IAutoExceptionTelemetry} exception\r\n         * @memberof ApplicationInsights\r\n         */\r\n        ApplicationInsights.prototype._onerror = function (exception) {\r\n            try {\r\n                var properties = {\r\n                    url: (exception && exception.url) || document.URL,\r\n                    lineNumber: exception.lineNumber,\r\n                    columnNumber: exception.columnNumber,\r\n                    message: exception.message\r\n                };\r\n                if (applicationinsights_common_1.Util.isCrossOriginError(exception.message, exception.url, exception.lineNumber, exception.columnNumber, exception.error)) {\r\n                    this._sendCORSException(properties.url);\r\n                }\r\n                else {\r\n                    if (!applicationinsights_common_1.Util.isError(exception.error)) {\r\n                        var stack = \"window.onerror@\" + properties.url + \":\" + exception.lineNumber + \":\" + (exception.columnNumber || 0);\r\n                        exception.error = new Error(exception.message);\r\n                        exception.error.stack = stack;\r\n                    }\r\n                    this.trackException({ error: exception.error, severityLevel: applicationinsights_common_1.SeverityLevel.Error }, properties);\r\n                }\r\n            }\r\n            catch (e) {\r\n                var errorString = exception.error ?\r\n                    (exception.error.name + \", \" + exception.error.message)\r\n                    : \"null\";\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.ExceptionWhileLoggingError, \"_onError threw exception while logging error, error will not be collected: \"\r\n                    + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e), errorString: errorString });\r\n            }\r\n        };\r\n        ApplicationInsights.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n            this._telemetryInitializers.push(telemetryInitializer);\r\n        };\r\n        ApplicationInsights.prototype._initialize = function (config, core, extensions) {\r\n            var _this = this;\r\n            if (this._isInitialized) {\r\n                return;\r\n            }\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(core)) {\r\n                throw Error(\"Error initializing\");\r\n            }\r\n            this.core = core;\r\n            this._logger = core.logger;\r\n            this._globalconfig = {\r\n                instrumentationKey: config.instrumentationKey,\r\n                endpointUrl: config.endpointUrl\r\n            };\r\n            this.config = config.extensionConfig && config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n            // load default values if specified\r\n            var defaults = ApplicationInsights.appInsightsDefaultConfig;\r\n            if (defaults !== undefined) {\r\n                if (defaults.extensions && defaults.extensions[this.identifier]) {\r\n                    for (var field in defaults.extensions[this.identifier]) {\r\n                        // for each unspecified field, set the default value\r\n                        if (this.config[field] === undefined) {\r\n                            this.config[field] = defaults[field];\r\n                        }\r\n                    }\r\n                }\r\n                if (this._globalconfig) {\r\n                    for (var field in defaults) {\r\n                        if (this._globalconfig[field] === undefined) {\r\n                            this._globalconfig[field] = defaults[field];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Todo: move this out of static state\r\n            if (this.config.isCookieUseDisabled) {\r\n                applicationinsights_common_1.Util.disableCookies();\r\n            }\r\n            // Todo: move this out of static state\r\n            if (this.config.isStorageUseDisabled) {\r\n                applicationinsights_common_1.Util.disableStorage();\r\n            }\r\n            var configGetters = {\r\n                instrumentationKey: function () { return config.instrumentationKey; },\r\n                accountId: function () { return _this.config.accountId; },\r\n                sessionRenewalMs: function () { return _this.config.sessionRenewalMs; },\r\n                sessionExpirationMs: function () { return _this.config.sessionExpirationMs; },\r\n                sampleRate: function () { return _this.config.samplingPercentage; },\r\n                cookieDomain: function () { return _this.config.cookieDomain; },\r\n                sdkExtension: function () { return _this.config.sdkExtension; },\r\n                isBrowserLinkTrackingEnabled: function () { return _this.config.isBrowserLinkTrackingEnabled; },\r\n                appId: function () { return _this.config.appId; }\r\n            };\r\n            this._pageViewManager = new PageViewManager_1.PageViewManager(this, this.config.overridePageViewDuration, this.core);\r\n            this._telemetryInitializers = [];\r\n            this._addDefaultTelemetryInitializers(configGetters);\r\n            // initialize page view timing\r\n            this._pageTracking = new Timing(this._logger, \"trackPageView\");\r\n            this._pageTracking.action = function (name, url, duration, properties) {\r\n                var pageViewItem = {\r\n                    name: name,\r\n                    uri: url\r\n                };\r\n                // duration must be a custom property in order for the collector to extract it\r\n                if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(properties)) {\r\n                    properties = {};\r\n                }\r\n                properties[durationProperty] = duration;\r\n                _this.sendPageViewInternal(pageViewItem, properties);\r\n            };\r\n            if (this.config.disableExceptionTracking === false &&\r\n                !this.config.autoExceptionInstrumented) {\r\n                // We want to enable exception auto collection and it has not been done so yet\r\n                var onerror_1 = \"onerror\";\r\n                var originalOnError_1 = window[onerror_1];\r\n                var instance_1 = this;\r\n                window.onerror = function (message, url, lineNumber, columnNumber, error) {\r\n                    var handled = originalOnError_1 && originalOnError_1(message, url, lineNumber, columnNumber, error);\r\n                    if (handled !== true) {\r\n                        instance_1._onerror({\r\n                            message: message,\r\n                            url: url,\r\n                            lineNumber: lineNumber,\r\n                            columnNumber: columnNumber,\r\n                            error: error\r\n                        });\r\n                    }\r\n                    return handled;\r\n                };\r\n                this.config.autoExceptionInstrumented = true;\r\n            }\r\n            this._isInitialized = true;\r\n        };\r\n        ApplicationInsights.prototype._addDefaultTelemetryInitializers = function (configGetters) {\r\n            if (!configGetters.isBrowserLinkTrackingEnabled()) {\r\n                var browserLinkPaths_1 = ['/browserLinkSignalR/', '/__browserLink/'];\r\n                var dropBrowserLinkRequests = function (envelope) {\r\n                    if (envelope.baseType === applicationinsights_common_1.RemoteDependencyData.dataType) {\r\n                        var remoteData = envelope.baseData;\r\n                        if (remoteData) {\r\n                            for (var i = 0; i < browserLinkPaths_1.length; i++) {\r\n                                if (remoteData.absoluteUrl && remoteData.absoluteUrl.indexOf(browserLinkPaths_1[i]) >= 0) {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                this._addTelemetryInitializer(dropBrowserLinkRequests);\r\n            }\r\n        };\r\n        ApplicationInsights.prototype._addTelemetryInitializer = function (telemetryInitializer) {\r\n            this._telemetryInitializers.push(telemetryInitializer);\r\n        };\r\n        ApplicationInsights.prototype._sendCORSException = function (url) {\r\n            var exception = {\r\n                message: \"Script error: The browser's same-origin policy prevents us from getting the details of this exception. Consider using the 'crossorigin' attribute.\",\r\n                url: url,\r\n                lineNumber: 0,\r\n                columnNumber: 0,\r\n                error: undefined\r\n            };\r\n            var telemetryItem = applicationinsights_common_1.TelemetryItemCreator.create(exception, applicationinsights_common_1.Exception.dataType, applicationinsights_common_1.Exception.envelopeType, this._logger, { url: url });\r\n            this.core.track(telemetryItem);\r\n        };\r\n        // Mutate telemetryItem inplace to add boilerplate iKey & name info\r\n        ApplicationInsights.prototype._setTelemetryNameAndIKey = function (telemetryItem) {\r\n            telemetryItem.instrumentationKey = this._globalconfig.instrumentationKey;\r\n            var iKeyNoDashes = this._globalconfig.instrumentationKey.replace(/-/g, \"\");\r\n            telemetryItem.name = telemetryItem.name.replace(\"{0}\", iKeyNoDashes);\r\n        };\r\n        ApplicationInsights.Version = \"2.0.1-beta\";\r\n        return ApplicationInsights;\r\n    }());\r\n    exports.ApplicationInsights = ApplicationInsights;\r\n    /**\r\n     * Used to record timed events and page views.\r\n     */\r\n    var Timing = /** @class */ (function () {\r\n        function Timing(logger, name) {\r\n            this._name = name;\r\n            this._events = {};\r\n            this._logger = logger;\r\n        }\r\n        Timing.prototype.start = function (name) {\r\n            if (typeof this._events[name] !== \"undefined\") {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.StartCalledMoreThanOnce, \"start was called more than once for this event without calling stop.\", { name: this._name, key: name }, true);\r\n            }\r\n            this._events[name] = +new Date;\r\n        };\r\n        Timing.prototype.stop = function (name, url, properties) {\r\n            var start = this._events[name];\r\n            if (isNaN(start)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.StopCalledWithoutStart, \"stop was called without a corresponding start.\", { name: this._name, key: name }, true);\r\n            }\r\n            else {\r\n                var end = +new Date;\r\n                var duration = applicationinsights_common_1.PageViewPerformance.getDuration(start, end);\r\n                this.action(name, url, duration, properties);\r\n            }\r\n            delete this._events[name];\r\n            this._events[name] = undefined;\r\n        };\r\n        return Timing;\r\n    }());\r\n});\r\n//# sourceMappingURL=ApplicationInsights.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/MetricData\", \"./Common/DataSanitizer\", \"../Enums\", \"./Common/DataPoint\", \"../Util\"], function (require, exports, MetricData_1, DataSanitizer_1, Enums_1, DataPoint_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Metric = /** @class */ (function (_super) {\r\n        __extends(Metric, _super);\r\n        /**\r\n         * Constructs a new instance of the MetricTelemetry object\r\n         */\r\n        function Metric(logger, name, value, count, min, max, properties) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                metrics: Enums_1.FieldType.Required,\r\n                properties: Enums_1.FieldType.Default\r\n            };\r\n            var dataPoint = new DataPoint_1.DataPoint();\r\n            dataPoint.count = count > 0 ? count : undefined;\r\n            dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n            dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n            dataPoint.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            dataPoint.value = value;\r\n            _this.metrics = [dataPoint];\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            return _this;\r\n        }\r\n        Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n        Metric.dataType = \"MetricData\";\r\n        return Metric;\r\n    }(MetricData_1.MetricData));\r\n    exports.Metric = Metric;\r\n});\r\n//# sourceMappingURL=Metric.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n     */\r\n    var MetricData = /** @class */ (function (_super) {\r\n        __extends(MetricData, _super);\r\n        function MetricData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.metrics = [];\r\n            _this.properties = {};\r\n            return _this;\r\n        }\r\n        return MetricData;\r\n    }(Domain_1.Domain));\r\n    exports.MetricData = MetricData;\r\n});\r\n//# sourceMappingURL=MetricData.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MinChannelPriorty = 100;\r\n});\r\n//# sourceMappingURL=IChannelControls.js.map","define([\"require\", \"exports\", \"../JavaScriptSDK.Enums/EventsDiscardedReason\", \"./CoreUtils\", \"./NotificationManager\", \"./DiagnosticLogger\"], function (require, exports, EventsDiscardedReason_1, CoreUtils_1, NotificationManager_1, DiagnosticLogger_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    \"use strict\";\r\n    var AppInsightsCore = /** @class */ (function () {\r\n        function AppInsightsCore() {\r\n            this._isInitialized = false;\r\n            this._extensions = new Array();\r\n            this._channelController = new ChannelController();\r\n        }\r\n        AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n            var _this = this;\r\n            // Make sure core is only initialized once\r\n            if (this._isInitialized) {\r\n                throw Error(\"Core should not be initialized more than once\");\r\n            }\r\n            if (!config || CoreUtils_1.CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n                throw Error(\"Please provide instrumentation key\");\r\n            }\r\n            this.config = config;\r\n            this._notificationManager = new NotificationManager_1.NotificationManager();\r\n            this.config.extensions = CoreUtils_1.CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n            // add notification to the extensions in the config so other plugins can access it\r\n            this.config.extensionConfig = CoreUtils_1.CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n            this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n            this.logger = new DiagnosticLogger_1.DiagnosticLogger(config);\r\n            // Initial validation\r\n            extensions.forEach(function (extension) {\r\n                if (CoreUtils_1.CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                    throw Error(validationError);\r\n                }\r\n            });\r\n            if (this.config.extensions.length > 0) {\r\n                var isValid_1 = true;\r\n                this.config.extensions.forEach(function (item) {\r\n                    if (CoreUtils_1.CoreUtils.isNullOrUndefined(item)) {\r\n                        isValid_1 = false;\r\n                    }\r\n                });\r\n                if (!isValid_1) {\r\n                    throw Error(validationError);\r\n                }\r\n            }\r\n            // Initial validation complete\r\n            // Concat all available extensions before sorting by priority\r\n            (_a = this._extensions).push.apply(_a, [this._channelController].concat(extensions, this.config.extensions));\r\n            this._extensions = this._extensions.sort(function (a, b) {\r\n                var extA = a;\r\n                var extB = b;\r\n                var typeExtA = typeof extA.processTelemetry;\r\n                var typeExtB = typeof extB.processTelemetry;\r\n                if (typeExtA === 'function' && typeExtB === 'function') {\r\n                    return extA.priority - extB.priority;\r\n                }\r\n                if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                    // keep non telemetryplugin specific extensions at start\r\n                    return 1;\r\n                }\r\n                if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                    return -1;\r\n                }\r\n            });\r\n            // sort complete\r\n            // Check if any two extensions have the same priority, then warn to console\r\n            var priority = {};\r\n            this._extensions.forEach(function (ext) {\r\n                var t = ext;\r\n                if (t && t.priority) {\r\n                    if (!CoreUtils_1.CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                        _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                    }\r\n                    else {\r\n                        priority[t.priority] = t.identifier; // set a value\r\n                    }\r\n                }\r\n            });\r\n            var c = -1;\r\n            // Set next plugin for all until channel controller\r\n            for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n                var curr = (this._extensions[idx]);\r\n                if (curr && typeof curr.processTelemetry !== 'function') {\r\n                    // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                    continue;\r\n                }\r\n                if (curr.priority === ChannelControllerPriority) {\r\n                    c = idx + 1;\r\n                    break; // channel controller will set remaining pipeline\r\n                }\r\n                this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n            }\r\n            // initialize channel controller first, this will initialize all channel plugins\r\n            this._channelController.initialize(this.config, this, this._extensions);\r\n            // initialize remaining regular plugins\r\n            this._extensions.forEach(function (ext) {\r\n                var e = ext;\r\n                if (e && e.priority < ChannelControllerPriority) {\r\n                    ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n                }\r\n            });\r\n            // Remove sender channels from main list\r\n            if (c < this._extensions.length) {\r\n                this._extensions.splice(c);\r\n            }\r\n            if (this.getTransmissionControls().length === 0) {\r\n                throw new Error(\"No channels available\");\r\n            }\r\n            this._isInitialized = true;\r\n            var _a;\r\n        };\r\n        AppInsightsCore.prototype.getTransmissionControls = function () {\r\n            return this._channelController.ChannelControls;\r\n        };\r\n        AppInsightsCore.prototype.track = function (telemetryItem) {\r\n            if (telemetryItem === null) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                // throw error\r\n                throw Error(\"Invalid telemetry item\");\r\n            }\r\n            if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"Provide data.baseType for data.baseData\");\r\n            }\r\n            if (!telemetryItem.baseType) {\r\n                // Hard coded from Common::Event.ts::Event.dataType\r\n                telemetryItem.baseType = \"EventData\";\r\n            }\r\n            if (!telemetryItem.instrumentationKey) {\r\n                // setup default ikey if not passed in\r\n                telemetryItem.instrumentationKey = this.config.instrumentationKey;\r\n            }\r\n            if (!telemetryItem.timestamp) {\r\n                // add default timestamp if not passed in\r\n                telemetryItem.timestamp = new Date();\r\n            }\r\n            // do basic validation before sending it through the pipeline\r\n            this._validateTelmetryItem(telemetryItem);\r\n            // invoke any common telemetry processors before sending through pipeline\r\n            var i = 0;\r\n            while (i < this._extensions.length) {\r\n                if (this._extensions[i].processTelemetry) {\r\n                    this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n        };\r\n        /**\r\n         * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n         * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n         * called.\r\n         * @param {INotificationListener} listener - An INotificationListener object.\r\n         */\r\n        AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n            this._notificationManager.addNotificationListener(listener);\r\n        };\r\n        /**\r\n         * Removes all instances of the listener.\r\n         * @param {INotificationListener} listener - INotificationListener to remove.\r\n         */\r\n        AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n            this._notificationManager.removeNotificationListener(listener);\r\n        };\r\n        /**\r\n         * Periodically check logger.queue for\r\n         */\r\n        AppInsightsCore.prototype.pollInternalLogs = function () {\r\n            var _this = this;\r\n            if (!(this.config.diagnosticLoggingInterval > 0)) {\r\n                throw Error(\"config.diagnosticLoggingInterval must be a positive integer\");\r\n            }\r\n            return setInterval(function () {\r\n                var queue = _this.logger.queue;\r\n                queue.forEach(function (logMessage) {\r\n                    var item = {\r\n                        name: \"InternalMessageId: \" + logMessage.messageId,\r\n                        instrumentationKey: _this.config.instrumentationKey,\r\n                        timestamp: new Date(),\r\n                        baseType: DiagnosticLogger_1._InternalLogMessage.dataType,\r\n                        baseData: { message: logMessage.message }\r\n                    };\r\n                    _this.track(item);\r\n                });\r\n                queue.length = 0;\r\n            }, this.config.diagnosticLoggingInterval);\r\n        };\r\n        AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"telemetry name required\");\r\n            }\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(telemetryItem.timestamp)) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"telemetry timestamp required\");\r\n            }\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(telemetryItem.instrumentationKey)) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"telemetry instrumentationKey required\");\r\n            }\r\n        };\r\n        AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n            this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason_1.EventsDiscardedReason.InvalidEvent);\r\n        };\r\n        return AppInsightsCore;\r\n    }());\r\n    exports.AppInsightsCore = AppInsightsCore;\r\n    var ChannelController = /** @class */ (function () {\r\n        function ChannelController() {\r\n            this.identifier = \"ChannelControllerPlugin\";\r\n            this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n        }\r\n        ChannelController.prototype.processTelemetry = function (item) {\r\n            this.channelQueue.forEach(function (queues) {\r\n                // pass on to first item in queue\r\n                if (queues.length > 0) {\r\n                    queues[0].processTelemetry(item);\r\n                }\r\n            });\r\n        };\r\n        Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n            get: function () {\r\n                return this.channelQueue;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        ChannelController.prototype.initialize = function (config, core, extensions) {\r\n            var _this = this;\r\n            this.channelQueue = new Array();\r\n            if (config.channels) {\r\n                config.channels.forEach(function (queue) {\r\n                    if (queue && queue.length > 0) {\r\n                        queue = queue.sort(function (a, b) {\r\n                            return a.priority - b.priority;\r\n                        });\r\n                        // Initialize each plugin\r\n                        queue.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n                        for (var i = 1; i < queue.length; i++) {\r\n                            queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                        }\r\n                        _this.channelQueue.push(queue);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                var arr = new Array();\r\n                for (var i = 0; i < extensions.length; i++) {\r\n                    var plugin = extensions[i];\r\n                    if (plugin.priority > ChannelControllerPriority) {\r\n                        arr.push(plugin);\r\n                    }\r\n                }\r\n                if (arr.length > 0) {\r\n                    // sort if not sorted\r\n                    arr = arr.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n                    // setup next plugin\r\n                    for (var i = 1; i < arr.length; i++) {\r\n                        arr[i - 1].setNextPlugin(arr[i]);\r\n                    }\r\n                    this.channelQueue.push(arr);\r\n                }\r\n            }\r\n        };\r\n        return ChannelController;\r\n    }());\r\n    var validationError = \"Extensions must provide callback to initialize\";\r\n    var ChannelControllerPriority = 200;\r\n    var duplicatePriority = \"One or more extensions are set at same priority\";\r\n});\r\n//# sourceMappingURL=AppInsightsCore.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../../Interfaces/Contracts/Generated/DataPoint\", \"../../Enums\"], function (require, exports, DataPoint_1, Enums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var DataPoint = /** @class */ (function (_super) {\r\n        __extends(DataPoint, _super);\r\n        function DataPoint() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            /**\r\n             * The data contract for serializing this object.\r\n             */\r\n            _this.aiDataContract = {\r\n                name: Enums_1.FieldType.Required,\r\n                kind: Enums_1.FieldType.Default,\r\n                value: Enums_1.FieldType.Required,\r\n                count: Enums_1.FieldType.Default,\r\n                min: Enums_1.FieldType.Default,\r\n                max: Enums_1.FieldType.Default,\r\n                stdDev: Enums_1.FieldType.Default\r\n            };\r\n            return _this;\r\n        }\r\n        return DataPoint;\r\n    }(DataPoint_1.DataPoint));\r\n    exports.DataPoint = DataPoint;\r\n});\r\n//# sourceMappingURL=DataPoint.js.map","define([\"require\", \"exports\", \"./DataPointType\"], function (require, exports, DataPointType_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Metric data single measurement.\r\n     */\r\n    var DataPoint = /** @class */ (function () {\r\n        function DataPoint() {\r\n            this.kind = DataPointType_1.DataPointType.Measurement;\r\n        }\r\n        return DataPoint;\r\n    }());\r\n    exports.DataPoint = DataPoint;\r\n});\r\n//# sourceMappingURL=DataPoint.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // THIS FILE WAS AUTOGENERATED\r\n    /**\r\n     * Type of the metric data measurement.\r\n     */\r\n    var DataPointType;\r\n    (function (DataPointType) {\r\n        DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n        DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n    })(DataPointType = exports.DataPointType || (exports.DataPointType = {}));\r\n});\r\n//# sourceMappingURL=DataPointType.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n});\r\n//# sourceMappingURL=Constants.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../../Interfaces/Contracts/Generated/Envelope\", \"./DataSanitizer\", \"../../Enums\", \"../../Util\"], function (require, exports, Envelope_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Envelope = /** @class */ (function (_super) {\r\n        __extends(Envelope, _super);\r\n        /**\r\n         * Constructs a new instance of telemetry data.\r\n         */\r\n        function Envelope(logger, data, name) {\r\n            var _this = _super.call(this) || this;\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            _this.data = data;\r\n            _this.time = Util_1.Util.toISOStringForIE8(new Date());\r\n            _this.aiDataContract = {\r\n                time: Enums_1.FieldType.Required,\r\n                iKey: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Required,\r\n                sampleRate: function () {\r\n                    return (_this.sampleRate == 100) ? Enums_1.FieldType.Hidden : Enums_1.FieldType.Required;\r\n                },\r\n                tags: Enums_1.FieldType.Required,\r\n                data: Enums_1.FieldType.Required\r\n            };\r\n            return _this;\r\n        }\r\n        return Envelope;\r\n    }(Envelope_1.Envelope));\r\n    exports.Envelope = Envelope;\r\n});\r\n//# sourceMappingURL=Envelope.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * System variables for a telemetry item.\r\n     */\r\n    var Envelope = /** @class */ (function () {\r\n        function Envelope() {\r\n            this.ver = 1;\r\n            this.sampleRate = 100.0;\r\n            this.tags = {};\r\n        }\r\n        return Envelope;\r\n    }());\r\n    exports.Envelope = Envelope;\r\n});\r\n//# sourceMappingURL=Envelope.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/EventData\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, EventData_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Event = /** @class */ (function (_super) {\r\n        __extends(Event, _super);\r\n        /**\r\n         * Constructs a new instance of the EventTelemetry object\r\n         */\r\n        function Event(logger, name, properties, measurements) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Required,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default\r\n            };\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            return _this;\r\n        }\r\n        Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n        Event.dataType = \"EventData\";\r\n        return Event;\r\n    }(EventData_1.EventData));\r\n    exports.Event = Event;\r\n});\r\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/StackFrame\", \"../Interfaces/Contracts/Generated/ExceptionData\", \"../Interfaces/Contracts/Generated/ExceptionDetails\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, StackFrame_1, ExceptionData_1, ExceptionDetails_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Exception = /** @class */ (function (_super) {\r\n        __extends(Exception, _super);\r\n        /**\r\n        * Constructs a new isntance of the ExceptionTelemetry object\r\n        */\r\n        function Exception(logger, exception, properties, measurements, severityLevel) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                exceptions: Enums_1.FieldType.Required,\r\n                severityLevel: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default\r\n            };\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            return _this;\r\n        }\r\n        /**\r\n        * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n        */\r\n        Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n            return {\r\n                exceptions: [\r\n                    {\r\n                        hasFullStack: true,\r\n                        message: message,\r\n                        stack: details,\r\n                        typeName: typeName\r\n                    }\r\n                ]\r\n            };\r\n        };\r\n        Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n        Exception.dataType = \"ExceptionData\";\r\n        return Exception;\r\n    }(ExceptionData_1.ExceptionData));\r\n    exports.Exception = Exception;\r\n    var _ExceptionDetails = /** @class */ (function (_super) {\r\n        __extends(_ExceptionDetails, _super);\r\n        function _ExceptionDetails(logger, exception) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                id: Enums_1.FieldType.Default,\r\n                outerId: Enums_1.FieldType.Default,\r\n                typeName: Enums_1.FieldType.Required,\r\n                message: Enums_1.FieldType.Required,\r\n                hasFullStack: Enums_1.FieldType.Default,\r\n                stack: Enums_1.FieldType.Default,\r\n                parsedStack: Enums_1.FieldType.Array\r\n            };\r\n            _this.typeName = DataSanitizer_1.DataSanitizer.sanitizeString(logger, exception.name) || Util_1.Util.NotSpecified;\r\n            _this.message = DataSanitizer_1.DataSanitizer.sanitizeMessage(logger, exception.message) || Util_1.Util.NotSpecified;\r\n            var stack = exception[\"stack\"];\r\n            _this.parsedStack = _this.parseStack(stack);\r\n            _this.stack = DataSanitizer_1.DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util_1.Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n            return _this;\r\n        }\r\n        _ExceptionDetails.prototype.parseStack = function (stack) {\r\n            var parsedStack = undefined;\r\n            if (typeof stack === \"string\") {\r\n                var frames = stack.split('\\n');\r\n                parsedStack = [];\r\n                var level = 0;\r\n                var totalSizeInBytes = 0;\r\n                for (var i = 0; i <= frames.length; i++) {\r\n                    var frame = frames[i];\r\n                    if (_StackFrame.regex.test(frame)) {\r\n                        var parsedFrame = new _StackFrame(frames[i], level++);\r\n                        totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                        parsedStack.push(parsedFrame);\r\n                    }\r\n                }\r\n                // DP Constraint - exception parsed stack must be < 32KB\r\n                // remove frames from the middle to meet the threshold\r\n                var exceptionParsedStackThreshold = 32 * 1024;\r\n                if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                    var left = 0;\r\n                    var right = parsedStack.length - 1;\r\n                    var size = 0;\r\n                    var acceptedLeft = left;\r\n                    var acceptedRight = right;\r\n                    while (left < right) {\r\n                        // check size\r\n                        var lSize = parsedStack[left].sizeInBytes;\r\n                        var rSize = parsedStack[right].sizeInBytes;\r\n                        size += lSize + rSize;\r\n                        if (size > exceptionParsedStackThreshold) {\r\n                            // remove extra frames from the middle\r\n                            var howMany = acceptedRight - acceptedLeft + 1;\r\n                            parsedStack.splice(acceptedLeft, howMany);\r\n                            break;\r\n                        }\r\n                        // update pointers\r\n                        acceptedLeft = left;\r\n                        acceptedRight = right;\r\n                        left++;\r\n                        right--;\r\n                    }\r\n                }\r\n            }\r\n            return parsedStack;\r\n        };\r\n        return _ExceptionDetails;\r\n    }(ExceptionDetails_1.ExceptionDetails));\r\n    var _StackFrame = /** @class */ (function (_super) {\r\n        __extends(_StackFrame, _super);\r\n        function _StackFrame(frame, level) {\r\n            var _this = _super.call(this) || this;\r\n            _this.sizeInBytes = 0;\r\n            _this.aiDataContract = {\r\n                level: Enums_1.FieldType.Required,\r\n                method: Enums_1.FieldType.Required,\r\n                assembly: Enums_1.FieldType.Default,\r\n                fileName: Enums_1.FieldType.Default,\r\n                line: Enums_1.FieldType.Default\r\n            };\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util_1.Util.trim(frame);\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util_1.Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util_1.Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n            _this.sizeInBytes += _this.method.length;\r\n            _this.sizeInBytes += _this.fileName.length;\r\n            _this.sizeInBytes += _this.assembly.length;\r\n            // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n            _this.sizeInBytes += _StackFrame.baseSize;\r\n            _this.sizeInBytes += _this.level.toString().length;\r\n            _this.sizeInBytes += _this.line.toString().length;\r\n            return _this;\r\n        }\r\n        // regex to match stack frames from ie/chrome/ff\r\n        // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n        _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n        _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n        return _StackFrame;\r\n    }(StackFrame_1.StackFrame));\r\n    exports._StackFrame = _StackFrame;\r\n});\r\n//# sourceMappingURL=Exception.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // THIS FILE WAS AUTOGENERATED\r\n    /**\r\n     * Stack frame information.\r\n     */\r\n    var StackFrame = /** @class */ (function () {\r\n        function StackFrame() {\r\n        }\r\n        return StackFrame;\r\n    }());\r\n    exports.StackFrame = StackFrame;\r\n});\r\n//# sourceMappingURL=StackFrame.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n     */\r\n    var ExceptionData = /** @class */ (function (_super) {\r\n        __extends(ExceptionData, _super);\r\n        function ExceptionData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.exceptions = [];\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return ExceptionData;\r\n    }(Domain_1.Domain));\r\n    exports.ExceptionData = ExceptionData;\r\n});\r\n//# sourceMappingURL=ExceptionData.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Exception details of the exception in a chain.\r\n     */\r\n    var ExceptionDetails = /** @class */ (function () {\r\n        function ExceptionDetails() {\r\n            this.hasFullStack = true;\r\n            this.parsedStack = [];\r\n        }\r\n        return ExceptionDetails;\r\n    }());\r\n    exports.ExceptionDetails = ExceptionDetails;\r\n});\r\n//# sourceMappingURL=ExceptionDetails.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/PageViewData\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, PageViewData_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageView = /** @class */ (function (_super) {\r\n        __extends(PageView, _super);\r\n        /**\r\n         * Constructs a new instance of the PageEventTelemetry object\r\n         */\r\n        function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Default,\r\n                url: Enums_1.FieldType.Default,\r\n                duration: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default,\r\n                id: Enums_1.FieldType.Default,\r\n            };\r\n            _this.id = DataSanitizer_1.DataSanitizer.sanitizeId(logger, id);\r\n            _this.url = DataSanitizer_1.DataSanitizer.sanitizeUrl(logger, url);\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            if (!isNaN(durationMs)) {\r\n                _this.duration = Util_1.Util.msToTimeSpan(durationMs);\r\n            }\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            return _this;\r\n        }\r\n        PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n        PageView.dataType = \"PageviewData\";\r\n        return PageView;\r\n    }(PageViewData_1.PageViewData));\r\n    exports.PageView = PageView;\r\n});\r\n//# sourceMappingURL=PageView.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\", \"../Util\", \"../Interfaces/Contracts/Generated/RemoteDependencyData\"], function (require, exports, DataSanitizer_1, Enums_1, Util_1, Util_2, RemoteDependencyData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var RemoteDependencyData = /** @class */ (function (_super) {\r\n        __extends(RemoteDependencyData, _super);\r\n        /**\r\n         * Constructs a new instance of the RemoteDependencyData object\r\n         */\r\n        function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, properties, measurements) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                id: Enums_1.FieldType.Required,\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Default,\r\n                resultCode: Enums_1.FieldType.Default,\r\n                duration: Enums_1.FieldType.Default,\r\n                success: Enums_1.FieldType.Default,\r\n                data: Enums_1.FieldType.Default,\r\n                target: Enums_1.FieldType.Default,\r\n                type: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default,\r\n                kind: Enums_1.FieldType.Default,\r\n                value: Enums_1.FieldType.Default,\r\n                count: Enums_1.FieldType.Default,\r\n                min: Enums_1.FieldType.Default,\r\n                max: Enums_1.FieldType.Default,\r\n                stdDev: Enums_1.FieldType.Default,\r\n                dependencyKind: Enums_1.FieldType.Default,\r\n                dependencySource: Enums_1.FieldType.Default,\r\n                commandName: Enums_1.FieldType.Default,\r\n                dependencyTypeName: Enums_1.FieldType.Default,\r\n            };\r\n            _this.id = id;\r\n            _this.duration = Util_1.Util.msToTimeSpan(value);\r\n            _this.success = success;\r\n            _this.resultCode = resultCode + \"\";\r\n            _this.type = \"Ajax\";\r\n            _this.data = DataSanitizer_1.DataSanitizer.sanitizeUrl(logger, commandName);\r\n            var dependencyFields = Util_2.AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n            _this.target = dependencyFields.target;\r\n            _this.name = dependencyFields.name;\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            return _this;\r\n        }\r\n        RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n        RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n        return RemoteDependencyData;\r\n    }(RemoteDependencyData_1.RemoteDependencyData));\r\n    exports.RemoteDependencyData = RemoteDependencyData;\r\n});\r\n//# sourceMappingURL=RemoteDependencyData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n     */\r\n    var RemoteDependencyData = /** @class */ (function (_super) {\r\n        __extends(RemoteDependencyData, _super);\r\n        function RemoteDependencyData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.success = true;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return RemoteDependencyData;\r\n    }(Domain_1.Domain));\r\n    exports.RemoteDependencyData = RemoteDependencyData;\r\n});\r\n//# sourceMappingURL=RemoteDependencyData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/MessageData\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, MessageData_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Trace = /** @class */ (function (_super) {\r\n        __extends(Trace, _super);\r\n        /**\r\n         * Constructs a new instance of the TraceTelemetry object\r\n         */\r\n        function Trace(logger, message, properties, severityLevel) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                message: Enums_1.FieldType.Required,\r\n                severityLevel: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default\r\n            };\r\n            message = message || Util_1.Util.NotSpecified;\r\n            _this.message = DataSanitizer_1.DataSanitizer.sanitizeMessage(logger, message);\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            return _this;\r\n        }\r\n        Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n        Trace.dataType = \"MessageData\";\r\n        return Trace;\r\n    }(MessageData_1.MessageData));\r\n    exports.Trace = Trace;\r\n});\r\n//# sourceMappingURL=Trace.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n     */\r\n    var MessageData = /** @class */ (function (_super) {\r\n        __extends(MessageData, _super);\r\n        function MessageData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            return _this;\r\n        }\r\n        return MessageData;\r\n    }(Domain_1.Domain));\r\n    exports.MessageData = MessageData;\r\n});\r\n//# sourceMappingURL=MessageData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/PageViewPerfData\", \"../Enums\", \"./Common/DataSanitizer\", \"../Util\", \"applicationinsights-core-js\"], function (require, exports, PageViewPerfData_1, Enums_1, DataSanitizer_1, Util_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageViewPerformance = /** @class */ (function (_super) {\r\n        __extends(PageViewPerformance, _super);\r\n        /**\r\n         * Constructs a new instance of the PageEventTelemetry object\r\n         */\r\n        function PageViewPerformance(logger, name, url, unused, properties, measurements) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Default,\r\n                url: Enums_1.FieldType.Default,\r\n                duration: Enums_1.FieldType.Default,\r\n                perfTotal: Enums_1.FieldType.Default,\r\n                networkConnect: Enums_1.FieldType.Default,\r\n                sentRequest: Enums_1.FieldType.Default,\r\n                receivedResponse: Enums_1.FieldType.Default,\r\n                domProcessing: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default\r\n            };\r\n            _this.isValid = false;\r\n            /*\r\n             * http://www.w3.org/TR/navigation-timing/#processing-model\r\n             *  |-navigationStart\r\n             *  |             |-connectEnd\r\n             *  |             ||-requestStart\r\n             *  |             ||             |-responseStart\r\n             *  |             ||             |              |-responseEnd\r\n             *  |             ||             |              |\r\n             *  |             ||             |              |         |-loadEventEnd\r\n             *  |---network---||---request---|---response---|---dom---|\r\n             *  |--------------------------total----------------------|\r\n             */\r\n            var timing = PageViewPerformance.getPerformanceTiming();\r\n            if (timing) {\r\n                var total = PageViewPerformance.getDuration(timing.navigationStart, timing.loadEventEnd);\r\n                var network = PageViewPerformance.getDuration(timing.navigationStart, timing.connectEnd);\r\n                var request = PageViewPerformance.getDuration(timing.requestStart, timing.responseStart);\r\n                var response = PageViewPerformance.getDuration(timing.responseStart, timing.responseEnd);\r\n                var dom = PageViewPerformance.getDuration(timing.responseEnd, timing.loadEventEnd);\r\n                if (total == 0) {\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                }\r\n                else if (!PageViewPerformance.shouldCollectDuration(total, network, request, response, dom)) {\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                }\r\n                else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                    // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                    // in this case, don't report client performance from this page\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                }\r\n                else {\r\n                    _this.durationMs = total;\r\n                    // convert to timespans\r\n                    _this.perfTotal = _this.duration = Util_1.Util.msToTimeSpan(total);\r\n                    _this.networkConnect = Util_1.Util.msToTimeSpan(network);\r\n                    _this.sentRequest = Util_1.Util.msToTimeSpan(request);\r\n                    _this.receivedResponse = Util_1.Util.msToTimeSpan(response);\r\n                    _this.domProcessing = Util_1.Util.msToTimeSpan(dom);\r\n                    _this.isValid = true;\r\n                }\r\n            }\r\n            _this.url = DataSanitizer_1.DataSanitizer.sanitizeUrl(logger, url);\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            return _this;\r\n        }\r\n        /**\r\n         * Indicates whether this instance of PageViewPerformance is valid and should be sent\r\n         */\r\n        PageViewPerformance.prototype.getIsValid = function () {\r\n            return this.isValid;\r\n        };\r\n        /**\r\n        * Gets the total duration (PLT) in milliseconds. Check getIsValid() before using this method.\r\n        */\r\n        PageViewPerformance.prototype.getDurationMs = function () {\r\n            return this.durationMs;\r\n        };\r\n        PageViewPerformance.getPerformanceTiming = function () {\r\n            if (PageViewPerformance.isPerformanceTimingSupported()) {\r\n                return window.performance.timing;\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n        * Returns true is window performance timing API is supported, false otherwise.\r\n        */\r\n        PageViewPerformance.isPerformanceTimingSupported = function () {\r\n            return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n        };\r\n        /**\r\n         * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n         * Returns true if ready, false otherwise.\r\n         */\r\n        PageViewPerformance.isPerformanceTimingDataReady = function () {\r\n            var timing = window.performance.timing;\r\n            return timing.domainLookupStart > 0\r\n                && timing.navigationStart > 0\r\n                && timing.responseStart > 0\r\n                && timing.requestStart > 0\r\n                && timing.loadEventEnd > 0\r\n                && timing.responseEnd > 0\r\n                && timing.connectEnd > 0\r\n                && timing.domLoading > 0;\r\n        };\r\n        PageViewPerformance.getDuration = function (start, end) {\r\n            var duration = undefined;\r\n            if (!(isNaN(start) || isNaN(end))) {\r\n                duration = Math.max(end - start, 0);\r\n            }\r\n            return duration;\r\n        };\r\n        /**\r\n         * This method tells if given durations should be excluded from collection.\r\n         */\r\n        PageViewPerformance.shouldCollectDuration = function () {\r\n            var durations = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                durations[_i] = arguments[_i];\r\n            }\r\n            // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n            var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n            var userAgent = navigator.userAgent;\r\n            var isGoogleBot = false;\r\n            if (userAgent) {\r\n                for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                    isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n                }\r\n            }\r\n            if (isGoogleBot) {\r\n                // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API. \r\n                return false;\r\n            }\r\n            else {\r\n                // for other page views, don't report if it's outside of a reasonable range\r\n                for (var i = 0; i < durations.length; i++) {\r\n                    if (durations[i] >= PageViewPerformance.MAX_DURATION_ALLOWED) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n        PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n        PageViewPerformance.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        return PageViewPerformance;\r\n    }(PageViewPerfData_1.PageViewPerfData));\r\n    exports.PageViewPerformance = PageViewPerformance;\r\n});\r\n//# sourceMappingURL=PageViewPerformance.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./PageViewData\"], function (require, exports, PageViewData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n     */\r\n    var PageViewPerfData = /** @class */ (function (_super) {\r\n        __extends(PageViewPerfData, _super);\r\n        function PageViewPerfData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return PageViewPerfData;\r\n    }(PageViewData_1.PageViewData));\r\n    exports.PageViewPerfData = PageViewPerfData;\r\n});\r\n//# sourceMappingURL=PageViewPerfData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../../Interfaces/Contracts/Generated/Data\", \"../../Enums\"], function (require, exports, Data_1, Enums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Data = /** @class */ (function (_super) {\r\n        __extends(Data, _super);\r\n        /**\r\n         * Constructs a new instance of telemetry data.\r\n         */\r\n        function Data(baseType, data) {\r\n            var _this = _super.call(this) || this;\r\n            /**\r\n             * The data contract for serializing this object.\r\n             */\r\n            _this.aiDataContract = {\r\n                baseType: Enums_1.FieldType.Required,\r\n                baseData: Enums_1.FieldType.Required\r\n            };\r\n            _this.baseType = baseType;\r\n            _this.baseData = data;\r\n            return _this;\r\n        }\r\n        return Data;\r\n    }(Data_1.Data));\r\n    exports.Data = Data;\r\n});\r\n//# sourceMappingURL=Data.js.map","// THIS FILE WAS AUTOGENERATED\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n    * Defines the level of severity for the event.\r\n    */\r\n    var SeverityLevel;\r\n    (function (SeverityLevel) {\r\n        SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n        SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n        SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n        SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n        SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n    })(SeverityLevel = exports.SeverityLevel || (exports.SeverityLevel = {}));\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // THIS FILE WAS AUTOGENERATED\r\n    var ContextTagKeys = /** @class */ (function () {\r\n        function ContextTagKeys() {\r\n            this.applicationVersion = \"ai.application.ver\";\r\n            this.applicationBuild = \"ai.application.build\";\r\n            this.applicationTypeId = \"ai.application.typeId\";\r\n            this.applicationId = \"ai.application.applicationId\";\r\n            this.applicationLayer = \"ai.application.layer\";\r\n            this.deviceId = \"ai.device.id\";\r\n            this.deviceIp = \"ai.device.ip\";\r\n            this.deviceLanguage = \"ai.device.language\";\r\n            this.deviceLocale = \"ai.device.locale\";\r\n            this.deviceModel = \"ai.device.model\";\r\n            this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n            this.deviceNetwork = \"ai.device.network\";\r\n            this.deviceNetworkName = \"ai.device.networkName\";\r\n            this.deviceOEMName = \"ai.device.oemName\";\r\n            this.deviceOS = \"ai.device.os\";\r\n            this.deviceOSVersion = \"ai.device.osVersion\";\r\n            this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n            this.deviceRoleName = \"ai.device.roleName\";\r\n            this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n            this.deviceType = \"ai.device.type\";\r\n            this.deviceMachineName = \"ai.device.machineName\";\r\n            this.deviceVMName = \"ai.device.vmName\";\r\n            this.deviceBrowser = \"ai.device.browser\";\r\n            this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n            this.locationIp = \"ai.location.ip\";\r\n            this.locationCountry = \"ai.location.country\";\r\n            this.locationProvince = \"ai.location.province\";\r\n            this.locationCity = \"ai.location.city\";\r\n            this.operationId = \"ai.operation.id\";\r\n            this.operationName = \"ai.operation.name\";\r\n            this.operationParentId = \"ai.operation.parentId\";\r\n            this.operationRootId = \"ai.operation.rootId\";\r\n            this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n            this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n            this.sessionId = \"ai.session.id\";\r\n            this.sessionIsFirst = \"ai.session.isFirst\";\r\n            this.sessionIsNew = \"ai.session.isNew\";\r\n            this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n            this.userAccountId = \"ai.user.accountId\";\r\n            this.userAgent = \"ai.user.userAgent\";\r\n            this.userId = \"ai.user.id\";\r\n            this.userStoreRegion = \"ai.user.storeRegion\";\r\n            this.userAuthUserId = \"ai.user.authUserId\";\r\n            this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n            this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n            this.cloudName = \"ai.cloud.name\";\r\n            this.cloudRole = \"ai.cloud.role\";\r\n            this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n            this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n            this.cloudEnvironment = \"ai.cloud.environment\";\r\n            this.cloudLocation = \"ai.cloud.location\";\r\n            this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n            this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n            this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n            this.internalNodeName = \"ai.internal.nodeName\";\r\n        }\r\n        return ContextTagKeys;\r\n    }());\r\n    exports.ContextTagKeys = ContextTagKeys;\r\n});\r\n//# sourceMappingURL=ContextTagKeys.js.map","define([\"require\", \"exports\", \"./Util\", \"./Telemetry/Common/DataSanitizer\", \"applicationinsights-core-js\"], function (require, exports, Util_1, DataSanitizer_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var TelemetryItemCreator = /** @class */ (function () {\r\n        function TelemetryItemCreator() {\r\n        }\r\n        /**\r\n         * Create a telemetry item that the 1DS channel understands\r\n         * @param item domain specific properties; part B\r\n         * @param baseType telemetry item type. ie PageViewData\r\n         * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n         * @param customProperties user defined custom properties; part C\r\n         * @param systemProperties system properties that are added to the context; part A\r\n         * @returns ITelemetryItem that is sent to channel\r\n         */\r\n        TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n            envelopeName = DataSanitizer_1.DataSanitizer.sanitizeString(logger, envelopeName) || Util_1.Util.NotSpecified;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(item) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(baseType) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(envelopeName)) {\r\n                throw Error(\"Input doesn't contain all required fields\");\r\n            }\r\n            var telemetryItem = {\r\n                name: envelopeName,\r\n                timestamp: new Date(),\r\n                instrumentationKey: \"\",\r\n                ctx: systemProperties ? systemProperties : {},\r\n                tags: [],\r\n                data: {},\r\n                baseType: baseType,\r\n                baseData: item\r\n            };\r\n            // Part C\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(customProperties)) {\r\n                for (var prop in customProperties) {\r\n                    if (customProperties.hasOwnProperty(prop)) {\r\n                        telemetryItem.data[prop] = customProperties[prop];\r\n                    }\r\n                }\r\n            }\r\n            return telemetryItem;\r\n        };\r\n        return TelemetryItemCreator;\r\n    }());\r\n    exports.TelemetryItemCreator = TelemetryItemCreator;\r\n});\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n    * Class encapsulates sending page views and page view performance telemetry.\r\n    */\r\n    var PageViewManager = /** @class */ (function () {\r\n        function PageViewManager(appInsights, overridePageViewDuration, core) {\r\n            this.pageViewPerformanceSent = false;\r\n            this.overridePageViewDuration = false;\r\n            this.overridePageViewDuration = overridePageViewDuration;\r\n            this.appInsights = appInsights;\r\n            if (core) {\r\n                this._channel = function () { return (core.getTransmissionControls()); };\r\n                this._logger = core.logger;\r\n            }\r\n        }\r\n        /**\r\n        * Currently supported cases:\r\n        * 1) (default case) track page view called with default parameters, overridePageViewDuration = false. Page view is sent with page view performance when navigation timing data is available.\r\n        *    a. If navigation timing is not supported then page view is sent right away with undefined duration. Page view performance is not sent.\r\n        * 2) overridePageViewDuration = true, custom duration provided. Custom duration is used, page view sends right away.\r\n        * 3) overridePageViewDuration = true, custom duration NOT provided. Page view is sent right away, duration is time spent from page load till now (or undefined if navigation timing is not supported).\r\n        * 4) overridePageViewDuration = false, custom duration is provided. Page view is sent right away with custom duration.\r\n        *\r\n        * In all cases page view performance is sent once (only for the 1st call of trackPageView), or not sent if navigation timing is not supported.\r\n        */\r\n        PageViewManager.prototype.trackPageView = function (pageView, customProperties) {\r\n            var _this = this;\r\n            var name = pageView.name;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(name) || typeof name !== \"string\") {\r\n                pageView.name = window.document && window.document.title || \"\";\r\n            }\r\n            var uri = pageView.uri;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(uri) || typeof uri !== \"string\") {\r\n                pageView.uri = window.location && window.location.href || \"\";\r\n            }\r\n            // case 1a. if performance timing is not supported by the browser, send the page view telemetry with the duration provided by the user. If the user\r\n            // do not provide the duration, set duration to undefined\r\n            // Also this is case 4\r\n            if (!applicationinsights_common_1.PageViewPerformance.isPerformanceTimingSupported()) {\r\n                this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                // no navigation timing (IE 8, iOS Safari 8.4, Opera Mini 8 - see http://caniuse.com/#feat=nav-timing)\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.NavigationTimingNotSupported, \"trackPageView: navigation timing API used for calculation of page duration is not supported in this browser. This page view will be collected without duration and timing info.\");\r\n                return;\r\n            }\r\n            var pageViewSent = false;\r\n            var customDuration = undefined;\r\n            // if the performance timing is supported by the browser, calculate the custom duration\r\n            var start = applicationinsights_common_1.PageViewPerformance.getPerformanceTiming().navigationStart;\r\n            customDuration = applicationinsights_common_1.PageViewPerformance.getDuration(start, +new Date);\r\n            if (!applicationinsights_common_1.PageViewPerformance.shouldCollectDuration(customDuration)) {\r\n                customDuration = undefined;\r\n            }\r\n            // if the user has provided duration, send a page view telemetry with the provided duration. Otherwise, if\r\n            // overridePageViewDuration is set to true, send a page view telemetry with the custom duration calculated earlier\r\n            var duration = undefined;\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(customProperties) &&\r\n                !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(customProperties.duration)) {\r\n                duration = customProperties.duration;\r\n            }\r\n            if (this.overridePageViewDuration || !isNaN(duration)) {\r\n                if (isNaN(duration)) {\r\n                    // case 3\r\n                    if (!customProperties) {\r\n                        customProperties = {};\r\n                    }\r\n                    customProperties[\"duration\"] = customDuration;\r\n                }\r\n                // case 2\r\n                this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                pageViewSent = true;\r\n            }\r\n            // now try to send the page view performance telemetry\r\n            var maxDurationLimit = 60000;\r\n            if (!customProperties) {\r\n                customProperties = {};\r\n            }\r\n            var handle = setInterval((function () {\r\n                try {\r\n                    if (applicationinsights_common_1.PageViewPerformance.isPerformanceTimingDataReady()) {\r\n                        clearInterval(handle);\r\n                        var pageViewPerformance = new applicationinsights_common_1.PageViewPerformance(_this._logger, name, uri, null);\r\n                        if (!pageViewPerformance.getIsValid() && !pageViewSent) {\r\n                            // If navigation timing gives invalid numbers, then go back to \"override page view duration\" mode.\r\n                            // That's the best value we can get that makes sense.\r\n                            customProperties[\"duration\"] = customDuration;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                            _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                        }\r\n                        else {\r\n                            if (!pageViewSent) {\r\n                                customProperties[\"duration\"] = pageViewPerformance.getDurationMs();\r\n                                _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                            }\r\n                            if (!_this.pageViewPerformanceSent) {\r\n                                _this.appInsights.sendPageViewPerformanceInternal(pageViewPerformance, customProperties);\r\n                                _this.pageViewPerformanceSent = true;\r\n                            }\r\n                            _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                        }\r\n                    }\r\n                    else if (applicationinsights_common_1.PageViewPerformance.getDuration(start, +new Date) > maxDurationLimit) {\r\n                        // if performance timings are not ready but we exceeded the maximum duration limit, just log a page view telemetry\r\n                        // with the maximum duration limit. Otherwise, keep waiting until performance timings are ready\r\n                        clearInterval(handle);\r\n                        if (!pageViewSent) {\r\n                            customProperties[\"duration\"] = maxDurationLimit;\r\n                            _this.appInsights.sendPageViewInternal(pageView, customProperties);\r\n                            _this._channel().forEach(function (queues) { queues.forEach(function (q) { return q.flush(true); }); });\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    _this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TrackPVFailedCalc, \"trackPageView failed on page load calculation: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n                }\r\n            }), 100);\r\n        };\r\n        return PageViewManager;\r\n    }());\r\n    exports.PageViewManager = PageViewManager;\r\n});\r\n//# sourceMappingURL=PageViewManager.js.map","import { IConfiguration, AppInsightsCore, IAppInsightsCore, LoggingSeverity, _InternalMessageId, ITelemetryItem } from \"applicationinsights-core-js\";\r\nimport { ApplicationInsights, IAppInsights } from \"applicationinsights-analytics-js\";\r\nimport { Util, IConfig, IDependencyTelemetry, PageViewPerformance, IPageViewPerformanceTelemetry, IPageViewTelemetry, IExceptionTelemetry, IAutoExceptionTelemetry, ITraceTelemetry, IMetricTelemetry } from \"applicationinsights-common\";\r\nimport { Sender } from \"applicationinsights-channel-js\";\r\nimport { PropertiesPlugin, IPropertiesPlugin } from \"applicationinsights-properties-js\";\r\nimport { AjaxPlugin as DependenciesPlugin, IDependenciesPlugin } from 'applicationinsights-dependencies-js';\r\n\r\n\"use strict\";\r\n\r\nexport interface Snippet {\r\n    queue: Array<() => void>;\r\n    config: IConfiguration;\r\n}\r\n\r\nexport interface IApplicationInsights extends IAppInsights, IDependenciesPlugin, IPropertiesPlugin {\r\n    appInsights: ApplicationInsights;\r\n};\r\n\r\nexport class Initialization implements IApplicationInsights {\r\n    public snippet: Snippet;\r\n    public config: IConfiguration;\r\n    private core: IAppInsightsCore;\r\n    public appInsights: ApplicationInsights;\r\n    private properties: PropertiesPlugin;\r\n    private dependencies: DependenciesPlugin;\r\n\r\n    constructor(snippet: Snippet) {\r\n\r\n        // initialize the queue and config in case they are undefined\r\n        snippet.queue = snippet.queue || [];\r\n        var config: IConfiguration = snippet.config || <any>{};\r\n\r\n        // ensure instrumentationKey is specified\r\n        if (config && !config.instrumentationKey) {\r\n            config = <any>snippet;\r\n            ApplicationInsights.Version = \"2.0.0\";\r\n        }\r\n\r\n        this.appInsights = new ApplicationInsights();\r\n        // set default values using config passed through snippet\r\n        config = Initialization.getDefaultConfig(config, this.appInsights.identifier);\r\n\r\n        this.properties = new PropertiesPlugin();\r\n        this.dependencies = new DependenciesPlugin();\r\n\r\n        this.snippet = snippet;\r\n        this.config = config;\r\n    }\r\n    \r\n    // Analytics Plugin\r\n    public trackPageView(pageView: IPageViewTelemetry, customProperties?: { [key: string]: any; }) {\r\n        this.appInsights.trackPageView(pageView, customProperties);\r\n    }\r\n    public trackPageViewPerformance(pageViewPerformance: IPageViewPerformanceTelemetry, customProperties?: { [key:string]: any }): void {\r\n        this.appInsights.trackPageViewPerformance(pageViewPerformance, customProperties);\r\n    }\r\n    public trackException(exception: IExceptionTelemetry, customProperties?: { [key: string]: any; }): void {\r\n        this.appInsights.trackException(exception, customProperties);\r\n    }\r\n    public _onerror(exception: IAutoExceptionTelemetry): void {\r\n        this.appInsights._onerror(exception);\r\n    }\r\n    public trackTrace(trace: ITraceTelemetry, customProperties?: { [key: string]: any; }): void {\r\n        this.appInsights.trackTrace(trace, customProperties);\r\n    }\r\n    public trackMetric(metric: IMetricTelemetry, customProperties?: { [key: string]: any; }): void {\r\n        this.appInsights.trackMetric(metric, customProperties);\r\n    }\r\n    public startTrackPage(name?: string): void {\r\n        this.appInsights.startTrackPage(name);\r\n    }\r\n    public stopTrackPage(name?: string, url?: string, customProperties?: Object) {\r\n        this.appInsights.stopTrackPage(name, url, customProperties);\r\n    }\r\n    public addTelemetryInitializer(telemetryInitializer: (item: ITelemetryItem) => boolean | void) {\r\n        return this.appInsights.addTelemetryInitializer(telemetryInitializer);\r\n    }\r\n\r\n    // Properties Plugin\r\n    public setAuthenticatedUserContext(authenticatedUserId: string, accountId?: string, storeInCookie = false): void {\r\n         this.properties.user.setAuthenticatedUserContext(authenticatedUserId, accountId, storeInCookie);\r\n    }\r\n    public clearAuthenticatedUserContext(): void {\r\n         this.properties.user.clearAuthenticatedUserContext();\r\n    }\r\n\r\n    // Dependencies Plugin\r\n    public trackDependencyData(dependency: IDependencyTelemetry, customProperties?: {[key: string]: any}, systemProperties?: {[key: string]: any}): void {\r\n        this.dependencies.trackDependencyData(dependency, customProperties, systemProperties);\r\n    }\r\n\r\n    public loadAppInsights(): IApplicationInsights {\r\n\r\n        this.core = new AppInsightsCore();\r\n        let extensions = [];\r\n        let appInsightsChannel: Sender = new Sender();\r\n\r\n        extensions.push(appInsightsChannel);\r\n        extensions.push(this.properties);\r\n        extensions.push(this.dependencies);\r\n        extensions.push(this.appInsights);\r\n\r\n        // initialize core\r\n        this.core.initialize(this.config, extensions);\r\n        return this;\r\n    }\r\n\r\n    public emptyQueue() {\r\n\r\n        // call functions that were queued before the main script was loaded\r\n        try {\r\n            if (Util.isArray(this.snippet.queue)) {\r\n                // note: do not check length in the for-loop conditional in case something goes wrong and the stub methods are not overridden.\r\n                var length = this.snippet.queue.length;\r\n                for (var i = 0; i < length; i++) {\r\n                    var call = this.snippet.queue[i];\r\n                    call();\r\n                }\r\n\r\n                this.snippet.queue = undefined;\r\n                delete this.snippet.queue;\r\n            }\r\n        } catch (exception) {\r\n            var properties: any = {};\r\n            if (exception && typeof exception.toString === \"function\") {\r\n                properties.exception = exception.toString();\r\n            }\r\n\r\n            // need from core\r\n            // Microsoft.ApplicationInsights._InternalLogging.throwInternal(\r\n            //     LoggingSeverity.WARNING,\r\n            //     _InternalMessageId.FailedToSendQueuedTelemetry,\r\n            //     \"Failed to send queued telemetry\",\r\n            //     properties);\r\n        }\r\n    }\r\n\r\n    public pollInteralLogs(appInsightsInstance: ApplicationInsights) {\r\n        // return setInterval(() => {\r\n        //     var queue: Array<_InternalLogMessage> = ApplicationInsights._InternalLogging.queue;\r\n        //     var length = queue.length;\r\n        //     for (var i = 0; i < length; i++) {\r\n        //         appInsightsInstance.trackTrace(queue[i].message);\r\n        //     }\r\n        //     queue.length = 0;\r\n        // }, this.config.diagnosticLogInterval);\r\n    }\r\n\r\n    public addHousekeepingBeforeUnload(appInsightsInstance: IApplicationInsights): void {\r\n        // Add callback to push events when the user navigates away\r\n\r\n        if (!appInsightsInstance.appInsights.config.disableFlushOnBeforeUnload && ('onbeforeunload' in window)) {\r\n            var performHousekeeping = function () {\r\n                // Adds the ability to flush all data before the page unloads.\r\n                // Note: This approach tries to push an async request with all the pending events onbeforeunload.\r\n                // Firefox does not respect this.Other browsers DO push out the call with < 100% hit rate.\r\n                // Telemetry here will help us analyze how effective this approach is.\r\n                // Another approach would be to make this call sync with a acceptable timeout to reduce the \r\n                // impact on user experience.\r\n\r\n                //appInsightsInstance.context._sender.triggerSend();\r\n\r\n                appInsightsInstance.appInsights.core.getTransmissionControls().forEach(queues => {\r\n                    queues.forEach(channel => channel.flush(true));\r\n                });\r\n                \r\n                // Back up the current session to local storage\r\n                // This lets us close expired sessions after the cookies themselves expire\r\n                // Todo: move this against interface behavior\r\n                if (this.core.extensions[\"AppInsightsPropertiesPlugin\"] &&\r\n                    this.core.extensions[\"AppInsightsPropertiesPlugin\"]._sessionManager) {\r\n                    this.core.extensions[\"AppInsightsPropertiesPlugin\"]._sessionManager.backup();\r\n                }\r\n            };\r\n\r\n            if (!Util.addEventHandler('beforeunload', performHousekeeping)) {\r\n                this.core.logger.throwInternal(\r\n                    LoggingSeverity.CRITICAL,\r\n                    _InternalMessageId.FailedToAddHandlerForOnBeforeUnload,\r\n                    'Could not add handler for beforeunload');\r\n            }\r\n        }\r\n    }\r\n\r\n    public static getDefaultConfig(configuration?: IConfiguration, identifier?: string): IConfiguration {\r\n        if (!configuration) {\r\n            configuration = <IConfiguration>{};\r\n        }\r\n\r\n        if (configuration) {\r\n            identifier = identifier ? identifier : \"ApplicationInsightsAnalytics\";\r\n        }\r\n\r\n        // Undefined checks\r\n        if (!configuration.extensionConfig) {\r\n            configuration.extensionConfig = {};\r\n        }\r\n        if (!configuration.extensionConfig[identifier]) {\r\n            configuration.extensionConfig[identifier] = {};\r\n        }\r\n        const extensionConfig: IConfig = configuration.extensionConfig[identifier]; // ref to main config\r\n        // set default values\r\n        configuration.endpointUrl = configuration.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\";\r\n        extensionConfig.sessionRenewalMs = 30 * 60 * 1000;\r\n        extensionConfig.sessionExpirationMs = 24 * 60 * 60 * 1000;\r\n\r\n        extensionConfig.enableDebug = Util.stringToBoolOrDefault(extensionConfig.enableDebug);\r\n        extensionConfig.disableExceptionTracking = Util.stringToBoolOrDefault(extensionConfig.disableExceptionTracking);\r\n        extensionConfig.consoleLoggingLevel = extensionConfig.consoleLoggingLevel || 1; // Show only CRITICAL level\r\n        extensionConfig.telemetryLoggingLevel = extensionConfig.telemetryLoggingLevel || 0; // Send nothing\r\n        extensionConfig.diagnosticLogInterval = extensionConfig.diagnosticLogInterval || 10000;\r\n        extensionConfig.autoTrackPageVisitTime = Util.stringToBoolOrDefault(extensionConfig.autoTrackPageVisitTime);\r\n\r\n        if (isNaN(extensionConfig.samplingPercentage) || extensionConfig.samplingPercentage <= 0 || extensionConfig.samplingPercentage >= 100) {\r\n            extensionConfig.samplingPercentage = 100;\r\n        }\r\n\r\n        extensionConfig.disableAjaxTracking = Util.stringToBoolOrDefault(extensionConfig.disableAjaxTracking)\r\n        extensionConfig.maxAjaxCallsPerView = !isNaN(extensionConfig.maxAjaxCallsPerView) ? extensionConfig.maxAjaxCallsPerView : 500;\r\n\r\n        extensionConfig.disableCorrelationHeaders = Util.stringToBoolOrDefault(extensionConfig.disableCorrelationHeaders);\r\n        extensionConfig.correlationHeaderExcludedDomains = extensionConfig.correlationHeaderExcludedDomains || [\r\n            \"*.blob.core.windows.net\",\r\n            \"*.blob.core.chinacloudapi.cn\",\r\n            \"*.blob.core.cloudapi.de\",\r\n            \"*.blob.core.usgovcloudapi.net\"];\r\n        extensionConfig.disableFlushOnBeforeUnload = Util.stringToBoolOrDefault(extensionConfig.disableFlushOnBeforeUnload);\r\n        extensionConfig.isCookieUseDisabled = Util.stringToBoolOrDefault(extensionConfig.isCookieUseDisabled);\r\n        extensionConfig.isStorageUseDisabled = Util.stringToBoolOrDefault(extensionConfig.isStorageUseDisabled);\r\n        extensionConfig.isBrowserLinkTrackingEnabled = Util.stringToBoolOrDefault(extensionConfig.isBrowserLinkTrackingEnabled);\r\n        extensionConfig.enableCorsCorrelation = Util.stringToBoolOrDefault(extensionConfig.enableCorsCorrelation);\r\n\r\n        return configuration;\r\n    }\r\n}","define([\"require\", \"exports\", \"./Sender\"], function (require, exports, Sender_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Sender = Sender_1.Sender;\r\n});\r\n//# sourceMappingURL=applicationinsights-channel-js.js.map","define([\"require\", \"exports\", \"./SendBuffer\", \"./EnvelopeCreator\", \"./TelemetryValidation/EventValidator\", \"./TelemetryValidation/TraceValidator\", \"./TelemetryValidation/ExceptionValidator\", \"./TelemetryValidation/MetricValidator\", \"./TelemetryValidation/PageViewPerformanceValidator\", \"./TelemetryValidation/PageViewValidator\", \"./TelemetryValidation/RemoteDepdencyValidator\", \"./Serializer\", \"applicationinsights-common\", \"applicationinsights-core-js\", \"applicationinsights-core-js\", \"./Offline\"], function (require, exports, SendBuffer_1, EnvelopeCreator_1, EventValidator_1, TraceValidator_1, ExceptionValidator_1, MetricValidator_1, PageViewPerformanceValidator_1, PageViewValidator_1, RemoteDepdencyValidator_1, Serializer_1, applicationinsights_common_1, applicationinsights_core_js_1, applicationinsights_core_js_2, Offline_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Sender = /** @class */ (function () {\r\n        function Sender() {\r\n            this.priority = 201;\r\n            /**\r\n             * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n             */\r\n            this._XMLHttpRequestSupported = false;\r\n        }\r\n        Sender.prototype.pause = function () {\r\n            throw new Error(\"Method not implemented.\");\r\n        };\r\n        Sender.prototype.resume = function () {\r\n            throw new Error(\"Method not implemented.\");\r\n        };\r\n        Sender.prototype.flush = function () {\r\n            try {\r\n                this.triggerSend();\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        Sender.prototype.teardown = function () {\r\n            throw new Error(\"Method not implemented.\");\r\n        };\r\n        Sender.prototype.initialize = function (config, core, extensions) {\r\n            this.identifier = \"AppInsightsChannelPlugin\";\r\n            this._logger = core.logger;\r\n            this._serializer = new Serializer_1.Serializer(core.logger);\r\n            this._consecutiveErrors = 0;\r\n            this._retryAt = null;\r\n            this._lastSend = 0;\r\n            this._config = Sender._getDefaultAppInsightsChannelConfig(config, this.identifier);\r\n            this._sender = null;\r\n            this._buffer = (applicationinsights_common_1.Util.canUseSessionStorage() && this._config.enableSessionStorageBuffer)\r\n                ? new SendBuffer_1.SessionStorageSendBuffer(this._logger, this._config) : new SendBuffer_1.ArraySendBuffer(this._config);\r\n            if (!this._config.isBeaconApiDisabled() && applicationinsights_common_1.Util.IsBeaconApiSupported()) {\r\n                this._sender = this._beaconSender;\r\n            }\r\n            else {\r\n                if (typeof XMLHttpRequest != \"undefined\") {\r\n                    var testXhr = new XMLHttpRequest();\r\n                    if (\"withCredentials\" in testXhr) {\r\n                        this._sender = this._xhrSender;\r\n                        this._XMLHttpRequestSupported = true;\r\n                    }\r\n                    else if (typeof XDomainRequest !== \"undefined\") {\r\n                        this._sender = this._xdrSender; //IE 8 and 9\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        Sender.prototype.processTelemetry = function (telemetryItem) {\r\n            try {\r\n                // if master off switch is set, don't send any data\r\n                if (this._config.disableTelemetry()) {\r\n                    // Do not send/save data\r\n                    return;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                    return;\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!this._sender) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                    return;\r\n                }\r\n                // first we need to validate that the envelope passed down is valid\r\n                var isValid = Sender._validate(telemetryItem);\r\n                if (!isValid) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"Invalid telemetry envelope\");\r\n                    return;\r\n                }\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                var aiEnvelope = this._constructEnvelope(telemetryItem);\r\n                if (!aiEnvelope) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                // check if the incoming payload is too large, truncate if necessary\r\n                var payload = this._serializer.serialize(aiEnvelope);\r\n                // flush if we would exceed the max-size limit by adding this item\r\n                var bufferPayload = this._buffer.getItems();\r\n                var batch = this._buffer.batchPayloads(bufferPayload);\r\n                if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                    this.triggerSend();\r\n                }\r\n                // enqueue the payload\r\n                this._buffer.enqueue(payload);\r\n                // ensure an invocation timeout is set\r\n                this._setupTimer();\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n            // hand off the telemetry item to the next plugin\r\n            if (!applicationinsights_core_js_2.CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(telemetryItem);\r\n            }\r\n        };\r\n        Sender.prototype.setNextPlugin = function (next) {\r\n            this._nextPlugin = next;\r\n        };\r\n        /**\r\n         * xhr state changes\r\n         */\r\n        Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n            if (xhr.readyState === 4) {\r\n                var response = null;\r\n                if (!this._appId) {\r\n                    response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    if (response && response.appId) {\r\n                        this._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                    if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                        this._resendPayload(payload);\r\n                        this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \". \" +\r\n                            \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else if (xhr.status === 0 || Offline_1.Offline.isOffline()) {\r\n                    if (!this._config.isRetryDisabled()) {\r\n                        var offlineBackOffMultiplier = 10; // arbritrary number\r\n                        this._resendPayload(payload, offlineBackOffMultiplier);\r\n                        this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline_1.Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                    }\r\n                }\r\n                else {\r\n                    if (xhr.status === 206) {\r\n                        if (!response) {\r\n                            response = this._parseResponse(xhr.responseText || xhr.response);\r\n                        }\r\n                        if (response && !this._config.isRetryDisabled()) {\r\n                            this._onPartialSuccess(payload, response);\r\n                        }\r\n                        else {\r\n                            this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._consecutiveErrors = 0;\r\n                        this._onSuccess(payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Immediately send buffered data\r\n         * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n         */\r\n        Sender.prototype.triggerSend = function (async) {\r\n            if (async === void 0) { async = true; }\r\n            try {\r\n                // Send data only if disableTelemetry is false\r\n                if (!this._config.disableTelemetry()) {\r\n                    if (this._buffer.count() > 0) {\r\n                        var payload = this._buffer.getItems();\r\n                        // invoke send\r\n                        this._sender(payload, async);\r\n                    }\r\n                    // update lastSend time to enable throttling\r\n                    this._lastSend = +new Date;\r\n                }\r\n                else {\r\n                    this._buffer.clear();\r\n                }\r\n                clearTimeout(this._timeoutHandle);\r\n                this._timeoutHandle = null;\r\n                this._retryAt = null;\r\n            }\r\n            catch (e) {\r\n                /* Ignore this error for IE under v10 */\r\n                if (!applicationinsights_common_1.Util.getIEVersion() || applicationinsights_common_1.Util.getIEVersion() > 9) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * error handler\r\n         */\r\n        Sender.prototype._onError = function (payload, message, event) {\r\n            this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n            this._buffer.clearSent(payload);\r\n        };\r\n        /**\r\n         * partial success handler\r\n         */\r\n        Sender.prototype._onPartialSuccess = function (payload, results) {\r\n            var failed = [];\r\n            var retry = [];\r\n            // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n            var errors = results.errors.reverse();\r\n            for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                var error = errors_1[_i];\r\n                var extracted = payload.splice(error.index, 1)[0];\r\n                if (this._isRetriable(error.statusCode)) {\r\n                    retry.push(extracted);\r\n                }\r\n                else {\r\n                    // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                    failed.push(extracted);\r\n                }\r\n            }\r\n            if (payload.length > 0) {\r\n                this._onSuccess(payload, results.itemsAccepted);\r\n            }\r\n            if (failed.length > 0) {\r\n                this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n            }\r\n            if (retry.length > 0) {\r\n                this._resendPayload(retry);\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                    \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                    \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n            }\r\n        };\r\n        /**\r\n         * success handler\r\n         */\r\n        Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n            this._buffer.clearSent(payload);\r\n        };\r\n        /**\r\n         * xdr state changes\r\n         */\r\n        Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n            if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n                this._consecutiveErrors = 0;\r\n                this._onSuccess(payload, 0);\r\n            }\r\n            else {\r\n                var results = this._parseResponse(xdr.responseText);\r\n                if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                    && !this._config.isRetryDisabled()) {\r\n                    this._onPartialSuccess(payload, results);\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n                }\r\n            }\r\n        };\r\n        Sender.prototype._constructEnvelope = function (envelope) {\r\n            switch (envelope.baseType) {\r\n                case applicationinsights_common_1.Event.dataType:\r\n                    return EnvelopeCreator_1.EventEnvelopeCreator.EventEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.Trace.dataType:\r\n                    return EnvelopeCreator_1.TraceEnvelopeCreator.TraceEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.PageView.dataType:\r\n                    return EnvelopeCreator_1.PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.PageViewPerformance.dataType:\r\n                    return EnvelopeCreator_1.PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.Exception.dataType:\r\n                    return EnvelopeCreator_1.ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.Metric.dataType:\r\n                    return EnvelopeCreator_1.MetricEnvelopeCreator.MetricEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.RemoteDependencyData.dataType:\r\n                    return EnvelopeCreator_1.DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(this._logger, envelope);\r\n                default:\r\n                    // default create custom event type\r\n                    return EnvelopeCreator_1.EventEnvelopeCreator.EventEnvelopeCreator.Create(this._logger, envelope);\r\n            }\r\n        };\r\n        Sender._getDefaultAppInsightsChannelConfig = function (config, identifier) {\r\n            var resultConfig = {};\r\n            var pluginConfig = config.extensionConfig && config.extensionConfig[identifier] ? config.extensionConfig[identifier] : {};\r\n            // set default values\r\n            resultConfig.endpointUrl = function () { return config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"; };\r\n            resultConfig.emitLineDelimitedJson = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.emitLineDelimitedJson); };\r\n            resultConfig.maxBatchInterval = function () { return !isNaN(pluginConfig.maxBatchInterval) ? pluginConfig.maxBatchInterval : 15000; };\r\n            resultConfig.maxBatchSizeInBytes = function () { return pluginConfig.maxBatchSizeInBytes > 0 ? pluginConfig.maxBatchSizeInBytes : 102400; }; // 100kb\r\n            resultConfig.disableTelemetry = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.disableTelemetry); };\r\n            resultConfig.enableSessionStorageBuffer = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.enableSessionStorageBuffer, true); };\r\n            resultConfig.isRetryDisabled = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.isRetryDisabled); };\r\n            resultConfig.isBeaconApiDisabled = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.isBeaconApiDisabled, true); };\r\n            return resultConfig;\r\n        };\r\n        Sender._validate = function (envelope) {\r\n            // call the appropriate Validate depending on the baseType\r\n            switch (envelope.baseType) {\r\n                case applicationinsights_common_1.Event.dataType:\r\n                    return EventValidator_1.EventValidator.EventValidator.Validate(envelope);\r\n                case applicationinsights_common_1.Trace.dataType:\r\n                    return TraceValidator_1.TraceValidator.TraceValidator.Validate(envelope);\r\n                case applicationinsights_common_1.Exception.dataType:\r\n                    return ExceptionValidator_1.ExceptionValidator.ExceptionValidator.Validate(envelope);\r\n                case applicationinsights_common_1.Metric.dataType:\r\n                    return MetricValidator_1.MetricValidator.MetricValidator.Validate(envelope);\r\n                case applicationinsights_common_1.PageView.dataType:\r\n                    return PageViewValidator_1.PageViewValidator.PageViewValidator.Validate(envelope);\r\n                case applicationinsights_common_1.PageViewPerformance.dataType:\r\n                    return PageViewPerformanceValidator_1.PageViewPerformanceValidator.PageViewPerformanceValidator.Validate(envelope);\r\n                case applicationinsights_common_1.RemoteDependencyData.dataType:\r\n                    return RemoteDepdencyValidator_1.RemoteDepdencyValidator.RemoteDepdencyValidator.Validate(envelope);\r\n                default:\r\n                    return EventValidator_1.EventValidator.EventValidator.Validate(envelope);\r\n            }\r\n        };\r\n        /**\r\n         * Send Beacon API request\r\n         * @param payload {string} - The data payload to be sent.\r\n         * @param isAsync {boolean} - not used\r\n         * Note: Beacon API does not support custom headers and we are not able to get\r\n         * appId from the backend for the correct correlation.\r\n         */\r\n        Sender.prototype._beaconSender = function (payload, isAsync) {\r\n            var url = this._config.endpointUrl();\r\n            var batch = this._buffer.batchPayloads(payload);\r\n            // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n            // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n            var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n            // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n            var queued = navigator.sendBeacon(url, plainTextBatch);\r\n            if (queued) {\r\n                this._buffer.markAsSent(payload);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API.\");\r\n            }\r\n        };\r\n        /**\r\n         * Send XMLHttpRequest\r\n         * @param payload {string} - The data payload to be sent.\r\n         * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n         */\r\n        Sender.prototype._xhrSender = function (payload, isAsync) {\r\n            var _this = this;\r\n            var xhr = new XMLHttpRequest();\r\n            xhr[applicationinsights_common_1.DisabledPropertyName] = true;\r\n            xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            // append Sdk-Context request header only in case of breeze endpoint \r\n            if (applicationinsights_common_1.Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n                xhr.setRequestHeader(applicationinsights_common_1.RequestHeaders.sdkContextHeader, applicationinsights_common_1.RequestHeaders.sdkContextHeaderAppIdRequest);\r\n            }\r\n            xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n            xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n            // compose an array of payloads\r\n            var batch = this._buffer.batchPayloads(payload);\r\n            xhr.send(batch);\r\n            this._buffer.markAsSent(payload);\r\n        };\r\n        /**\r\n         * Parses the response from the backend.\r\n         * @param response - XMLHttpRequest or XDomainRequest response\r\n         */\r\n        Sender.prototype._parseResponse = function (response) {\r\n            try {\r\n                if (response && response !== \"\") {\r\n                    var result = JSON.parse(response);\r\n                    if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                        result.itemsReceived - result.itemsAccepted == result.errors.length) {\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + applicationinsights_common_1.Util.getExceptionName(e), {\r\n                    response: response\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n         * @param payload\r\n         */\r\n        Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n            if (linearFactor === void 0) { linearFactor = 1; }\r\n            if (!payload || payload.length === 0) {\r\n                return;\r\n            }\r\n            this._buffer.clearSent(payload);\r\n            this._consecutiveErrors++;\r\n            for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                var item = payload_1[_i];\r\n                this._buffer.enqueue(item);\r\n            }\r\n            // setup timer\r\n            this._setRetryTime(linearFactor);\r\n            this._setupTimer();\r\n        };\r\n        /** Calculates the time to wait before retrying in case of an error based on\r\n         * http://en.wikipedia.org/wiki/Exponential_backoff\r\n         */\r\n        Sender.prototype._setRetryTime = function (linearFactor) {\r\n            var SlotDelayInSeconds = 10;\r\n            var delayInSeconds;\r\n            if (this._consecutiveErrors <= 1) {\r\n                delayInSeconds = SlotDelayInSeconds;\r\n            }\r\n            else {\r\n                var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n                // tslint:disable-next-line:insecure-random\r\n                var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                backOffDelay = linearFactor * backOffDelay;\r\n                delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n            }\r\n            // TODO: Log the backoff time like the C# version does.\r\n            var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n            // TODO: Log the retry at time like the C# version does.\r\n            this._retryAt = retryAfterTimeSpan;\r\n        };\r\n        /**\r\n         * Sets up the timer which triggers actually sending the data.\r\n         */\r\n        Sender.prototype._setupTimer = function () {\r\n            var _this = this;\r\n            if (!this._timeoutHandle) {\r\n                var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n                var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n                this._timeoutHandle = setTimeout(function () {\r\n                    _this.triggerSend();\r\n                }, timerValue);\r\n            }\r\n        };\r\n        /**\r\n         * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n         * @param statusCode\r\n         */\r\n        Sender.prototype._isRetriable = function (statusCode) {\r\n            return statusCode == 408 // Timeout\r\n                || statusCode == 429 // Too many requests.\r\n                || statusCode == 500 // Internal server error.\r\n                || statusCode == 503; // Service unavailable.\r\n        };\r\n        Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n            if (xhr) {\r\n                return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n            }\r\n            return message;\r\n        };\r\n        /**\r\n         * Send XDomainRequest\r\n         * @param payload {string} - The data payload to be sent.\r\n         * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n         *\r\n         * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n         * to maintain consistency with the xhrSender's contract\r\n         * Note: XDomainRequest does not support custom headers and we are not able to get\r\n         * appId from the backend for the correct correlation.\r\n         */\r\n        Sender.prototype._xdrSender = function (payload, isAsync) {\r\n            var _this = this;\r\n            var xdr = new XDomainRequest();\r\n            xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n            xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n            // XDomainRequest requires the same protocol as the hosting page. \r\n            // If the protocol doesn't match, we can't send the telemetry :(. \r\n            var hostingProtocol = window.location.protocol;\r\n            if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \". \" +\r\n                    \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n                this._buffer.clear();\r\n                return;\r\n            }\r\n            var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n            xdr.open('POST', endpointUrl);\r\n            // compose an array of payloads\r\n            var batch = this._buffer.batchPayloads(payload);\r\n            xdr.send(batch);\r\n            this._buffer.markAsSent(payload);\r\n        };\r\n        Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n            if (xdr) {\r\n                return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n            }\r\n            return message;\r\n        };\r\n        return Sender;\r\n    }());\r\n    exports.Sender = Sender;\r\n});\r\n//# sourceMappingURL=Sender.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageViewPerformanceValidator = /** @class */ (function () {\r\n        function PageViewPerformanceValidator() {\r\n        }\r\n        PageViewPerformanceValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n            \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"domProcessing\"] ||\r\n                !item.domainProperties[\"duration\"] ||\r\n                !item.domainProperties[\"name\"] ||\r\n                !item.domainProperties[\"networkConnect\"] ||\r\n                !item.domainProperties[\"perfTotal\"] ||\r\n                !item.domainProperties[\"receivedResponse\"] ||\r\n                !item.domainProperties[\"sentRequest\"] ||\r\n                !item.domainProperties[\"url\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        PageViewPerformanceValidator.PageViewPerformanceValidator = new PageViewPerformanceValidator();\r\n        return PageViewPerformanceValidator;\r\n    }());\r\n    exports.PageViewPerformanceValidator = PageViewPerformanceValidator;\r\n});\r\n//# sourceMappingURL=PageViewPerformanceValidator.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /*\r\n     * An array based send buffer.\r\n     */\r\n    var ArraySendBuffer = /** @class */ (function () {\r\n        function ArraySendBuffer(config) {\r\n            this._config = config;\r\n            this._buffer = [];\r\n        }\r\n        ArraySendBuffer.prototype.enqueue = function (payload) {\r\n            this._buffer.push(payload);\r\n        };\r\n        ArraySendBuffer.prototype.count = function () {\r\n            return this._buffer.length;\r\n        };\r\n        ArraySendBuffer.prototype.clear = function () {\r\n            this._buffer.length = 0;\r\n        };\r\n        ArraySendBuffer.prototype.getItems = function () {\r\n            return this._buffer.slice(0);\r\n        };\r\n        ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n            if (payload && payload.length > 0) {\r\n                var batch = this._config.emitLineDelimitedJson() ?\r\n                    payload.join(\"\\n\") :\r\n                    \"[\" + payload.join(\",\") + \"]\";\r\n                return batch;\r\n            }\r\n            return null;\r\n        };\r\n        ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n            this.clear();\r\n        };\r\n        ArraySendBuffer.prototype.clearSent = function (payload) {\r\n            // not supported\r\n        };\r\n        return ArraySendBuffer;\r\n    }());\r\n    exports.ArraySendBuffer = ArraySendBuffer;\r\n    /*\r\n     * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n     */\r\n    var SessionStorageSendBuffer = /** @class */ (function () {\r\n        function SessionStorageSendBuffer(logger, config) {\r\n            this._bufferFullMessageSent = false;\r\n            this._logger = logger;\r\n            this._config = config;\r\n            var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n            var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            this._buffer = bufferItems.concat(notDeliveredItems);\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            // update DataLossAnalyzer with the number of recovered items\r\n            // Uncomment if you want to use DataLossanalyzer\r\n            // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        }\r\n        SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n            if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // sent internal log only once per page view\r\n                if (!this._bufferFullMessageSent) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                    this._bufferFullMessageSent = true;\r\n                }\r\n                return;\r\n            }\r\n            this._buffer.push(payload);\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        };\r\n        SessionStorageSendBuffer.prototype.count = function () {\r\n            return this._buffer.length;\r\n        };\r\n        SessionStorageSendBuffer.prototype.clear = function () {\r\n            this._buffer.length = 0;\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n            this._bufferFullMessageSent = false;\r\n        };\r\n        SessionStorageSendBuffer.prototype.getItems = function () {\r\n            return this._buffer.slice(0);\r\n        };\r\n        SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n            if (payload && payload.length > 0) {\r\n                var batch = this._config.emitLineDelimitedJson() ?\r\n                    payload.join(\"\\n\") :\r\n                    \"[\" + payload.join(\",\") + \"]\";\r\n                return batch;\r\n            }\r\n            return null;\r\n        };\r\n        SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n            this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n            var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            if (sentElements instanceof Array && payload instanceof Array) {\r\n                sentElements = sentElements.concat(payload);\r\n                if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                    // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                    // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                    sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n                }\r\n                this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n            }\r\n        };\r\n        SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n            var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        };\r\n        SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n            var remaining = [];\r\n            for (var i in buffer) {\r\n                var contains = false;\r\n                for (var j in payloads) {\r\n                    if (payloads[j] === buffer[i]) {\r\n                        contains = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!contains) {\r\n                    remaining.push(buffer[i]);\r\n                }\r\n            }\r\n            ;\r\n            return remaining;\r\n        };\r\n        SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n            try {\r\n                var bufferJson = applicationinsights_common_1.Util.getSessionStorage(this._logger, key);\r\n                if (bufferJson) {\r\n                    var buffer = JSON.parse(bufferJson);\r\n                    if (buffer) {\r\n                        return buffer;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + key + \", \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n            return [];\r\n        };\r\n        SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n            try {\r\n                var bufferJson = JSON.stringify(buffer);\r\n                applicationinsights_common_1.Util.setSessionStorage(this._logger, key, bufferJson);\r\n            }\r\n            catch (e) {\r\n                // if there was an error, clear the buffer\r\n                // telemetry is stored in the _buffer array so we won't loose any items\r\n                applicationinsights_common_1.Util.setSessionStorage(this._logger, key, JSON.stringify([]));\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + key + \", \" + applicationinsights_common_1.Util.getExceptionName(e) + \". Buffer cleared\", { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n        SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n        // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped. \r\n        SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n        return SessionStorageSendBuffer;\r\n    }());\r\n    exports.SessionStorageSendBuffer = SessionStorageSendBuffer;\r\n});\r\n//# sourceMappingURL=SendBuffer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ContextTagKeys = [\r\n        \"ai.application.ver\",\r\n        \"ai.application.build\",\r\n        \"ai.application.typeId\",\r\n        \"ai.application.applicationId\",\r\n        \"ai.application.layer\",\r\n        \"ai.device.id\",\r\n        \"ai.device.ip\",\r\n        \"ai.device.language\",\r\n        \"ai.device.locale\",\r\n        \"ai.device.model\",\r\n        \"ai.device.friendlyName\",\r\n        \"ai.device.network\",\r\n        \"ai.device.networkName\",\r\n        \"ai.device.oemName\",\r\n        \"ai.device.os\",\r\n        \"ai.device.osVersion\",\r\n        \"ai.device.roleInstance\",\r\n        \"ai.device.roleName\",\r\n        \"ai.device.screenResolution\",\r\n        \"ai.device.type\",\r\n        \"ai.device.machineName\",\r\n        \"ai.device.vmName\",\r\n        \"ai.device.browser\",\r\n        \"ai.device.browserVersion\",\r\n        \"ai.location.ip\",\r\n        \"ai.location.country\",\r\n        \"ai.location.province\",\r\n        \"ai.location.city\",\r\n        \"ai.operation.id\",\r\n        \"ai.operation.name\",\r\n        \"ai.operation.parentId\",\r\n        \"ai.operation.rootId\",\r\n        \"ai.operation.syntheticSource\",\r\n        \"ai.operation.correlationVector\",\r\n        \"ai.session.id\",\r\n        \"ai.session.isFirst\",\r\n        \"ai.session.isNew\",\r\n        \"ai.user.accountAcquisitionDate\",\r\n        \"ai.user.accountId\",\r\n        \"ai.user.userAgent\",\r\n        \"ai.user.id\",\r\n        \"ai.user.storeRegion\",\r\n        \"ai.user.authUserId\",\r\n        \"ai.user.anonUserAcquisitionDate\",\r\n        \"ai.user.authUserAcquisitionDate\",\r\n        \"ai.cloud.name\",\r\n        \"ai.cloud.role\",\r\n        \"ai.cloud.roleVer\",\r\n        \"ai.cloud.roleInstance\",\r\n        \"ai.cloud.environment\",\r\n        \"ai.cloud.location\",\r\n        \"ai.cloud.deploymentUnit\",\r\n        \"ai.internal.sdkVersion\",\r\n        \"ai.internal.agentVersion\",\r\n        \"ai.internal.nodeName\",\r\n    ];\r\n    // these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\n    var baseType = \"baseType\";\r\n    var baseData = \"baseData\";\r\n    var EnvelopeCreator = /** @class */ (function () {\r\n        function EnvelopeCreator() {\r\n        }\r\n        EnvelopeCreator.extractProperties = function (data) {\r\n            var customProperties = null;\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value !== \"number\") {\r\n                        if (!customProperties) {\r\n                            customProperties = {};\r\n                        }\r\n                        customProperties[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            return customProperties;\r\n        };\r\n        EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(data)) {\r\n                for (var key in data) {\r\n                    if (data.hasOwnProperty(key)) {\r\n                        var value = data[key];\r\n                        if (typeof value === \"number\") {\r\n                            measurements[key] = value;\r\n                        }\r\n                        else {\r\n                            properties[key] = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n        EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n            var envelope = new applicationinsights_common_1.Envelope(logger, data, envelopeType);\r\n            envelope.iKey = telemetryItem.instrumentationKey;\r\n            var iKeyNoDashes = telemetryItem.instrumentationKey.replace(/-/g, \"\");\r\n            envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n            // loop through the envelope ctx (Part A) and pick out the ones that should go in outgoing envelope tags\r\n            for (var key in telemetryItem.ctx) {\r\n                if (telemetryItem.ctx.hasOwnProperty(key)) {\r\n                    if (exports.ContextTagKeys.indexOf(key) >= 0) {\r\n                        envelope.tags[key] = telemetryItem.ctx[key];\r\n                    }\r\n                }\r\n            }\r\n            // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n            telemetryItem.tags.forEach(function (tag) {\r\n                for (var key in tag) {\r\n                    if (tag.hasOwnProperty(key)) {\r\n                        if (exports.ContextTagKeys.indexOf(key) >= 0) {\r\n                            envelope.tags[key] = tag[key];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            return envelope;\r\n        };\r\n        return EnvelopeCreator;\r\n    }());\r\n    exports.EnvelopeCreator = EnvelopeCreator;\r\n    var DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(DependencyEnvelopeCreator, _super);\r\n        function DependencyEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customMeasurements = {};\r\n            var customProperties = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var bd = telemetryItem.baseData;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(bd)) {\r\n                logger.warnToConsole(\"Invalid input for dependency data\");\r\n                return null;\r\n            }\r\n            var id = bd.id;\r\n            var absoluteUrl = bd.absoluteUrl;\r\n            var command = bd.commandName;\r\n            var duration = bd.duration;\r\n            var success = bd.success;\r\n            var resultCode = bd.resultCode;\r\n            var method = bd.method;\r\n            var baseData = new applicationinsights_common_1.RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.RemoteDependencyData.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.RemoteDependencyData.envelopeType, telemetryItem, data);\r\n        };\r\n        DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n        return DependencyEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.DependencyEnvelopeCreator = DependencyEnvelopeCreator;\r\n    var EventEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(EventEnvelopeCreator, _super);\r\n        function EventEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            if (telemetryItem.baseType !== applicationinsights_common_1.Event.dataType) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var eventName = telemetryItem.baseData.name;\r\n            var baseData = new applicationinsights_common_1.Event(logger, eventName, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Event.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.Event.envelopeType, telemetryItem, data);\r\n        };\r\n        EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n        return EventEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.EventEnvelopeCreator = EventEnvelopeCreator;\r\n    var ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(ExceptionEnvelopeCreator, _super);\r\n        function ExceptionEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var exception = telemetryItem.baseData.error;\r\n            var severityLevel = telemetryItem.baseData.severityLevel;\r\n            var baseData = new applicationinsights_common_1.Exception(logger, exception, customProperties, customMeasurements, severityLevel);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Exception.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.Exception.envelopeType, telemetryItem, data);\r\n        };\r\n        ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n        return ExceptionEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.ExceptionEnvelopeCreator = ExceptionEnvelopeCreator;\r\n    var MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(MetricEnvelopeCreator, _super);\r\n        function MetricEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n            var name = telemetryItem.baseData.name;\r\n            var average = telemetryItem.baseData.average;\r\n            var sampleCount = telemetryItem.baseData.sampleCount;\r\n            var min = telemetryItem.baseData.min;\r\n            var max = telemetryItem.baseData.max;\r\n            var baseData = new applicationinsights_common_1.Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Metric.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.Metric.envelopeType, telemetryItem, data);\r\n        };\r\n        MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n        return MetricEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.MetricEnvelopeCreator = MetricEnvelopeCreator;\r\n    var PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(PageViewEnvelopeCreator, _super);\r\n        function PageViewEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            // Since duration is not part of the domain properties in Common Schema, extract it from part C \r\n            var duration = undefined;\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.data) &&\r\n                !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.data.duration)) {\r\n                duration = telemetryItem.data.duration;\r\n                delete telemetryItem.data.duration;\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var name = telemetryItem.baseData.name;\r\n            var url = telemetryItem.baseData.uri;\r\n            // Todo: move IPageViewTelemetry to common as we are missing type checks on baseData here\r\n            // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.refUri)) {\r\n                customProperties[\"refUri\"] = telemetryItem.baseData.refUri;\r\n            }\r\n            // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.pageType)) {\r\n                customProperties[\"pageType\"] = telemetryItem.baseData.pageType;\r\n            }\r\n            // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.isLoggedIn)) {\r\n                customProperties[\"isLoggedIn\"] = telemetryItem.baseData.isLoggedIn;\r\n            }\r\n            // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.pageTags)) {\r\n                var pageTags = telemetryItem.baseData.pageTags;\r\n                for (var key in pageTags) {\r\n                    if (pageTags.hasOwnProperty(key)) {\r\n                        customProperties[key] = pageTags[key];\r\n                    }\r\n                }\r\n            }\r\n            var baseData = new applicationinsights_common_1.PageView(logger, name, url, duration, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.PageView.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.PageView.envelopeType, telemetryItem, data);\r\n        };\r\n        PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n        return PageViewEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.PageViewEnvelopeCreator = PageViewEnvelopeCreator;\r\n    var PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(PageViewPerformanceEnvelopeCreator, _super);\r\n        function PageViewPerformanceEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var name = telemetryItem.baseData.name;\r\n            var url = telemetryItem.baseData.uri;\r\n            var duration = telemetryItem.baseData.duration;\r\n            var baseData = new applicationinsights_common_1.PageViewPerformance(logger, name, url, duration, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.PageViewPerformance.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.PageViewPerformance.envelopeType, telemetryItem, data);\r\n        };\r\n        PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n        return PageViewPerformanceEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.PageViewPerformanceEnvelopeCreator = PageViewPerformanceEnvelopeCreator;\r\n    var TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(TraceEnvelopeCreator, _super);\r\n        function TraceEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var message = telemetryItem.baseData.message;\r\n            var severityLevel = telemetryItem.baseData.severityLevel;\r\n            var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n            var baseData = new applicationinsights_common_1.Trace(logger, message, customProperties, severityLevel);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Trace.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.Trace.envelopeType, telemetryItem, data);\r\n        };\r\n        TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n        return TraceEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.TraceEnvelopeCreator = TraceEnvelopeCreator;\r\n});\r\n//# sourceMappingURL=EnvelopeCreator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var EventValidator = /** @class */ (function () {\r\n        function EventValidator() {\r\n        }\r\n        EventValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n            https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties || !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n            \r\n            if (!item.domainProperties || !item.domainProperties[\"name\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        EventValidator.EventValidator = new EventValidator();\r\n        return EventValidator;\r\n    }());\r\n    exports.EventValidator = EventValidator;\r\n});\r\n//# sourceMappingURL=EventValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var TraceValidator = /** @class */ (function () {\r\n        function TraceValidator() {\r\n        }\r\n        TraceValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n            \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"message\"] ||\r\n                !item.domainProperties[\"severityLevel\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        TraceValidator.TraceValidator = new TraceValidator();\r\n        return TraceValidator;\r\n    }());\r\n    exports.TraceValidator = TraceValidator;\r\n});\r\n//# sourceMappingURL=TraceValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var ExceptionValidator = /** @class */ (function () {\r\n        function ExceptionValidator() {\r\n        }\r\n        ExceptionValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"exceptions\"] ||\r\n                !ExceptionValidator._validateExceptions(item.domainProperties[\"exceptions\"])) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        // TODO implement validation of exceptions\r\n        ExceptionValidator._validateExceptions = function (exceptions) {\r\n            // typeName\r\n            // message\r\n            // parsedStack\r\n            // stack\r\n            // hasFullStack\r\n            return true;\r\n        };\r\n        ExceptionValidator.ExceptionValidator = new ExceptionValidator();\r\n        return ExceptionValidator;\r\n    }());\r\n    exports.ExceptionValidator = ExceptionValidator;\r\n});\r\n//# sourceMappingURL=ExceptionValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var MetricValidator = /** @class */ (function () {\r\n        function MetricValidator() {\r\n        }\r\n        MetricValidator.prototype.Validate = function (event) {\r\n            return true;\r\n        };\r\n        MetricValidator.MetricValidator = new MetricValidator();\r\n        return MetricValidator;\r\n    }());\r\n    exports.MetricValidator = MetricValidator;\r\n});\r\n//# sourceMappingURL=MetricValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageViewValidator = /** @class */ (function () {\r\n        function PageViewValidator() {\r\n        }\r\n        PageViewValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"id\"] ||\r\n                !item.domainProperties[\"name\"] ||\r\n                !item.domainProperties[\"duration\"] ||\r\n                !item.domainProperties[\"url\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        PageViewValidator.PageViewValidator = new PageViewValidator();\r\n        return PageViewValidator;\r\n    }());\r\n    exports.PageViewValidator = PageViewValidator;\r\n});\r\n//# sourceMappingURL=PageViewValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var RemoteDepdencyValidator = /** @class */ (function () {\r\n        function RemoteDepdencyValidator() {\r\n        }\r\n        RemoteDepdencyValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"id\"] ||\r\n                !item.domainProperties[\"name\"] ||\r\n                !item.domainProperties[\"resultCode\"] ||\r\n                !item.domainProperties[\"duration\"] ||\r\n                !item.domainProperties[\"success\"] ||\r\n                !item.domainProperties[\"data\"] ||\r\n                !item.domainProperties[\"target\"] ||\r\n                !item.domainProperties[\"type\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        RemoteDepdencyValidator.RemoteDepdencyValidator = new RemoteDepdencyValidator();\r\n        return RemoteDepdencyValidator;\r\n    }());\r\n    exports.RemoteDepdencyValidator = RemoteDepdencyValidator;\r\n});\r\n//# sourceMappingURL=RemoteDepdencyValidator.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Serializer = /** @class */ (function () {\r\n        function Serializer(logger) {\r\n            this._logger = logger;\r\n        }\r\n        /**\r\n         * Serializes the current object to a JSON string.\r\n         */\r\n        Serializer.prototype.serialize = function (input) {\r\n            var output = this._serializeObject(input, \"root\");\r\n            return JSON.stringify(output);\r\n        };\r\n        Serializer.prototype._serializeObject = function (source, name) {\r\n            var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n            var output = {};\r\n            if (!source) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                return output;\r\n            }\r\n            if (source[circularReferenceCheck]) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                return output;\r\n            }\r\n            if (!source.aiDataContract) {\r\n                // special case for measurements/properties/tags\r\n                if (name === \"measurements\") {\r\n                    output = this._serializeStringMap(source, \"number\", name);\r\n                }\r\n                else if (name === \"properties\") {\r\n                    output = this._serializeStringMap(source, \"string\", name);\r\n                }\r\n                else if (name === \"tags\") {\r\n                    output = this._serializeStringMap(source, \"string\", name);\r\n                }\r\n                else if (applicationinsights_common_1.Util.isArray(source)) {\r\n                    output = this._serializeArray(source, name);\r\n                }\r\n                else {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                    try {\r\n                        // verify that the object can be stringified\r\n                        JSON.stringify(source);\r\n                        output = source;\r\n                    }\r\n                    catch (e) {\r\n                        // if serialization fails return an empty string\r\n                        this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            source[circularReferenceCheck] = true;\r\n            for (var field in source.aiDataContract) {\r\n                var contract = source.aiDataContract[field];\r\n                var isRequired = (typeof contract === \"function\") ? (contract() & applicationinsights_common_1.FieldType.Required) : (contract & applicationinsights_common_1.FieldType.Required);\r\n                var isHidden = (typeof contract === \"function\") ? (contract() & applicationinsights_common_1.FieldType.Hidden) : (contract & applicationinsights_common_1.FieldType.Hidden);\r\n                var isArray = contract & applicationinsights_common_1.FieldType.Array;\r\n                var isPresent = source[field] !== undefined;\r\n                var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n                if (isRequired && !isPresent && !isArray) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                    // If not in debug mode, continue and hope the error is permissible\r\n                    continue;\r\n                }\r\n                if (isHidden) {\r\n                    // Don't serialize hidden fields\r\n                    continue;\r\n                }\r\n                var value;\r\n                if (isObject) {\r\n                    if (isArray) {\r\n                        // special case; resurse on each object in the source array\r\n                        value = this._serializeArray(source[field], field);\r\n                    }\r\n                    else {\r\n                        // recurse on the source object in this field\r\n                        value = this._serializeObject(source[field], field);\r\n                    }\r\n                }\r\n                else {\r\n                    // assign the source field to the output even if undefined or required\r\n                    value = source[field];\r\n                }\r\n                // only emit this field if the value is defined\r\n                if (value !== undefined) {\r\n                    output[field] = value;\r\n                }\r\n            }\r\n            delete source[circularReferenceCheck];\r\n            return output;\r\n        };\r\n        Serializer.prototype._serializeArray = function (sources, name) {\r\n            var output = undefined;\r\n            if (!!sources) {\r\n                if (!applicationinsights_common_1.Util.isArray(sources)) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                }\r\n                else {\r\n                    output = [];\r\n                    for (var i = 0; i < sources.length; i++) {\r\n                        var source = sources[i];\r\n                        var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                        output.push(item);\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n        Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n            var output = undefined;\r\n            if (map) {\r\n                output = {};\r\n                for (var field in map) {\r\n                    var value = map[field];\r\n                    if (expectedType === \"string\") {\r\n                        if (value === undefined) {\r\n                            output[field] = \"undefined\";\r\n                        }\r\n                        else if (value === null) {\r\n                            output[field] = \"null\";\r\n                        }\r\n                        else if (!value.toString) {\r\n                            output[field] = \"invalid field: toString() is not defined.\";\r\n                        }\r\n                        else {\r\n                            output[field] = value.toString();\r\n                        }\r\n                    }\r\n                    else if (expectedType === \"number\") {\r\n                        if (value === undefined) {\r\n                            output[field] = \"undefined\";\r\n                        }\r\n                        else if (value === null) {\r\n                            output[field] = \"null\";\r\n                        }\r\n                        else {\r\n                            var num = parseFloat(value);\r\n                            if (isNaN(num)) {\r\n                                output[field] = \"NaN\";\r\n                            }\r\n                            else {\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                        this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, output[field], null, true);\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n        return Serializer;\r\n    }());\r\n    exports.Serializer = Serializer;\r\n});\r\n//# sourceMappingURL=Serializer.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * @description Monitors browser for offline events\r\n     * @export default - Offline: Static instance of OfflineListener\r\n     * @class OfflineListener\r\n     */\r\n    var OfflineListener = /** @class */ (function () {\r\n        function OfflineListener() {\r\n            this._onlineStatus = true;\r\n            if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        OfflineListener.prototype._setOnline = function () {\r\n            this._onlineStatus = true;\r\n        };\r\n        OfflineListener.prototype._setOffline = function () {\r\n            this._onlineStatus = false;\r\n        };\r\n        OfflineListener.prototype.isOnline = function () {\r\n            if (this.isListening) {\r\n                return this._onlineStatus;\r\n            }\r\n            else if (navigator) {\r\n                return navigator.onLine;\r\n            }\r\n            else {\r\n                // Cannot determine online status - report as online\r\n                return true;\r\n            }\r\n        };\r\n        OfflineListener.prototype.isOffline = function () {\r\n            return !this.isOnline();\r\n        };\r\n        OfflineListener.Offline = new OfflineListener;\r\n        return OfflineListener;\r\n    }());\r\n    exports.OfflineListener = OfflineListener;\r\n    exports.Offline = OfflineListener.Offline;\r\n});\r\n//# sourceMappingURL=Offline.js.map","define([\"require\", \"exports\", \"./PropertiesPlugin\"], function (require, exports, PropertiesPlugin_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.PropertiesPlugin = PropertiesPlugin_1.default;\r\n});\r\n//# sourceMappingURL=applicationinsights-properties-js.js.map","/**\r\n * PropertiesPlugin.ts\r\n * @copyright Microsoft 2018\r\n */\r\ndefine([\"require\", \"exports\", \"applicationinsights-core-js\", \"applicationinsights-common\", \"./Context/Session\", \"./Context/Application\", \"./Context/Device\", \"./Context/Internal\", \"./Context/Location\", \"./Context/Operation\", \"./Context/User\", \"./Context/Sample\"], function (require, exports, applicationinsights_core_js_1, applicationinsights_common_1, Session_1, Application_1, Device_1, Internal_1, Location_1, Operation_1, User_1, Sample_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PropertiesPlugin = /** @class */ (function () {\r\n        function PropertiesPlugin() {\r\n            this.priority = 170;\r\n            this.identifier = \"AppInsightsPropertiesPlugin\";\r\n        }\r\n        PropertiesPlugin.prototype.initialize = function (config, core, extensions) {\r\n            var extensionConfig = config.extensionConfig &&\r\n                config.extensionConfig[this.identifier] ?\r\n                config.extensionConfig[this.identifier] : {};\r\n            this._extensionConfig = {\r\n                instrumentationKey: function () { return extensionConfig.instrumentationKey; },\r\n                accountId: function () { return extensionConfig.accountId; },\r\n                sessionRenewalMs: function () { return extensionConfig.sessionRenewalMs; },\r\n                sampleRate: function () { return extensionConfig.sampleRate; },\r\n                sessionExpirationMs: function () { return extensionConfig.sessionExpirationMs; },\r\n                cookieDomain: function () { return extensionConfig.cookieDomain; },\r\n                sdkExtension: function () { return extensionConfig.sdkExtension; },\r\n                isBrowserLinkTrackingEnabled: function () { return extensionConfig.isBrowserLinkTrackingEnabled; },\r\n                appId: function () { return extensionConfig.appId; }\r\n            };\r\n            if (typeof window !== 'undefined') {\r\n                this._sessionManager = new Session_1._SessionManager(this._extensionConfig, core.logger);\r\n                this.application = new Application_1.Application();\r\n                this.device = new Device_1.Device();\r\n                this.internal = new Internal_1.Internal(this._extensionConfig);\r\n                this.location = new Location_1.Location();\r\n                this.user = new User_1.User(this._extensionConfig, core.logger);\r\n                this.operation = new Operation_1.Operation();\r\n                this.session = new Session_1.Session();\r\n                this.sample = new Sample_1.Sample(this._extensionConfig.sampleRate(), core.logger);\r\n            }\r\n        };\r\n        /**\r\n         * Add Part A fields to the event\r\n         * @param event The event that needs to be processed\r\n         */\r\n        PropertiesPlugin.prototype.processTelemetry = function (event) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(event)) {\r\n                // TODO(barustum): throw an internal event once we have support for internal logging\r\n            }\r\n            else {\r\n                // if the event is not sampled in, do not bother going through the pipeline\r\n                if (this.sample.isSampledIn(event)) {\r\n                    // If the envelope is PageView, reset the internal message count so that we can send internal telemetry for the new page.\r\n                    if (event.name === applicationinsights_common_1.PageView.envelopeType) {\r\n                        // TODO(barustum): resetInternalMessageCount once we have support for internal logging\r\n                        //_InternalLogging.resetInternalMessageCount();\r\n                    }\r\n                    if (this.session) {\r\n                        // If customer did not provide custom session id update the session manager\r\n                        if (typeof this.session.id !== \"string\") {\r\n                            this._sessionManager.update();\r\n                        }\r\n                    }\r\n                    this._processTelemetryInternal(event);\r\n                }\r\n                if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                    this._nextPlugin.processTelemetry(event);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Sets the next plugin that comes after this plugin\r\n         * @param nextPlugin The next plugin\r\n         */\r\n        PropertiesPlugin.prototype.setNextPlugin = function (nextPlugin) {\r\n            this._nextPlugin = nextPlugin;\r\n        };\r\n        PropertiesPlugin.prototype._processTelemetryInternal = function (event) {\r\n            var tagsItem = {};\r\n            if (this.session) {\r\n                // If customer set id, apply his context; otherwise apply context generated from cookies \r\n                if (typeof this.session.id === \"string\") {\r\n                    PropertiesPlugin._applySessionContext(tagsItem, this.session);\r\n                }\r\n                else {\r\n                    PropertiesPlugin._applySessionContext(tagsItem, this._sessionManager.automaticSession);\r\n                }\r\n            }\r\n            // set part A  fields\r\n            PropertiesPlugin._applyApplicationContext(tagsItem, this.application);\r\n            PropertiesPlugin._applyDeviceContext(tagsItem, this.device);\r\n            PropertiesPlugin._applyInternalContext(tagsItem, this.internal);\r\n            PropertiesPlugin._applyLocationContext(tagsItem, this.location);\r\n            PropertiesPlugin._applySampleContext(tagsItem, this.sample);\r\n            PropertiesPlugin._applyUserContext(tagsItem, this.user);\r\n            PropertiesPlugin._applyOperationContext(tagsItem, this.operation);\r\n            event.tags.push(tagsItem);\r\n        };\r\n        PropertiesPlugin._applySessionContext = function (tags, sessionContext) {\r\n            if (sessionContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof sessionContext.id === \"string\") {\r\n                    tags[tagKeys.sessionId] = sessionContext.id;\r\n                }\r\n                if (typeof sessionContext.isFirst !== \"undefined\") {\r\n                    tags[tagKeys.sessionIsFirst] = sessionContext.isFirst;\r\n                }\r\n            }\r\n        };\r\n        PropertiesPlugin._applyApplicationContext = function (tagsItem, appContext) {\r\n            if (appContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof appContext.ver === \"string\") {\r\n                    tagsItem[tagKeys.applicationVersion] = appContext.ver;\r\n                }\r\n                if (typeof appContext.build === \"string\") {\r\n                    tagsItem[tagKeys.applicationBuild] = appContext.build;\r\n                }\r\n            }\r\n        };\r\n        PropertiesPlugin._applyDeviceContext = function (tagsItem, deviceContext) {\r\n            var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n            if (deviceContext) {\r\n                if (typeof deviceContext.id === \"string\") {\r\n                    tagsItem[tagKeys.deviceId] = deviceContext.id;\r\n                }\r\n                if (typeof deviceContext.ip === \"string\") {\r\n                    tagsItem[tagKeys.deviceIp] = deviceContext.ip;\r\n                }\r\n                if (typeof deviceContext.language === \"string\") {\r\n                    tagsItem[tagKeys.deviceLanguage] = deviceContext.language;\r\n                }\r\n                if (typeof deviceContext.locale === \"string\") {\r\n                    tagsItem[tagKeys.deviceLocale] = deviceContext.locale;\r\n                }\r\n                if (typeof deviceContext.model === \"string\") {\r\n                    tagsItem[tagKeys.deviceModel] = deviceContext.model;\r\n                }\r\n                if (typeof deviceContext.network !== \"undefined\") {\r\n                    tagsItem[tagKeys.deviceNetwork] = deviceContext.network;\r\n                }\r\n                if (typeof deviceContext.oemName === \"string\") {\r\n                    tagsItem[tagKeys.deviceOEMName] = deviceContext.oemName;\r\n                }\r\n                if (typeof deviceContext.os === \"string\") {\r\n                    tagsItem[tagKeys.deviceOS] = deviceContext.os;\r\n                }\r\n                if (typeof deviceContext.osversion === \"string\") {\r\n                    tagsItem[tagKeys.deviceOSVersion] = deviceContext.osversion;\r\n                }\r\n                if (typeof deviceContext.resolution === \"string\") {\r\n                    tagsItem[tagKeys.deviceScreenResolution] = deviceContext.resolution;\r\n                }\r\n                if (typeof deviceContext.type === \"string\") {\r\n                    tagsItem[tagKeys.deviceType] = deviceContext.type;\r\n                }\r\n            }\r\n        };\r\n        PropertiesPlugin._applyInternalContext = function (tagsItem, internalContext) {\r\n            if (internalContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof internalContext.agentVersion === \"string\") {\r\n                    tagsItem[tagKeys.internalAgentVersion] = internalContext.agentVersion;\r\n                }\r\n                if (typeof internalContext.sdkVersion === \"string\") {\r\n                    tagsItem[tagKeys.internalSdkVersion] = internalContext.sdkVersion;\r\n                }\r\n            }\r\n        };\r\n        PropertiesPlugin._applyLocationContext = function (tagsItem, locationContext) {\r\n            if (locationContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof locationContext.ip === \"string\") {\r\n                    tagsItem[tagKeys.locationIp] = locationContext.ip;\r\n                }\r\n            }\r\n        };\r\n        PropertiesPlugin._applySampleContext = function (tagsItem, sampleContext) {\r\n            if (sampleContext) {\r\n                tagsItem.sampleRate = sampleContext.sampleRate;\r\n            }\r\n        };\r\n        PropertiesPlugin._applyOperationContext = function (tagsItem, operationContext) {\r\n            if (operationContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof operationContext.id === \"string\") {\r\n                    tagsItem[tagKeys.operationId] = operationContext.id;\r\n                }\r\n                if (typeof operationContext.name === \"string\") {\r\n                    tagsItem[tagKeys.operationName] = operationContext.name;\r\n                }\r\n                if (typeof operationContext.parentId === \"string\") {\r\n                    tagsItem[tagKeys.operationParentId] = operationContext.parentId;\r\n                }\r\n                if (typeof operationContext.rootId === \"string\") {\r\n                    tagsItem[tagKeys.operationRootId] = operationContext.rootId;\r\n                }\r\n                if (typeof operationContext.syntheticSource === \"string\") {\r\n                    tagsItem[tagKeys.operationSyntheticSource] = operationContext.syntheticSource;\r\n                }\r\n            }\r\n        };\r\n        PropertiesPlugin._applyUserContext = function (tagsItem, userContext) {\r\n            if (userContext) {\r\n                var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n                if (typeof userContext.accountId === \"string\") {\r\n                    tagsItem[tagKeys.userAccountId] = userContext.accountId;\r\n                }\r\n                if (typeof userContext.agent === \"string\") {\r\n                    tagsItem[tagKeys.userAgent] = userContext.agent;\r\n                }\r\n                if (typeof userContext.id === \"string\") {\r\n                    tagsItem[tagKeys.userId] = userContext.id;\r\n                }\r\n                if (typeof userContext.authenticatedId === \"string\") {\r\n                    tagsItem[tagKeys.userAuthUserId] = userContext.authenticatedId;\r\n                }\r\n                if (typeof userContext.storeRegion === \"string\") {\r\n                    tagsItem[tagKeys.userStoreRegion] = userContext.storeRegion;\r\n                }\r\n            }\r\n        };\r\n        return PropertiesPlugin;\r\n    }());\r\n    exports.default = PropertiesPlugin;\r\n});\r\n//# sourceMappingURL=PropertiesPlugin.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Device = /** @class */ (function () {\r\n        /**\r\n         * Constructs a new instance of the Device class\r\n         */\r\n        function Device() {\r\n            // don't attempt to fingerprint browsers\r\n            this.id = \"browser\";\r\n            // Device type is a dimension in our data platform\r\n            // Setting it to 'Browser' allows to separate client and server dependencies/exceptions\r\n            this.type = \"Browser\";\r\n        }\r\n        return Device;\r\n    }());\r\n    exports.Device = Device;\r\n});\r\n//# sourceMappingURL=Device.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Session = /** @class */ (function () {\r\n        function Session() {\r\n        }\r\n        return Session;\r\n    }());\r\n    exports.Session = Session;\r\n    var _SessionManager = /** @class */ (function () {\r\n        function _SessionManager(config, logger) {\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(logger)) {\r\n                this._logger = new applicationinsights_core_js_1.DiagnosticLogger();\r\n            }\r\n            else {\r\n                this._logger = logger;\r\n            }\r\n            if (!config) {\r\n                config = {};\r\n            }\r\n            if (!(typeof config.sessionExpirationMs === \"function\")) {\r\n                config.sessionExpirationMs = function () { return _SessionManager.acquisitionSpan; };\r\n            }\r\n            if (!(typeof config.sessionRenewalMs === \"function\")) {\r\n                config.sessionRenewalMs = function () { return _SessionManager.renewalSpan; };\r\n            }\r\n            this.config = config;\r\n            this.automaticSession = new Session();\r\n        }\r\n        _SessionManager.prototype.update = function () {\r\n            if (!this.automaticSession.id) {\r\n                this.initializeAutomaticSession();\r\n            }\r\n            var now = applicationinsights_common_1.DateTimeUtils.Now();\r\n            var acquisitionExpired = now - this.automaticSession.acquisitionDate > this.config.sessionExpirationMs();\r\n            var renewalExpired = now - this.automaticSession.renewalDate > this.config.sessionRenewalMs();\r\n            // renew if acquisitionSpan or renewalSpan has ellapsed\r\n            if (acquisitionExpired || renewalExpired) {\r\n                // update automaticSession so session state has correct id                \r\n                this.automaticSession.isFirst = undefined;\r\n                this.renew();\r\n            }\r\n            else {\r\n                // do not update the cookie more often than cookieUpdateInterval\r\n                if (!this.cookieUpdatedTimestamp || now - this.cookieUpdatedTimestamp > _SessionManager.cookieUpdateInterval) {\r\n                    this.automaticSession.renewalDate = now;\r\n                    this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *  Record the current state of the automatic session and store it in our cookie string format\r\n         *  into the browser's local storage. This is used to restore the session data when the cookie\r\n         *  expires.\r\n         */\r\n        _SessionManager.prototype.backup = function () {\r\n            this.setStorage(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n        };\r\n        /**\r\n         *  Use ai_session cookie data or local storage data (when the cookie is unavailable) to\r\n         *  initialize the automatic session.\r\n         */\r\n        _SessionManager.prototype.initializeAutomaticSession = function () {\r\n            var cookie = applicationinsights_common_1.Util.getCookie(this._logger, 'ai_session');\r\n            if (cookie && typeof cookie.split === \"function\") {\r\n                this.initializeAutomaticSessionWithData(cookie);\r\n            }\r\n            else {\r\n                // There's no cookie, but we might have session data in local storage\r\n                // This can happen if the session expired or the user actively deleted the cookie\r\n                // We only want to recover data if the cookie is missing from expiry. We should respect the user's wishes if the cookie was deleted actively.\r\n                // The User class handles this for us and deletes our local storage object if the persistent user cookie was removed.\r\n                var storage = applicationinsights_common_1.Util.getStorage(this._logger, 'ai_session');\r\n                if (storage) {\r\n                    this.initializeAutomaticSessionWithData(storage);\r\n                }\r\n            }\r\n            if (!this.automaticSession.id) {\r\n                this.automaticSession.isFirst = true;\r\n                this.renew();\r\n            }\r\n        };\r\n        /**\r\n         *  Extract id, aquisitionDate, and renewalDate from an ai_session payload string and\r\n         *  use this data to initialize automaticSession.\r\n         *\r\n         *  @param {string} sessionData - The string stored in an ai_session cookie or local storage backup\r\n         */\r\n        _SessionManager.prototype.initializeAutomaticSessionWithData = function (sessionData) {\r\n            var params = sessionData.split(\"|\");\r\n            if (params.length > 0) {\r\n                this.automaticSession.id = params[0];\r\n            }\r\n            try {\r\n                if (params.length > 1) {\r\n                    var acq = +params[1];\r\n                    this.automaticSession.acquisitionDate = +new Date(acq);\r\n                    this.automaticSession.acquisitionDate = this.automaticSession.acquisitionDate > 0 ? this.automaticSession.acquisitionDate : 0;\r\n                }\r\n                if (params.length > 2) {\r\n                    var renewal = +params[2];\r\n                    this.automaticSession.renewalDate = +new Date(renewal);\r\n                    this.automaticSession.renewalDate = this.automaticSession.renewalDate > 0 ? this.automaticSession.renewalDate : 0;\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.ErrorParsingAISessionCookie, \"Error parsing ai_session cookie, session will be reset: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n            if (this.automaticSession.renewalDate == 0) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.SessionRenewalDateIsZero, \"AI session renewal date is 0, session will be reset.\");\r\n            }\r\n        };\r\n        _SessionManager.prototype.renew = function () {\r\n            var now = applicationinsights_common_1.DateTimeUtils.Now();\r\n            this.automaticSession.id = applicationinsights_common_1.Util.newId();\r\n            this.automaticSession.acquisitionDate = now;\r\n            this.automaticSession.renewalDate = now;\r\n            this.setCookie(this.automaticSession.id, this.automaticSession.acquisitionDate, this.automaticSession.renewalDate);\r\n            // If this browser does not support local storage, fire an internal log to keep track of it at this point\r\n            if (!applicationinsights_common_1.Util.canUseLocalStorage()) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserDoesNotSupportLocalStorage, \"Browser does not support local storage. Session durations will be inaccurate.\");\r\n            }\r\n        };\r\n        _SessionManager.prototype.setCookie = function (guid, acq, renewal) {\r\n            // Set cookie to expire after the session expiry time passes or the session renewal deadline, whichever is sooner\r\n            // Expiring the cookie will cause the session to expire even if the user isn't on the page\r\n            var acquisitionExpiry = acq + this.config.sessionExpirationMs();\r\n            var renewalExpiry = renewal + this.config.sessionRenewalMs();\r\n            var cookieExpiry = new Date();\r\n            var cookie = [guid, acq, renewal];\r\n            if (acquisitionExpiry < renewalExpiry) {\r\n                cookieExpiry.setTime(acquisitionExpiry);\r\n            }\r\n            else {\r\n                cookieExpiry.setTime(renewalExpiry);\r\n            }\r\n            var cookieDomnain = this.config.cookieDomain ? this.config.cookieDomain() : null;\r\n            applicationinsights_common_1.Util.setCookie(this._logger, 'ai_session', cookie.join('|') + ';expires=' + cookieExpiry.toUTCString(), cookieDomnain);\r\n            this.cookieUpdatedTimestamp = applicationinsights_common_1.DateTimeUtils.Now();\r\n        };\r\n        _SessionManager.prototype.setStorage = function (guid, acq, renewal) {\r\n            // Keep data in local storage to retain the last session id, allowing us to cleanly end the session when it expires\r\n            // Browsers that don't support local storage won't be able to end sessions cleanly from the client\r\n            // The server will notice this and end the sessions itself, with loss of accurate session duration\r\n            applicationinsights_common_1.Util.setStorage(this._logger, 'ai_session', [guid, acq, renewal].join('|'));\r\n        };\r\n        _SessionManager.acquisitionSpan = 86400000; // 24 hours in ms\r\n        _SessionManager.renewalSpan = 1800000; // 30 minutes in ms\r\n        _SessionManager.cookieUpdateInterval = 60000; // 1 minute in ms\r\n        return _SessionManager;\r\n    }());\r\n    exports._SessionManager = _SessionManager;\r\n});\r\n//# sourceMappingURL=Session.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Application = /** @class */ (function () {\r\n        function Application() {\r\n        }\r\n        return Application;\r\n    }());\r\n    exports.Application = Application;\r\n});\r\n//# sourceMappingURL=Application.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Version = \"2.0.1-beta\";\r\n    var Internal = /** @class */ (function () {\r\n        /**\r\n        * Constructs a new instance of the internal telemetry data class.\r\n        */\r\n        function Internal(config) {\r\n            this.sdkVersion = (config.sdkExtension && config.sdkExtension() ? config.sdkExtension() + \"_\" : \"\") + \"javascript:\" + Version;\r\n        }\r\n        return Internal;\r\n    }());\r\n    exports.Internal = Internal;\r\n});\r\n//# sourceMappingURL=Internal.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Location = /** @class */ (function () {\r\n        function Location() {\r\n        }\r\n        return Location;\r\n    }());\r\n    exports.Location = Location;\r\n});\r\n//# sourceMappingURL=Location.js.map","define([\"require\", \"exports\", \"applicationinsights-common\"], function (require, exports, applicationinsights_common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Operation = /** @class */ (function () {\r\n        function Operation() {\r\n            this.id = applicationinsights_common_1.Util.newId();\r\n            if (window && window.location && window.location.pathname) {\r\n                this.name = window.location.pathname;\r\n            }\r\n        }\r\n        return Operation;\r\n    }());\r\n    exports.Operation = Operation;\r\n});\r\n//# sourceMappingURL=Operation.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var User = /** @class */ (function () {\r\n        function User(config, logger) {\r\n            this._logger = logger;\r\n            //get userId or create new one if none exists\r\n            var cookie = applicationinsights_common_1.Util.getCookie(this._logger, User.userCookieName);\r\n            if (cookie) {\r\n                var params = cookie.split(User.cookieSeparator);\r\n                if (params.length > 0) {\r\n                    this.id = params[0];\r\n                }\r\n            }\r\n            this.config = config;\r\n            if (!this.id) {\r\n                this.id = applicationinsights_common_1.Util.newId();\r\n                var date = new Date();\r\n                var acqStr = applicationinsights_common_1.Util.toISOStringForIE8(date);\r\n                this.accountAcquisitionDate = acqStr;\r\n                // without expiration, cookies expire at the end of the session\r\n                // set it to 365 days from now\r\n                // 365 * 24 * 60 * 60 * 1000 = 31536000000 \r\n                date.setTime(date.getTime() + 31536000000);\r\n                var newCookie = [this.id, acqStr];\r\n                var cookieDomain = this.config.cookieDomain ? this.config.cookieDomain() : undefined;\r\n                applicationinsights_common_1.Util.setCookie(this._logger, User.userCookieName, newCookie.join(User.cookieSeparator) + ';expires=' + date.toUTCString(), cookieDomain);\r\n                // If we have an ai_session in local storage this means the user actively removed our cookies.\r\n                // We should respect their wishes and clear ourselves from local storage\r\n                applicationinsights_common_1.Util.removeStorage(this._logger, 'ai_session');\r\n            }\r\n            // We still take the account id from the ctor param for backward compatibility. \r\n            // But if the the customer set the accountId through the newer setAuthenticatedUserContext API, we will override it.\r\n            this.accountId = config.accountId ? config.accountId() : undefined;\r\n            // Get the auth user id and account id from the cookie if exists\r\n            // Cookie is in the pattern: <authenticatedId>|<accountId>\r\n            var authCookie = applicationinsights_common_1.Util.getCookie(this._logger, User.authUserCookieName);\r\n            if (authCookie) {\r\n                authCookie = decodeURI(authCookie);\r\n                var authCookieString = authCookie.split(User.cookieSeparator);\r\n                if (authCookieString[0]) {\r\n                    this.authenticatedId = authCookieString[0];\r\n                }\r\n                if (authCookieString.length > 1 && authCookieString[1]) {\r\n                    this.accountId = authCookieString[1];\r\n                }\r\n            }\r\n        }\r\n        /**\r\n        * Sets the authenticated user id and the account id in this session.\r\n        *\r\n        * @param authenticatedUserId {string} - The authenticated user id. A unique and persistent string that represents each authenticated user in the service.\r\n        * @param accountId {string} - An optional string to represent the account associated with the authenticated user.\r\n        */\r\n        User.prototype.setAuthenticatedUserContext = function (authenticatedUserId, accountId, storeInCookie) {\r\n            if (storeInCookie === void 0) { storeInCookie = false; }\r\n            // Validate inputs to ensure no cookie control characters.\r\n            var isInvalidInput = !this.validateUserInput(authenticatedUserId) || (accountId && !this.validateUserInput(accountId));\r\n            if (isInvalidInput) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.SetAuthContextFailedAccountName, \"Setting auth user context failed. \" +\r\n                    \"User auth/account id should be of type string, and not contain commas, semi-colons, equal signs, spaces, or vertical-bars.\", true);\r\n                return;\r\n            }\r\n            // Create cookie string.\r\n            this.authenticatedId = authenticatedUserId;\r\n            var authCookie = this.authenticatedId;\r\n            if (accountId) {\r\n                this.accountId = accountId;\r\n                authCookie = [this.authenticatedId, this.accountId].join(User.cookieSeparator);\r\n            }\r\n            if (storeInCookie) {\r\n                // Set the cookie. No expiration date because this is a session cookie (expires when browser closed).\r\n                // Encoding the cookie to handle unexpected unicode characters.\r\n                applicationinsights_common_1.Util.setCookie(this._logger, User.authUserCookieName, encodeURI(authCookie), this.config.cookieDomain());\r\n            }\r\n        };\r\n        /**\r\n         * Clears the authenticated user id and the account id from the user context.\r\n         * @returns {}\r\n         */\r\n        User.prototype.clearAuthenticatedUserContext = function () {\r\n            this.authenticatedId = null;\r\n            this.accountId = null;\r\n            applicationinsights_common_1.Util.deleteCookie(this._logger, User.authUserCookieName);\r\n        };\r\n        User.prototype.validateUserInput = function (id) {\r\n            // Validate:\r\n            // 1. Id is a non-empty string.\r\n            // 2. It does not contain special characters for cookies.\r\n            if (typeof id !== 'string' ||\r\n                !id ||\r\n                id.match(/,|;|=| |\\|/)) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        User.cookieSeparator = '|';\r\n        User.userCookieName = 'ai_user';\r\n        User.authUserCookieName = 'ai_authUser';\r\n        return User;\r\n    }());\r\n    exports.User = User;\r\n});\r\n//# sourceMappingURL=User.js.map","define([\"require\", \"exports\", \"../SamplingScoreGenerator\", \"applicationinsights-core-js\"], function (require, exports, SamplingScoreGenerator_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Sample = /** @class */ (function () {\r\n        function Sample(sampleRate, logger) {\r\n            // We're using 32 bit math, hence max value is (2^31 - 1)\r\n            this.INT_MAX_VALUE = 2147483647;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(logger)) {\r\n                this._logger = new applicationinsights_core_js_1.DiagnosticLogger();\r\n            }\r\n            else {\r\n                this._logger = logger;\r\n            }\r\n            if (sampleRate > 100 || sampleRate < 0) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.SampleRateOutOfRange, \"Sampling rate is out of range (0..100). Sampling will be disabled, you may be sending too much data which may affect your AI service level.\", { samplingRate: sampleRate }, true);\r\n                this.sampleRate = 100;\r\n            }\r\n            this.sampleRate = sampleRate;\r\n            this.samplingScoreGenerator = new SamplingScoreGenerator_1.SamplingScoreGenerator();\r\n        }\r\n        /**\r\n        * Determines if an envelope is sampled in (i.e. will be sent) or not (i.e. will be dropped).\r\n        */\r\n        Sample.prototype.isSampledIn = function (envelope) {\r\n            // return true as sampling will move to different extension\r\n            return true;\r\n        };\r\n        return Sample;\r\n    }());\r\n    exports.Sample = Sample;\r\n});\r\n//# sourceMappingURL=Sample.js.map","define([\"require\", \"exports\", \"./HashCodeScoreGenerator\", \"applicationinsights-common\"], function (require, exports, HashCodeScoreGenerator_1, applicationinsights_common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var SamplingScoreGenerator = /** @class */ (function () {\r\n        function SamplingScoreGenerator() {\r\n            this.hashCodeGeneragor = new HashCodeScoreGenerator_1.HashCodeScoreGenerator();\r\n        }\r\n        SamplingScoreGenerator.prototype.getSamplingScore = function (envelope) {\r\n            var tagKeys = new applicationinsights_common_1.ContextTagKeys();\r\n            var score = 0;\r\n            if (envelope.tags[tagKeys.userId]) {\r\n                score = this.hashCodeGeneragor.getHashCodeScore(envelope.tags[tagKeys.userId]);\r\n            }\r\n            else if (envelope.tags[tagKeys.operationId]) {\r\n                score = this.hashCodeGeneragor.getHashCodeScore(envelope.tags[tagKeys.operationId]);\r\n            }\r\n            else {\r\n                // tslint:disable-next-line:insecure-random\r\n                score = Math.random();\r\n            }\r\n            return score;\r\n        };\r\n        return SamplingScoreGenerator;\r\n    }());\r\n    exports.SamplingScoreGenerator = SamplingScoreGenerator;\r\n});\r\n//# sourceMappingURL=SamplingScoreGenerator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var HashCodeScoreGenerator = /** @class */ (function () {\r\n        function HashCodeScoreGenerator() {\r\n        }\r\n        HashCodeScoreGenerator.prototype.getHashCodeScore = function (key) {\r\n            var score = this.getHashCode(key) / HashCodeScoreGenerator.INT_MAX_VALUE;\r\n            return score * 100;\r\n        };\r\n        HashCodeScoreGenerator.prototype.getHashCode = function (input) {\r\n            if (input == \"\") {\r\n                return 0;\r\n            }\r\n            while (input.length < HashCodeScoreGenerator.MIN_INPUT_LENGTH) {\r\n                input = input.concat(input);\r\n            }\r\n            // 5381 is a magic number: http://stackoverflow.com/questions/10696223/reason-for-5381-number-in-djb-hash-function\r\n            var hash = 5381;\r\n            for (var i = 0; i < input.length; ++i) {\r\n                hash = ((hash << 5) + hash) + input.charCodeAt(i);\r\n                // 'hash' is of number type which means 53 bit integer (http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types-number-type)\r\n                // 'hash & hash' will keep it 32 bit integer - just to make it clearer what the result is.\r\n                hash = hash & hash;\r\n            }\r\n            return Math.abs(hash);\r\n        };\r\n        // We're using 32 bit math, hence max value is (2^31 - 1)\r\n        HashCodeScoreGenerator.INT_MAX_VALUE = 2147483647;\r\n        // (Magic number) DJB algorithm can't work on shorter strings (results in poor distribution\r\n        HashCodeScoreGenerator.MIN_INPUT_LENGTH = 8;\r\n        return HashCodeScoreGenerator;\r\n    }());\r\n    exports.HashCodeScoreGenerator = HashCodeScoreGenerator;\r\n});\r\n//# sourceMappingURL=HashCodeScoreGenerator.js.map","define([\"require\", \"exports\", \"./ajax\"], function (require, exports, ajax_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.AjaxPlugin = ajax_1.AjaxMonitor;\r\n});\r\n//# sourceMappingURL=applicationinsights-dependencies-js.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\", \"./ajaxRecord\", \"./ajaxUtils\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1, ajaxRecord_1, ajaxUtils_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var AjaxMonitor = /** @class */ (function () {\r\n        function AjaxMonitor() {\r\n            this._trackAjaxAttempts = 0;\r\n            this.identifier = \"AjaxDependencyPlugin\";\r\n            this.priority = 161;\r\n            this.currentWindowHost = window && window.location.host && window.location.host.toLowerCase();\r\n            this.initialized = false;\r\n        }\r\n        ///<summary>Verifies that particalar instance of XMLHttpRequest needs to be monitored</summary>\r\n        ///<param name=\"excludeAjaxDataValidation\">Optional parameter. True if ajaxData must be excluded from verification</param>\r\n        ///<returns type=\"bool\">True if instance needs to be monitored, otherwise false</returns>\r\n        AjaxMonitor.prototype.isMonitoredInstance = function (xhr, excludeAjaxDataValidation) {\r\n            // checking to see that all interested functions on xhr were instrumented\r\n            return this.initialized\r\n                // checking on ajaxData to see that it was not removed in user code\r\n                && (excludeAjaxDataValidation === true || !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(xhr.ajaxData))\r\n                // check that this instance is not not used by ajax call performed inside client side monitoring to send data to collector\r\n                && xhr[applicationinsights_common_1.DisabledPropertyName] !== true;\r\n        };\r\n        ///<summary>Determines whether ajax monitoring can be enabled on this document</summary>\r\n        ///<returns>True if Ajax monitoring is supported on this page, otherwise false</returns>\r\n        AjaxMonitor.prototype.supportsMonitoring = function () {\r\n            var result = true;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(XMLHttpRequest) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.open) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.send) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(XMLHttpRequest.prototype.abort)) {\r\n                result = false;\r\n            }\r\n            // disable in IE8 or older (https://www.w3schools.com/jsref/jsref_trim_string.asp)\r\n            try {\r\n                \" a \".trim();\r\n            }\r\n            catch (ex) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        };\r\n        AjaxMonitor.prototype.instrumentOpen = function () {\r\n            var originalOpen = XMLHttpRequest.prototype.open;\r\n            var ajaxMonitorInstance = this;\r\n            XMLHttpRequest.prototype.open = function (method, url, async) {\r\n                try {\r\n                    if (ajaxMonitorInstance.isMonitoredInstance(this, true) &&\r\n                        (!this.ajaxData ||\r\n                            !this.ajaxData.xhrMonitoringState.openDone)) {\r\n                        ajaxMonitorInstance.openHandler(this, method, url, async);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    this._core.logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.FailedMonitorAjaxOpen, \"Failed to monitor XMLHttpRequest.open, monitoring data for this ajax call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                        exception: applicationinsights_common_1.Util.dump(e)\r\n                    });\r\n                }\r\n                return originalOpen.apply(this, arguments);\r\n            };\r\n        };\r\n        AjaxMonitor.prototype.openHandler = function (xhr, method, url, async) {\r\n            /* todo:\r\n            Disabling the following block of code as CV is not yet supported in 1DS for 3rd Part.\r\n            // this format corresponds with activity logic on server-side and is required for the correct correlation\r\n            var id = \"|\" + this.appInsights.context.operation.id + \".\" + Util.newId();\r\n            */\r\n            var id = applicationinsights_common_1.Util.newId();\r\n            var ajaxData = new ajaxRecord_1.ajaxRecord(id, this._core._logger);\r\n            ajaxData.method = method;\r\n            ajaxData.requestUrl = url;\r\n            ajaxData.xhrMonitoringState.openDone = true;\r\n            xhr.ajaxData = ajaxData;\r\n            this.attachToOnReadyStateChange(xhr);\r\n        };\r\n        AjaxMonitor.getFailedAjaxDiagnosticsMessage = function (xhr) {\r\n            var result = \"\";\r\n            try {\r\n                if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(xhr) &&\r\n                    !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(xhr.ajaxData) &&\r\n                    !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(xhr.ajaxData.requestUrl)) {\r\n                    result += \"(url: '\" + xhr.ajaxData.requestUrl + \"')\";\r\n                }\r\n            }\r\n            catch (e) { }\r\n            return result;\r\n        };\r\n        AjaxMonitor.prototype.instrumentSend = function () {\r\n            var originalSend = XMLHttpRequest.prototype.send;\r\n            var ajaxMonitorInstance = this;\r\n            XMLHttpRequest.prototype.send = function (content) {\r\n                try {\r\n                    if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.sendDone) {\r\n                        ajaxMonitorInstance.sendHandler(this, content);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    this._core.logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.FailedMonitorAjaxSend, \"Failed to monitor XMLHttpRequest, monitoring data for this ajax call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                        exception: applicationinsights_common_1.Util.dump(e)\r\n                    });\r\n                }\r\n                return originalSend.apply(this, arguments);\r\n            };\r\n        };\r\n        AjaxMonitor.prototype.sendHandler = function (xhr, content) {\r\n            xhr.ajaxData.requestSentTime = applicationinsights_common_1.DateTimeUtils.Now();\r\n            if (this.currentWindowHost && applicationinsights_common_1.CorrelationIdHelper.canIncludeCorrelationHeader(this._config, xhr.ajaxData.getAbsoluteUrl(), this.currentWindowHost)) {\r\n                xhr.setRequestHeader(applicationinsights_common_1.RequestHeaders.requestIdHeader, xhr.ajaxData.id);\r\n                var appId = this._config.appId; // Todo: also, get appId from channel as breeze returns it\r\n                if (appId) {\r\n                    xhr.setRequestHeader(applicationinsights_common_1.RequestHeaders.requestContextHeader, applicationinsights_common_1.RequestHeaders.requestContextAppIdFormat + appId);\r\n                }\r\n            }\r\n            xhr.ajaxData.xhrMonitoringState.sendDone = true;\r\n        };\r\n        AjaxMonitor.prototype.instrumentAbort = function () {\r\n            var originalAbort = XMLHttpRequest.prototype.abort;\r\n            var ajaxMonitorInstance = this;\r\n            XMLHttpRequest.prototype.abort = function () {\r\n                try {\r\n                    if (ajaxMonitorInstance.isMonitoredInstance(this) && !this.ajaxData.xhrMonitoringState.abortDone) {\r\n                        this.ajaxData.aborted = 1;\r\n                        this.ajaxData.xhrMonitoringState.abortDone = true;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    this._core.logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.FailedMonitorAjaxAbort, \"Failed to monitor XMLHttpRequest.abort, monitoring data for this ajax call may be incorrect.\", {\r\n                        ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(this),\r\n                        exception: applicationinsights_common_1.Util.dump(e)\r\n                    });\r\n                }\r\n                return originalAbort.apply(this, arguments);\r\n            };\r\n        };\r\n        AjaxMonitor.prototype.attachToOnReadyStateChange = function (xhr) {\r\n            var _this = this;\r\n            var ajaxMonitorInstance = this;\r\n            xhr.ajaxData.xhrMonitoringState.onreadystatechangeCallbackAttached = ajaxUtils_1.EventHelper.AttachEvent(xhr, \"readystatechange\", function () {\r\n                try {\r\n                    if (ajaxMonitorInstance.isMonitoredInstance(xhr)) {\r\n                        if (xhr.readyState === 4) {\r\n                            ajaxMonitorInstance.onAjaxComplete(xhr);\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    var exceptionText = applicationinsights_common_1.Util.dump(e);\r\n                    // ignore messages with c00c023f, as this a known IE9 XHR abort issue\r\n                    if (!exceptionText || exceptionText.toLowerCase().indexOf(\"c00c023f\") == -1) {\r\n                        _this._core.logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.FailedMonitorAjaxRSC, \"Failed to monitor XMLHttpRequest 'readystatechange' event handler, monitoring data for this ajax call may be incorrect.\", {\r\n                            ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                            exception: applicationinsights_common_1.Util.dump(e)\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        AjaxMonitor.prototype.onAjaxComplete = function (xhr) {\r\n            xhr.ajaxData.responseFinishedTime = applicationinsights_common_1.DateTimeUtils.Now();\r\n            xhr.ajaxData.status = xhr.status;\r\n            xhr.ajaxData.CalculateMetrics();\r\n            if (xhr.ajaxData.ajaxTotalDuration < 0) {\r\n                this._core.logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.FailedMonitorAjaxDur, \"Failed to calculate the duration of the ajax call, monitoring data for this ajax call won't be sent.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                    requestSentTime: xhr.ajaxData.requestSentTime,\r\n                    responseFinishedTime: xhr.ajaxData.responseFinishedTime\r\n                });\r\n            }\r\n            else {\r\n                var dependency = {\r\n                    id: xhr.ajaxData.id,\r\n                    absoluteUrl: xhr.ajaxData.getAbsoluteUrl(),\r\n                    commandName: xhr.ajaxData.getPathName(),\r\n                    duration: xhr.ajaxData.ajaxTotalDuration,\r\n                    success: (+(xhr.ajaxData.status)) >= 200 && (+(xhr.ajaxData.status)) < 400,\r\n                    resultCode: +xhr.ajaxData.status,\r\n                    method: xhr.ajaxData.method\r\n                };\r\n                // enrich dependency target with correlation context from the server\r\n                var correlationContext = this.getCorrelationContext(xhr);\r\n                if (correlationContext) {\r\n                    dependency.correlationContext = /* dependency.target + \" | \" + */ correlationContext;\r\n                }\r\n                this.trackDependencyData(dependency);\r\n                xhr.ajaxData = null;\r\n            }\r\n        };\r\n        AjaxMonitor.prototype.getCorrelationContext = function (xhr) {\r\n            try {\r\n                var responseHeadersString = xhr.getAllResponseHeaders();\r\n                if (responseHeadersString !== null) {\r\n                    var index = responseHeadersString.toLowerCase().indexOf(applicationinsights_common_1.RequestHeaders.requestContextHeaderLowerCase);\r\n                    if (index !== -1) {\r\n                        var responseHeader = xhr.getResponseHeader(applicationinsights_common_1.RequestHeaders.requestContextHeader);\r\n                        return applicationinsights_common_1.CorrelationIdHelper.getCorrelationContext(responseHeader);\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._core.logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.FailedMonitorAjaxGetCorrelationHeader, \"Failed to get Request-Context correlation header as it may be not included in the response or not accessible.\", {\r\n                    ajaxDiagnosticsMessage: AjaxMonitor.getFailedAjaxDiagnosticsMessage(xhr),\r\n                    exception: applicationinsights_common_1.Util.dump(e)\r\n                });\r\n            }\r\n        };\r\n        /**\r\n            * Logs dependency call\r\n            * @param dependencyData dependency data object\r\n            */\r\n        AjaxMonitor.prototype.trackDependencyData = function (dependency, properties, systemProperties) {\r\n            if (this._config.maxAjaxCallsPerView === -1 || this._trackAjaxAttempts < this._config.maxAjaxCallsPerView) {\r\n                var item = applicationinsights_common_1.TelemetryItemCreator.create(dependency, applicationinsights_common_1.RemoteDependencyData.dataType, applicationinsights_common_1.RemoteDependencyData.envelopeType, this._core._logger, properties, systemProperties);\r\n                this._core.track(item);\r\n            }\r\n            else if (this._trackAjaxAttempts === this._config.maxAjaxCallsPerView) {\r\n                this._core.logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.MaxAjaxPerPVExceeded, \"Maximum ajax per page view limit reached, ajax monitoring is paused until the next trackPageView(). In order to increase the limit set the maxAjaxCallsPerView configuration parameter.\", true);\r\n            }\r\n            ++this._trackAjaxAttempts;\r\n        };\r\n        AjaxMonitor.prototype.processTelemetry = function (item) {\r\n            if (this._nextPlugin && this._nextPlugin.processTelemetry) {\r\n                this._nextPlugin.processTelemetry(item);\r\n            }\r\n        };\r\n        AjaxMonitor.prototype.setNextPlugin = function (next) {\r\n            if (next) {\r\n                this._nextPlugin = next;\r\n            }\r\n        };\r\n        AjaxMonitor.prototype.initialize = function (config, core, extensions) {\r\n            if (!this.initialized) {\r\n                this._core = core;\r\n                config.extensionConfig = config.extensionConfig ? config.extensionConfig : {};\r\n                var c = config.extensionConfig[this.identifier] ? config.extensionConfig[this.identifier] : {};\r\n                this._config = {\r\n                    maxAjaxCallsPerView: !isNaN(c.maxAjaxCallsPerView) ? c.maxAjaxCallsPerView : 500,\r\n                    disableAjaxTracking: applicationinsights_common_1.Util.stringToBoolOrDefault(c.disableAjaxTracking),\r\n                    disableCorrelationHeaders: applicationinsights_common_1.Util.stringToBoolOrDefault(c.disableCorrelationHeaders),\r\n                    correlationHeaderExcludedDomains: c.correlationHeaderExcludedDomains || [\r\n                        \"*.blob.core.windows.net\",\r\n                        \"*.blob.core.chinacloudapi.cn\",\r\n                        \"*.blob.core.cloudapi.de\",\r\n                        \"*.blob.core.usgovcloudapi.net\"\r\n                    ],\r\n                    appId: c.appId,\r\n                    enableCorsCorrelation: applicationinsights_common_1.Util.stringToBoolOrDefault(c.enableCorsCorrelation)\r\n                };\r\n                if (this.supportsMonitoring() && !this._config.disableAjaxTracking) {\r\n                    this.instrumentOpen();\r\n                    this.instrumentSend();\r\n                    this.instrumentAbort();\r\n                    this.initialized = true;\r\n                }\r\n            }\r\n        };\r\n        return AjaxMonitor;\r\n    }());\r\n    exports.AjaxMonitor = AjaxMonitor;\r\n});\r\n//# sourceMappingURL=ajax.js.map","define([\"require\", \"exports\", \"applicationinsights-common\"], function (require, exports, applicationinsights_common_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var XHRMonitoringState = /** @class */ (function () {\r\n        function XHRMonitoringState() {\r\n            this.openDone = false;\r\n            this.setRequestHeaderDone = false;\r\n            this.sendDone = false;\r\n            this.abortDone = false;\r\n            //<summary>True, if onreadyStateChangeCallback function attached to xhr, otherwise false</summary>\r\n            this.onreadystatechangeCallbackAttached = false;\r\n        }\r\n        return XHRMonitoringState;\r\n    }());\r\n    exports.XHRMonitoringState = XHRMonitoringState;\r\n    var ajaxRecord = /** @class */ (function () {\r\n        function ajaxRecord(id, logger) {\r\n            this.completed = false;\r\n            this.requestHeadersSize = null;\r\n            this.ttfb = null;\r\n            this.responseReceivingDuration = null;\r\n            this.callbackDuration = null;\r\n            this.ajaxTotalDuration = null;\r\n            this.aborted = null;\r\n            this.pageUrl = null;\r\n            this.requestUrl = null;\r\n            this.requestSize = 0;\r\n            this.method = null;\r\n            ///<summary>Returns the HTTP status code.</summary>\r\n            this.status = null;\r\n            //<summary>The timestamp when open method was invoked</summary>\r\n            this.requestSentTime = null;\r\n            //<summary>The timestamps when first byte was received</summary>\r\n            this.responseStartedTime = null;\r\n            //<summary>The timestamp when last byte was received</summary>\r\n            this.responseFinishedTime = null;\r\n            //<summary>The timestamp when onreadystatechange callback in readyState 4 finished</summary>\r\n            this.callbackFinishedTime = null;\r\n            //<summary>The timestamp at which ajax was ended</summary>\r\n            this.endTime = null;\r\n            //<summary>The original xhr onreadystatechange event</summary>\r\n            this.originalOnreadystatechage = null;\r\n            this.xhrMonitoringState = new XHRMonitoringState();\r\n            //<summary>Determines whether or not JavaScript exception occured in xhr.onreadystatechange code. 1 if occured, otherwise 0.</summary>\r\n            this.clientFailure = 0;\r\n            this.CalculateMetrics = function () {\r\n                var self = this;\r\n                // round to 3 decimal points\r\n                self.ajaxTotalDuration = Math.round(applicationinsights_common_1.DateTimeUtils.GetDuration(self.requestSentTime, self.responseFinishedTime) * 1000) / 1000;\r\n            };\r\n            this.id = id;\r\n            this._logger = logger;\r\n        }\r\n        ajaxRecord.prototype.getAbsoluteUrl = function () {\r\n            return this.requestUrl ? applicationinsights_common_1.UrlHelper.getAbsoluteUrl(this.requestUrl) : null;\r\n        };\r\n        ajaxRecord.prototype.getPathName = function () {\r\n            return this.requestUrl ? applicationinsights_common_1.DataSanitizer.sanitizeUrl(this._logger, applicationinsights_common_1.UrlHelper.getCompleteUrl(this.method, this.requestUrl)) : null;\r\n        };\r\n        return ajaxRecord;\r\n    }());\r\n    exports.ajaxRecord = ajaxRecord;\r\n    ;\r\n});\r\n//# sourceMappingURL=ajaxRecord.js.map","define([\"require\", \"exports\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var stringUtils = /** @class */ (function () {\r\n        function stringUtils() {\r\n        }\r\n        stringUtils.GetLength = function (strObject) {\r\n            var res = 0;\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(strObject)) {\r\n                var stringified = \"\";\r\n                try {\r\n                    stringified = strObject.toString();\r\n                }\r\n                catch (ex) {\r\n                    // some troubles with complex object\r\n                }\r\n                res = stringified.length;\r\n                res = isNaN(res) ? 0 : res;\r\n            }\r\n            return res;\r\n        };\r\n        return stringUtils;\r\n    }());\r\n    exports.stringUtils = stringUtils;\r\n    var EventHelper = /** @class */ (function () {\r\n        function EventHelper() {\r\n        }\r\n        ///<summary>Binds the specified function to an event, so that the function gets called whenever the event fires on the object</summary>\r\n        ///<param name=\"obj\">Object to which </param>\r\n        ///<param name=\"eventNameWithoutOn\">String that specifies any of the standard DHTML Events without \"on\" prefix</param>\r\n        ///<param name=\"handlerRef\">Pointer that specifies the function to call when event fires</param>\r\n        ///<returns>True if the function was bound successfully to the event, otherwise false</returns>\r\n        EventHelper.AttachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n            var result = false;\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(obj)) {\r\n                if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(obj.attachEvent)) {\r\n                    // IE before version 9                    \r\n                    obj.attachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n                    result = true;\r\n                }\r\n                else {\r\n                    if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(obj.addEventListener)) {\r\n                        // all browsers except IE before version 9\r\n                        obj.addEventListener(eventNameWithoutOn, handlerRef, false);\r\n                        result = true;\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        EventHelper.DetachEvent = function (obj, eventNameWithoutOn, handlerRef) {\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(obj)) {\r\n                if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(obj.detachEvent)) {\r\n                    obj.detachEvent(\"on\" + eventNameWithoutOn, handlerRef);\r\n                }\r\n                else {\r\n                    if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(obj.removeEventListener)) {\r\n                        obj.removeEventListener(eventNameWithoutOn, handlerRef, false);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return EventHelper;\r\n    }());\r\n    exports.EventHelper = EventHelper;\r\n});\r\n//# sourceMappingURL=ajaxUtils.js.map"],"sourceRoot":""}