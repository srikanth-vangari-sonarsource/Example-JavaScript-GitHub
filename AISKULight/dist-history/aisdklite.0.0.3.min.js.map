{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/applicationinsights-common/bundle/Util.js","webpack:///./node_modules/applicationinsights-common/bundle/Enums.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/DataSanitizer.js","webpack:///./node_modules/applicationinsights-core-js/bundle/applicationinsights-core-js.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Domain.js","webpack:///./node_modules/applicationinsights-common/bundle/applicationinsights-common.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/CoreUtils.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/PageViewData.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK.Enums/EventsDiscardedReason.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/NotificationManager.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/DiagnosticLogger.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK.Enums/LoggingEnums.js","webpack:///./node_modules/applicationinsights-common/bundle/RequestResponseHeaders.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Data.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Base.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/EventData.js","webpack:///../index.ts","webpack:///./bundle sync","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK.Interfaces/IChannelControls.js","webpack:///./node_modules/applicationinsights-core-js/bundle/JavaScriptSDK/AppInsightsCore.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/applicationinsights-channel-js.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/Sender.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/PageViewPerformanceValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/SendBuffer.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Metric.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/MetricData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/DataPoint.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/DataPoint.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/DataPointType.js","webpack:///./node_modules/applicationinsights-common/bundle/Constants.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/Envelope.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/Envelope.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Event.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Exception.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/StackFrame.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/ExceptionData.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/ExceptionDetails.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/PageView.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/RemoteDependencyData.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/RemoteDependencyData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Trace.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/MessageData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/PageViewPerformance.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/PageViewPerfData.js","webpack:///./node_modules/applicationinsights-common/bundle/Telemetry/Common/Data.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/SeverityLevel.js","webpack:///./node_modules/applicationinsights-common/bundle/Interfaces/Contracts/Generated/ContextTagKeys.js","webpack:///./node_modules/applicationinsights-common/bundle/TelemetryItemCreator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/EnvelopeCreator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/EventValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/TraceValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/ExceptionValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/MetricValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/PageViewValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/TelemetryValidation/RemoteDepdencyValidator.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/Serializer.js","webpack:///./node_modules/applicationinsights-channel-js/bundle/Offline.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","require","Enums_1","applicationinsights_core_js_1","RequestResponseHeaders_1","DataSanitizer_1","Util","disableStorage","_canUseLocalStorage","_canUseSessionStorage","_getLocalStorageObject","canUseLocalStorage","_getVerifiedStorageObject","StorageType","LocalStorage","storageType","fail","uid","storage","Date","localStorage","sessionStorage","setItem","getItem","removeItem","exception","isInternalApplicationInsightsEndpoint","endpointUrl","_internalEndpoints","indexOf","toLowerCase","getStorage","logger","e","throwInternal","LoggingSeverity","WARNING","_InternalMessageId","BrowserCannotReadLocalStorage","getExceptionName","dump","setStorage","data","BrowserCannotWriteLocalStorage","removeStorage","BrowserFailedRemovalFromLocalStorage","_getSessionStorageObject","canUseSessionStorage","SessionStorage","getSessionStorageKeys","keys","push","getSessionStorage","BrowserCannotReadSessionStorage","setSessionStorage","BrowserCannotWriteSessionStorage","removeSessionStorage","BrowserFailedRemovalFromSessionStorage","disableCookies","_canUseCookies","canUseCookies","document","cookie","CannotAccessCookie","setCookie","domain","domainAttrib","secureAttrib","location","protocol","stringToBoolOrDefault","str","defaultValue","toString","getCookie","length","cookieName","cookies","split","trim","substring","deleteCookie","replace","newId","result","random","Math","charAt","floor","isArray","obj","isError","isDate","toISOStringForIE8","date","toISOString","pad","num","String","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","getIEVersion","userAgentStr","myNav","navigator","userAgent","parseInt","msToTimeSpan","totalms","isNaN","ms","round","sec","min","hour","days","isCrossOriginError","message","url","lineNumber","columnNumber","error","objectTypeDump","propertyValueDump","JSON","stringify","stack","addEventHandler","eventName","callback","verbEventName","addEventListener","IsBeaconApiSupported","sendBeacon","NotSpecified","UrlHelper","parseUrl","htmlAnchorElement","createElement","href","getAbsoluteUrl","getPathName","pathname","getCompleteUrl","method","absoluteUrl","toUpperCase","CorrelationIdHelper","canIncludeCorrelationHeader","config","requestUrl","currentHost","disableCorrelationHeaders","requestHost","host","enableCorsCorrelation","excludedDomains","correlationHeaderExcludedDomains","RegExp","test","getCorrelationContext","responseHeader","correlationId","getCorrelationContextValue","RequestHeaders","requestContextTargetKey","correlationIdPrefix","keyValues","keyValue","AjaxHelper","ParseDependencyPath","pathName","target","parsedUrl","DataSanitizer","sanitizeString","DateTimeUtils","Now","performance","now","timing","navigationStart","getTime","GetDuration","start","end","CoreUtils","isNullOrUndefined","apply","FieldType","Util_1","sanitizeKeyAndAddUniqueness","map","origLength","field","sanitizeKey","uniqueField","MAX_NAME_LENGTH","padNumber","NameTooLong","maxLength","MAX_STRING_LENGTH","StringValueTooLong","sanitizeUrl","sanitizeInput","MAX_URL_LENGTH","UrlTooLong","sanitizeMessage","MAX_MESSAGE_LENGTH","MessageTruncated","sanitizeException","MAX_EXCEPTION_LENGTH","ExceptionTruncated","sanitizeProperties","properties","tempProps","prop","MAX_PROPERTY_LENGTH","sanitizeMeasurements","measurements","tempMeasurements","measure","sanitizeId","id","MAX_ID_LENGTH","IdTooLong","input","_msgId","substr","IChannelControls_1","EventsDiscardedReason_1","AppInsightsCore_1","CoreUtils_1","NotificationManager_1","DiagnosticLogger_1","LoggingEnums_1","MinChannelPriorty","EventsDiscardedReason","AppInsightsCore","NotificationManager","DiagnosticLogger","_InternalLogMessage","Domain","Constants_1","Data_1","Base_1","Envelope_1","Event_1","Exception_1","Metric_1","PageView_1","PageViewData_1","RemoteDependencyData_1","Trace_1","PageViewPerformance_1","Data_2","SeverityLevel_1","ContextTagKeys_1","TelemetryItemCreator_1","DisabledPropertyName","AIData","Data","AIBase","Base","Envelope","Event","Exception","Metric","PageView","PageViewData","RemoteDependencyData","Trace","PageViewPerformance","SeverityLevel","ContextTagKeys","TelemetryItemCreator","newGuid","GuidRegex","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","b","__","constructor","EventData_1","_super","_this","ver","EventData","Unknown","NonRetryableStatus","InvalidEvent","SizeLimitExceeded","KillSwitch","QueueFull","listeners","addNotificationListener","listener","removeNotificationListener","index","splice","eventsSent","events","_loop_1","this_1","setTimeout","eventsDiscarded","reason","_loop_2","this_2","msgId","msg","isUserAct","messageId","AiUserActionablePrefix","AiNonUserActionablePrefix","diagnosticText","sanitizeDiagnosticText","text","dataType","AIInternalMessagePrefix","enableDebugExceptions","consoleLoggingLevel","telemetryLoggingLevel","maxInternalMessageLimit","queue","_messageCount","_messageLogged","loggingLevelConsole","loggingLevelTelemetry","maxMessageLimit","severity","messageKey","warnToConsole","logInternalMessage","console","warn","log","resetInternalMessageCount","_areInternalMessagesThrottled","logMessage","throttleLimitMessage","throttleMessage","MessageLimitPerPVExceeded","BrowserDoesNotSupportLocalStorage","CannotSendEmptyTelemetry","ClientPerformanceMathError","ErrorParsingAISessionCookie","ErrorPVCalc","ExceptionWhileLoggingError","FailedAddingTelemetryToBuffer","FailedMonitorAjaxAbort","FailedMonitorAjaxDur","FailedMonitorAjaxOpen","FailedMonitorAjaxRSC","FailedMonitorAjaxSend","FailedMonitorAjaxGetCorrelationHeader","FailedToAddHandlerForOnBeforeUnload","FailedToSendQueuedTelemetry","FailedToReportDataLoss","FlushFailed","MissingRequiredFieldSpecification","NavigationTimingNotSupported","OnError","SessionRenewalDateIsZero","SenderNotInitialized","StartTrackEventFailed","StopTrackEventFailed","StartTrackFailed","StopTrackFailed","TelemetrySampledAndNotSent","TrackEventFailed","TrackExceptionFailed","TrackMetricFailed","TrackPVFailed","TrackPVFailedCalc","TrackTraceFailed","TransmissionFailed","FailedToSetStorageBuffer","FailedToRestoreStorageBuffer","InvalidBackendResponse","FailedToFixDepricatedValues","InvalidDurationValue","TelemetryEnvelopeInvalid","CreateEnvelopeError","CannotSerializeObject","CannotSerializeObjectNonSerializable","CircularReferenceDetected","ClearAuthContextFailed","IllegalCharsInName","ItemNotInArray","MaxAjaxPerPVExceeded","SampleRateOutOfRange","SetAuthContextFailed","SetAuthContextFailedAccountName","StartCalledMoreThanOnce","StopCalledWithoutStart","TelemetryInitializerFailed","TrackArgumentsNotSpecified","SessionStorageBufferFull","requestContextHeader","requestContextAppIdFormat","requestIdHeader","sdkContextHeader","sdkContextHeaderAppIdRequest","requestContextHeaderLowerCase","Domain_1","applicationinsights_channel_js_1","ApplicationInsights","instrumentationKey","Error","initialize","core","extensions","appInsightsChannel","Sender","track","item","webpackEmptyContext","req","code","resolve","_isInitialized","_extensions","_channelController","ChannelController","_notificationManager","extensionConfig","forEach","extension","validationError","isValid_1","_a","concat","sort","extA","extB","typeExtA","processTelemetry","typeExtB","priority","ext","identifier","idx","curr","ChannelControllerPriority","setNextPlugin","getTransmissionControls","ChannelControls","telemetryItem","_notifiyInvalidEvent","baseData","baseType","timestamp","_validateTelmetryItem","pollInternalLogs","diagnosticLoggingInterval","setInterval","channelQueue","queues","configurable","channels","queueItem","arr","plugin","Sender_1","SendBuffer_1","EnvelopeCreator_1","EventValidator_1","TraceValidator_1","ExceptionValidator_1","MetricValidator_1","PageViewPerformanceValidator_1","PageViewValidator_1","RemoteDepdencyValidator_1","Serializer_1","applicationinsights_common_1","applicationinsights_core_js_2","Offline_1","_XMLHttpRequestSupported","pause","resume","flush","triggerSend","_logger","CRITICAL","teardown","_serializer","Serializer","_consecutiveErrors","_retryAt","_lastSend","_config","_getDefaultAppInsightsChannelConfig","_sender","_buffer","enableSessionStorageBuffer","SessionStorageSendBuffer","ArraySendBuffer","isBeaconApiDisabled","_beaconSender","XMLHttpRequest","_xhrSender","XDomainRequest","_xdrSender","disableTelemetry","_validate","aiEnvelope","_constructEnvelope","payload","serialize","bufferPayload","getItems","batch","batchPayloads","maxBatchSizeInBytes","enqueue","_setupTimer","_nextPlugin","next","_xhrReadyStateChange","xhr","countOfItemsInPayload","readyState","response","_appId","_parseResponse","responseText","appId","status","isRetryDisabled","_isRetriable","_resendPayload","_onError","_formatErrorMessageXhr","Offline","isOffline","_onPartialSuccess","_onSuccess","async","clear","count","clearTimeout","_timeoutHandle","event","clearSent","results","failed","retry","_i","errors_1","errors","reverse","extracted","statusCode","itemsAccepted","itemsReceived","join","_xdrOnLoad","xdr","_formatErrorMessageXdr","envelope","EventEnvelopeCreator","Create","TraceEnvelopeCreator","PageViewEnvelopeCreator","PageViewPerformanceEnvelopeCreator","ExceptionEnvelopeCreator","MetricEnvelopeCreator","DependencyEnvelopeCreator","resultConfig","pluginConfig","emitLineDelimitedJson","maxBatchInterval","EventValidator","Validate","TraceValidator","ExceptionValidator","MetricValidator","PageViewValidator","PageViewPerformanceValidator","RemoteDepdencyValidator","isAsync","plainTextBatch","Blob","type","markAsSent","open","setRequestHeader","onreadystatechange","onerror","send","parse","linearFactor","payload_1","_setRetryTime","delayInSeconds","backOffSlot","pow","backOffDelay","max","retryAfterTimeSpan","retryInterval","timerValue","onload","hostingProtocol","lastIndexOf","_bufferFullMessageSent","bufferItems","getBuffer","BUFFER_KEY","notDeliveredItems","SENT_BUFFER_KEY","MAX_BUFFER_SIZE","setBuffer","removePayloadsFromBuffer","sentElements","payloads","buffer","remaining","contains","j","bufferJson","MetricData_1","DataPoint_1","aiDataContract","Required","metrics","Default","dataPoint","DataPoint","envelopeType","MetricData","arguments","kind","stdDev","DataPointType_1","DataPointType","Measurement","time","iKey","sampleRate","Hidden","tags","StackFrame_1","ExceptionData_1","ExceptionDetails_1","severityLevel","exceptions","_ExceptionDetails","CreateSimpleException","typeName","assembly","fileName","details","line","hasFullStack","ExceptionData","outerId","parsedStack","parseStack","frames","level","totalSizeInBytes","frame","_StackFrame","regex","parsedFrame","sizeInBytes","left","right","size","acceptedLeft","acceptedRight","howMany","ExceptionDetails","matches","match","baseSize","StackFrame","durationMs","duration","Util_2","commandName","success","resultCode","dependencyKind","dependencySource","dependencyTypeName","dependencyFields","MessageData_1","MessageData","PageViewPerfData_1","unused","perfTotal","networkConnect","sentRequest","receivedResponse","domProcessing","isValid","getPerformanceTiming","total","getDuration","loadEventEnd","network","connectEnd","request","requestStart","responseStart","responseEnd","dom","shouldCollectDuration","getIsValid","getDurationMs","isPerformanceTimingSupported","isPerformanceTimingDataReady","domainLookupStart","domLoading","durations","botAgentNames","isGoogleBot","i_1","MAX_DURATION_ALLOWED","PageViewPerfData","applicationVersion","applicationBuild","applicationTypeId","applicationId","applicationLayer","deviceId","deviceIp","deviceLanguage","deviceLocale","deviceModel","deviceFriendlyName","deviceNetwork","deviceNetworkName","deviceOEMName","deviceOS","deviceOSVersion","deviceRoleInstance","deviceRoleName","deviceScreenResolution","deviceType","deviceMachineName","deviceVMName","deviceBrowser","deviceBrowserVersion","locationIp","locationCountry","locationProvince","locationCity","operationId","operationName","operationParentId","operationRootId","operationSyntheticSource","operationCorrelationVector","sessionId","sessionIsFirst","sessionIsNew","userAccountAcquisitionDate","userAccountId","userId","userStoreRegion","userAuthUserId","userAnonymousUserAcquisitionDate","userAuthenticatedUserAcquisitionDate","cloudName","cloudRole","cloudRoleVer","cloudRoleInstance","cloudEnvironment","cloudLocation","cloudDeploymentUnit","internalSdkVersion","internalAgentVersion","internalNodeName","envelopeName","customProperties","systemProperties","ctx","EnvelopeCreator","extractProperties","extractPropsAndMeasurements","createEnvelope","iKeyNoDashes","tag","customMeasurements","bd","command","average","sampleCount","uri","refUri","pageType","isLoggedIn","pageTags","_validateExceptions","output","_serializeObject","source","_serializeStringMap","_serializeArray","contract","isRequired","isHidden","isPresent","isObject","sources","expectedType","parseFloat","OfflineListener","_onlineStatus","_setOnline","_setOffline","isListening","body","ononline","onoffline","isOnline","onLine"],"mappings":"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","file":"./aisdklite.0.0.3.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 16);\n","define([\"require\", \"exports\", \"./Enums\", \"applicationinsights-core-js\", \"./RequestResponseHeaders\", \"./Telemetry/Common/DataSanitizer\"], function (require, exports, Enums_1, applicationinsights_core_js_1, RequestResponseHeaders_1, DataSanitizer_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Util = /** @class */ (function () {\r\n        function Util() {\r\n        }\r\n        /*\r\n         * Force the SDK not to use local and session storage\r\n        */\r\n        Util.disableStorage = function () {\r\n            Util._canUseLocalStorage = false;\r\n            Util._canUseSessionStorage = false;\r\n        };\r\n        /**\r\n         * Gets the localStorage object if available\r\n         * @return {Storage} - Returns the storage object if available else returns null\r\n         */\r\n        Util._getLocalStorageObject = function () {\r\n            if (Util.canUseLocalStorage()) {\r\n                return Util._getVerifiedStorageObject(Enums_1.StorageType.LocalStorage);\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Tests storage object (localStorage or sessionStorage) to verify that it is usable\r\n         * More details here: https://mathiasbynens.be/notes/localstorage-pattern\r\n         * @param storageType Type of storage\r\n         * @return {Storage} Returns storage object verified that it is usable\r\n         */\r\n        Util._getVerifiedStorageObject = function (storageType) {\r\n            var storage = null;\r\n            var fail;\r\n            var uid;\r\n            try {\r\n                uid = new Date;\r\n                storage = storageType === Enums_1.StorageType.LocalStorage ? window.localStorage : window.sessionStorage;\r\n                storage.setItem(uid, uid);\r\n                fail = storage.getItem(uid) != uid;\r\n                storage.removeItem(uid);\r\n                if (fail) {\r\n                    storage = null;\r\n                }\r\n            }\r\n            catch (exception) {\r\n                storage = null;\r\n            }\r\n            return storage;\r\n        };\r\n        /**\r\n         *  Checks if endpoint URL is application insights internal injestion service URL.\r\n         *\r\n         *  @param endpointUrl Endpoint URL to check.\r\n         *  @returns {boolean} True if if endpoint URL is application insights internal injestion service URL.\r\n         */\r\n        Util.isInternalApplicationInsightsEndpoint = function (endpointUrl) {\r\n            return Util._internalEndpoints.indexOf(endpointUrl.toLowerCase()) !== -1;\r\n        };\r\n        /**\r\n         *  Check if the browser supports local storage.\r\n         *\r\n         *  @returns {boolean} True if local storage is supported.\r\n         */\r\n        Util.canUseLocalStorage = function () {\r\n            if (Util._canUseLocalStorage === undefined) {\r\n                Util._canUseLocalStorage = !!Util._getVerifiedStorageObject(Enums_1.StorageType.LocalStorage);\r\n            }\r\n            return Util._canUseLocalStorage;\r\n        };\r\n        /**\r\n         *  Get an object from the browser's local storage\r\n         *\r\n         *  @param {string} name - the name of the object to get from storage\r\n         *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n         */\r\n        Util.getStorage = function (logger, name) {\r\n            var storage = Util._getLocalStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    return storage.getItem(name);\r\n                }\r\n                catch (e) {\r\n                    Util._canUseLocalStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserCannotReadLocalStorage, \"Browser failed read of local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         *  Set the contents of an object in the browser's local storage\r\n         *\r\n         *  @param {string} name - the name of the object to set in storage\r\n         *  @param {string} data - the contents of the object to set in storage\r\n         *  @returns {boolean} True if the storage object could be written.\r\n         */\r\n        Util.setStorage = function (logger, name, data) {\r\n            var storage = Util._getLocalStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.setItem(name, data);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseLocalStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserCannotWriteLocalStorage, \"Browser failed write to local storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         *  Remove an object from the browser's local storage\r\n         *\r\n         *  @param {string} name - the name of the object to remove from storage\r\n         *  @returns {boolean} True if the storage object could be removed.\r\n         */\r\n        Util.removeStorage = function (logger, name) {\r\n            var storage = Util._getLocalStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.removeItem(name);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseLocalStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserFailedRemovalFromLocalStorage, \"Browser failed removal of local storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         * Gets the sessionStorage object if available\r\n         * @return {Storage} - Returns the storage object if available else returns null\r\n         */\r\n        Util._getSessionStorageObject = function () {\r\n            if (Util.canUseSessionStorage()) {\r\n                return Util._getVerifiedStorageObject(Enums_1.StorageType.SessionStorage);\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         *  Check if the browser supports session storage.\r\n         *\r\n         *  @returns {boolean} True if session storage is supported.\r\n         */\r\n        Util.canUseSessionStorage = function () {\r\n            if (Util._canUseSessionStorage === undefined) {\r\n                Util._canUseSessionStorage = !!Util._getVerifiedStorageObject(Enums_1.StorageType.SessionStorage);\r\n            }\r\n            return Util._canUseSessionStorage;\r\n        };\r\n        /**\r\n         *  Gets the list of session storage keys\r\n         *\r\n         *  @returns {string[]} List of session storage keys\r\n         */\r\n        Util.getSessionStorageKeys = function () {\r\n            var keys = [];\r\n            if (Util.canUseSessionStorage()) {\r\n                for (var key in window.sessionStorage) {\r\n                    keys.push(key);\r\n                }\r\n            }\r\n            return keys;\r\n        };\r\n        /**\r\n         *  Get an object from the browser's session storage\r\n         *\r\n         *  @param {string} name - the name of the object to get from storage\r\n         *  @returns {string} The contents of the storage object with the given name. Null if storage is not supported.\r\n         */\r\n        Util.getSessionStorage = function (logger, name) {\r\n            var storage = Util._getSessionStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    return storage.getItem(name);\r\n                }\r\n                catch (e) {\r\n                    Util._canUseSessionStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserCannotReadSessionStorage, \"Browser failed read of session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         *  Set the contents of an object in the browser's session storage\r\n         *\r\n         *  @param {string} name - the name of the object to set in storage\r\n         *  @param {string} data - the contents of the object to set in storage\r\n         *  @returns {boolean} True if the storage object could be written.\r\n         */\r\n        Util.setSessionStorage = function (logger, name, data) {\r\n            var storage = Util._getSessionStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.setItem(name, data);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseSessionStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserCannotWriteSessionStorage, \"Browser failed write to session storage. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /**\r\n         *  Remove an object from the browser's session storage\r\n         *\r\n         *  @param {string} name - the name of the object to remove from storage\r\n         *  @returns {boolean} True if the storage object could be removed.\r\n         */\r\n        Util.removeSessionStorage = function (logger, name) {\r\n            var storage = Util._getSessionStorageObject();\r\n            if (storage !== null) {\r\n                try {\r\n                    storage.removeItem(name);\r\n                    return true;\r\n                }\r\n                catch (e) {\r\n                    Util._canUseSessionStorage = false;\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.BrowserFailedRemovalFromSessionStorage, \"Browser failed removal of session storage item. \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        /*\r\n         * Force the SDK not to store and read any data from cookies\r\n         */\r\n        Util.disableCookies = function () {\r\n            Util._canUseCookies = false;\r\n        };\r\n        /*\r\n         * helper method to tell if document.cookie object is available\r\n         */\r\n        Util.canUseCookies = function (logger) {\r\n            if (Util._canUseCookies === undefined) {\r\n                Util._canUseCookies = false;\r\n                try {\r\n                    Util._canUseCookies = Util.document.cookie !== undefined;\r\n                }\r\n                catch (e) {\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.CannotAccessCookie, \"Cannot access document.cookie - \" + Util.getExceptionName(e), { exception: Util.dump(e) });\r\n                }\r\n                ;\r\n            }\r\n            return Util._canUseCookies;\r\n        };\r\n        /**\r\n         * helper method to set userId and sessionId cookie\r\n         */\r\n        Util.setCookie = function (logger, name, value, domain) {\r\n            var domainAttrib = \"\";\r\n            var secureAttrib = \"\";\r\n            if (domain) {\r\n                domainAttrib = \";domain=\" + domain;\r\n            }\r\n            if (Util.document.location && Util.document.location.protocol === \"https:\") {\r\n                secureAttrib = \";secure\";\r\n            }\r\n            if (Util.canUseCookies(logger)) {\r\n                Util.document.cookie = name + \"=\" + value + domainAttrib + \";path=/\" + secureAttrib;\r\n            }\r\n        };\r\n        Util.stringToBoolOrDefault = function (str, defaultValue) {\r\n            if (defaultValue === void 0) { defaultValue = false; }\r\n            if (str === undefined || str === null) {\r\n                return defaultValue;\r\n            }\r\n            return str.toString().toLowerCase() === \"true\";\r\n        };\r\n        /**\r\n         * helper method to access userId and sessionId cookie\r\n         */\r\n        Util.getCookie = function (logger, name) {\r\n            if (!Util.canUseCookies(logger)) {\r\n                return;\r\n            }\r\n            var value = \"\";\r\n            if (name && name.length) {\r\n                var cookieName = name + \"=\";\r\n                var cookies = Util.document.cookie.split(\";\");\r\n                for (var i = 0; i < cookies.length; i++) {\r\n                    var cookie = cookies[i];\r\n                    cookie = Util.trim(cookie);\r\n                    if (cookie && cookie.indexOf(cookieName) === 0) {\r\n                        value = cookie.substring(cookieName.length, cookies[i].length);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return value;\r\n        };\r\n        /**\r\n         * Deletes a cookie by setting it's expiration time in the past.\r\n         * @param name - The name of the cookie to delete.\r\n         */\r\n        Util.deleteCookie = function (logger, name) {\r\n            if (Util.canUseCookies(logger)) {\r\n                // Setting the expiration date in the past immediately removes the cookie\r\n                Util.document.cookie = name + \"=;path=/;expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n            }\r\n        };\r\n        /**\r\n         * helper method to trim strings (IE8 does not implement String.prototype.trim)\r\n         */\r\n        Util.trim = function (str) {\r\n            if (typeof str !== \"string\")\r\n                return str;\r\n            return str.replace(/^\\s+|\\s+$/g, \"\");\r\n        };\r\n        /**\r\n         * generate random id string\r\n         */\r\n        Util.newId = function () {\r\n            var base64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\r\n            var result = \"\";\r\n            // tslint:disable-next-line:insecure-random\r\n            var random = Math.random() * 1073741824; //5 symbols in base64, almost maxint\r\n            while (random > 0) {\r\n                var char = base64chars.charAt(random % 64);\r\n                result += char;\r\n                random = Math.floor(random / 64);\r\n            }\r\n            return result;\r\n        };\r\n        /**\r\n         * Check if an object is of type Array\r\n         */\r\n        Util.isArray = function (obj) {\r\n            return Object.prototype.toString.call(obj) === \"[object Array]\";\r\n        };\r\n        /**\r\n         * Check if an object is of type Error\r\n         */\r\n        Util.isError = function (obj) {\r\n            return Object.prototype.toString.call(obj) === \"[object Error]\";\r\n        };\r\n        /**\r\n         * Check if an object is of type Date\r\n         */\r\n        Util.isDate = function (obj) {\r\n            return Object.prototype.toString.call(obj) === \"[object Date]\";\r\n        };\r\n        /**\r\n         * Convert a date to I.S.O. format in IE8\r\n         */\r\n        Util.toISOStringForIE8 = function (date) {\r\n            if (Util.isDate(date)) {\r\n                if (Date.prototype.toISOString) {\r\n                    return date.toISOString();\r\n                }\r\n                else {\r\n                    var pad = function (num) {\r\n                        var r = String(num);\r\n                        if (r.length === 1) {\r\n                            r = \"0\" + r;\r\n                        }\r\n                        return r;\r\n                    };\r\n                    return date.getUTCFullYear()\r\n                        + \"-\" + pad(date.getUTCMonth() + 1)\r\n                        + \"-\" + pad(date.getUTCDate())\r\n                        + \"T\" + pad(date.getUTCHours())\r\n                        + \":\" + pad(date.getUTCMinutes())\r\n                        + \":\" + pad(date.getUTCSeconds())\r\n                        + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\r\n                        + \"Z\";\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Gets IE version if we are running on IE, or null otherwise\r\n         */\r\n        Util.getIEVersion = function (userAgentStr) {\r\n            if (userAgentStr === void 0) { userAgentStr = null; }\r\n            var myNav = userAgentStr ? userAgentStr.toLowerCase() : navigator.userAgent.toLowerCase();\r\n            return (myNav.indexOf('msie') != -1) ? parseInt(myNav.split('msie')[1]) : null;\r\n        };\r\n        /**\r\n         * Convert ms to c# time span format\r\n         */\r\n        Util.msToTimeSpan = function (totalms) {\r\n            if (isNaN(totalms) || totalms < 0) {\r\n                totalms = 0;\r\n            }\r\n            totalms = Math.round(totalms);\r\n            var ms = \"\" + totalms % 1000;\r\n            var sec = \"\" + Math.floor(totalms / 1000) % 60;\r\n            var min = \"\" + Math.floor(totalms / (1000 * 60)) % 60;\r\n            var hour = \"\" + Math.floor(totalms / (1000 * 60 * 60)) % 24;\r\n            var days = Math.floor(totalms / (1000 * 60 * 60 * 24));\r\n            ms = ms.length === 1 ? \"00\" + ms : ms.length === 2 ? \"0\" + ms : ms;\r\n            sec = sec.length < 2 ? \"0\" + sec : sec;\r\n            min = min.length < 2 ? \"0\" + min : min;\r\n            hour = hour.length < 2 ? \"0\" + hour : hour;\r\n            return (days > 0 ? days + \".\" : \"\") + hour + \":\" + min + \":\" + sec + \".\" + ms;\r\n        };\r\n        /**\r\n        * Checks if error has no meaningful data inside. Ususally such errors are received by window.onerror when error\r\n        * happens in a script from other domain (cross origin, CORS).\r\n        */\r\n        Util.isCrossOriginError = function (message, url, lineNumber, columnNumber, error) {\r\n            return (message === \"Script error.\" || message === \"Script error\") && !error;\r\n        };\r\n        /**\r\n        * Returns string representation of an object suitable for diagnostics logging.\r\n        */\r\n        Util.dump = function (object) {\r\n            var objectTypeDump = Object.prototype.toString.call(object);\r\n            var propertyValueDump = JSON.stringify(object);\r\n            if (objectTypeDump === \"[object Error]\") {\r\n                propertyValueDump = \"{ stack: '\" + object.stack + \"', message: '\" + object.message + \"', name: '\" + object.name + \"'\";\r\n            }\r\n            return objectTypeDump + propertyValueDump;\r\n        };\r\n        /**\r\n        * Returns the name of object if it's an Error. Otherwise, returns empty string.\r\n        */\r\n        Util.getExceptionName = function (object) {\r\n            var objectTypeDump = Object.prototype.toString.call(object);\r\n            if (objectTypeDump === \"[object Error]\") {\r\n                return object.name;\r\n            }\r\n            return \"\";\r\n        };\r\n        /**\r\n         * Adds an event handler for the specified event\r\n         * @param eventName {string} - The name of the event\r\n         * @param callback {any} - The callback function that needs to be executed for the given event\r\n         * @return {boolean} - true if the handler was successfully added\r\n         */\r\n        Util.addEventHandler = function (eventName, callback) {\r\n            if (!window || typeof eventName !== 'string' || typeof callback !== 'function') {\r\n                return false;\r\n            }\r\n            // Create verb for the event\r\n            var verbEventName = 'on' + eventName;\r\n            // check if addEventListener is available\r\n            if (window.addEventListener) {\r\n                window.addEventListener(eventName, callback, false);\r\n            }\r\n            else if (window[\"attachEvent\"]) {\r\n                window[\"attachEvent\"](verbEventName, callback);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n         * Tells if a browser supports a Beacon API\r\n         */\r\n        Util.IsBeaconApiSupported = function () {\r\n            return ('sendBeacon' in navigator && navigator.sendBeacon);\r\n        };\r\n        Util.document = typeof document !== \"undefined\" ? document : {};\r\n        Util._canUseCookies = undefined;\r\n        Util._canUseLocalStorage = undefined;\r\n        Util._canUseSessionStorage = undefined;\r\n        // listing only non-geo specific locations \r\n        Util._internalEndpoints = [\r\n            \"https://dc.services.visualstudio.com/v2/track\",\r\n            \"https://breeze.aimon.applicationinsights.io/v2/track\",\r\n            \"https://dc-int.services.visualstudio.com/v2/track\"\r\n        ];\r\n        Util.NotSpecified = \"not_specified\";\r\n        return Util;\r\n    }());\r\n    exports.Util = Util;\r\n    var UrlHelper = /** @class */ (function () {\r\n        function UrlHelper() {\r\n        }\r\n        UrlHelper.parseUrl = function (url) {\r\n            if (!UrlHelper.htmlAnchorElement) {\r\n                UrlHelper.htmlAnchorElement = !!UrlHelper.document.createElement ? UrlHelper.document.createElement('a') : {};\r\n            }\r\n            UrlHelper.htmlAnchorElement.href = url;\r\n            return UrlHelper.htmlAnchorElement;\r\n        };\r\n        UrlHelper.getAbsoluteUrl = function (url) {\r\n            var result;\r\n            var a = UrlHelper.parseUrl(url);\r\n            if (a) {\r\n                result = a.href;\r\n            }\r\n            return result;\r\n        };\r\n        UrlHelper.getPathName = function (url) {\r\n            var result;\r\n            var a = UrlHelper.parseUrl(url);\r\n            if (a) {\r\n                result = a.pathname;\r\n            }\r\n            return result;\r\n        };\r\n        UrlHelper.getCompleteUrl = function (method, absoluteUrl) {\r\n            if (method) {\r\n                return method.toUpperCase() + \" \" + absoluteUrl;\r\n            }\r\n            else {\r\n                return absoluteUrl;\r\n            }\r\n        };\r\n        UrlHelper.document = typeof document !== \"undefined\" ? document : {};\r\n        return UrlHelper;\r\n    }());\r\n    exports.UrlHelper = UrlHelper;\r\n    var CorrelationIdHelper = /** @class */ (function () {\r\n        function CorrelationIdHelper() {\r\n        }\r\n        /**\r\n        * Checks if a request url is not on a excluded domain list and if it is safe to add correlation headers\r\n        */\r\n        CorrelationIdHelper.canIncludeCorrelationHeader = function (config, requestUrl, currentHost) {\r\n            if (config && config.disableCorrelationHeaders) {\r\n                return false;\r\n            }\r\n            if (!requestUrl) {\r\n                return false;\r\n            }\r\n            var requestHost = UrlHelper.parseUrl(requestUrl).host.toLowerCase();\r\n            if ((!config || !config.enableCorsCorrelation) && requestHost !== currentHost) {\r\n                return false;\r\n            }\r\n            var excludedDomains = config && config.correlationHeaderExcludedDomains;\r\n            if (!excludedDomains || excludedDomains.length == 0) {\r\n                return true;\r\n            }\r\n            for (var i = 0; i < excludedDomains.length; i++) {\r\n                var regex = new RegExp(excludedDomains[i].toLowerCase().replace(/\\./g, \"\\.\").replace(/\\*/g, \".*\"));\r\n                if (regex.test(requestHost)) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        /**\r\n        * Combines target appId and target role name from response header.\r\n        */\r\n        CorrelationIdHelper.getCorrelationContext = function (responseHeader) {\r\n            if (responseHeader) {\r\n                var correlationId = CorrelationIdHelper.getCorrelationContextValue(responseHeader, RequestResponseHeaders_1.RequestHeaders.requestContextTargetKey);\r\n                if (correlationId && correlationId !== CorrelationIdHelper.correlationIdPrefix) {\r\n                    return correlationId;\r\n                }\r\n            }\r\n        };\r\n        /**\r\n        * Gets key from correlation response header\r\n        */\r\n        CorrelationIdHelper.getCorrelationContextValue = function (responseHeader, key) {\r\n            if (responseHeader) {\r\n                var keyValues = responseHeader.split(\",\");\r\n                for (var i = 0; i < keyValues.length; ++i) {\r\n                    var keyValue = keyValues[i].split(\"=\");\r\n                    if (keyValue.length == 2 && keyValue[0] == key) {\r\n                        return keyValue[1];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        CorrelationIdHelper.correlationIdPrefix = \"cid-v1:\";\r\n        return CorrelationIdHelper;\r\n    }());\r\n    exports.CorrelationIdHelper = CorrelationIdHelper;\r\n    var AjaxHelper = /** @class */ (function () {\r\n        function AjaxHelper() {\r\n        }\r\n        AjaxHelper.ParseDependencyPath = function (logger, absoluteUrl, method, pathName) {\r\n            var target, name;\r\n            if (absoluteUrl && absoluteUrl.length > 0) {\r\n                var parsedUrl = UrlHelper.parseUrl(absoluteUrl);\r\n                target = parsedUrl.host;\r\n                if (parsedUrl.pathname != null) {\r\n                    var pathName = (parsedUrl.pathname.length === 0) ? \"/\" : parsedUrl.pathname;\r\n                    if (pathName.charAt(0) !== '/') {\r\n                        pathName = \"/\" + pathName;\r\n                    }\r\n                    name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, method ? method + \" \" + pathName : pathName);\r\n                }\r\n                else {\r\n                    name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, absoluteUrl);\r\n                }\r\n            }\r\n            else {\r\n                target = pathName;\r\n                name = pathName;\r\n            }\r\n            return {\r\n                target: target,\r\n                name: name\r\n            };\r\n        };\r\n        return AjaxHelper;\r\n    }());\r\n    exports.AjaxHelper = AjaxHelper;\r\n    /**\r\n     * A utility class that helps getting time related parameters\r\n     */\r\n    var DateTimeUtils = /** @class */ (function () {\r\n        function DateTimeUtils() {\r\n        }\r\n        /**\r\n         * Get the number of milliseconds since 1970/01/01 in local timezone\r\n         */\r\n        DateTimeUtils.Now = (window.performance && window.performance.now && window.performance.timing) ?\r\n            function () {\r\n                return window.performance.now() + window.performance.timing.navigationStart;\r\n            }\r\n            :\r\n                function () {\r\n                    return new Date().getTime();\r\n                };\r\n        /**\r\n         * Gets duration between two timestamps\r\n         */\r\n        DateTimeUtils.GetDuration = function (start, end) {\r\n            var result = null;\r\n            if (start !== 0 && end !== 0 && !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(start) && !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(end)) {\r\n                result = end - start;\r\n            }\r\n            return result;\r\n        };\r\n        return DateTimeUtils;\r\n    }());\r\n    exports.DateTimeUtils = DateTimeUtils;\r\n});\r\n//# sourceMappingURL=Util.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n    * Type of storage to differentiate between local storage and session storage\r\n    */\r\n    var StorageType;\r\n    (function (StorageType) {\r\n        StorageType[StorageType[\"LocalStorage\"] = 0] = \"LocalStorage\";\r\n        StorageType[StorageType[\"SessionStorage\"] = 1] = \"SessionStorage\";\r\n    })(StorageType = exports.StorageType || (exports.StorageType = {}));\r\n    /**\r\n     * Enum is used in aiDataContract to describe how fields are serialized.\r\n     * For instance: (Fieldtype.Required | FieldType.Array) will mark the field as required and indicate it's an array\r\n     */\r\n    var FieldType;\r\n    (function (FieldType) {\r\n        FieldType[FieldType[\"Default\"] = 0] = \"Default\";\r\n        FieldType[FieldType[\"Required\"] = 1] = \"Required\";\r\n        FieldType[FieldType[\"Array\"] = 2] = \"Array\";\r\n        FieldType[FieldType[\"Hidden\"] = 4] = \"Hidden\";\r\n    })(FieldType = exports.FieldType || (exports.FieldType = {}));\r\n    ;\r\n});\r\n//# sourceMappingURL=Enums.js.map","define([\"require\", \"exports\", \"applicationinsights-core-js\", \"../../Util\"], function (require, exports, applicationinsights_core_js_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var DataSanitizer = /** @class */ (function () {\r\n        function DataSanitizer() {\r\n        }\r\n        DataSanitizer.sanitizeKeyAndAddUniqueness = function (logger, key, map) {\r\n            var origLength = key.length;\r\n            var field = DataSanitizer.sanitizeKey(logger, key);\r\n            // validation truncated the length.  We need to add uniqueness\r\n            if (field.length !== origLength) {\r\n                var i = 0;\r\n                var uniqueField = field;\r\n                while (map[uniqueField] !== undefined) {\r\n                    i++;\r\n                    uniqueField = field.substring(0, DataSanitizer.MAX_NAME_LENGTH - 3) + DataSanitizer.padNumber(i);\r\n                }\r\n                field = uniqueField;\r\n            }\r\n            return field;\r\n        };\r\n        DataSanitizer.sanitizeKey = function (logger, name) {\r\n            if (name) {\r\n                // Remove any leading or trailing whitepace\r\n                name = Util_1.Util.trim(name.toString());\r\n                // truncate the string to 150 chars\r\n                if (name.length > DataSanitizer.MAX_NAME_LENGTH) {\r\n                    name = name.substring(0, DataSanitizer.MAX_NAME_LENGTH);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.NameTooLong, \"name is too long.  It has been truncated to \" + DataSanitizer.MAX_NAME_LENGTH + \" characters.\", { name: name }, true);\r\n                }\r\n            }\r\n            return name;\r\n        };\r\n        DataSanitizer.sanitizeString = function (logger, value, maxLength) {\r\n            if (maxLength === void 0) { maxLength = DataSanitizer.MAX_STRING_LENGTH; }\r\n            if (value) {\r\n                maxLength = maxLength ? maxLength : DataSanitizer.MAX_STRING_LENGTH; // in case default parameters dont work\r\n                value = Util_1.Util.trim(value);\r\n                if (value.toString().length > maxLength) {\r\n                    value = value.toString().substring(0, maxLength);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.StringValueTooLong, \"string value is too long. It has been truncated to \" + maxLength + \" characters.\", { value: value }, true);\r\n                }\r\n            }\r\n            return value;\r\n        };\r\n        DataSanitizer.sanitizeUrl = function (logger, url) {\r\n            return DataSanitizer.sanitizeInput(logger, url, DataSanitizer.MAX_URL_LENGTH, applicationinsights_core_js_1._InternalMessageId.UrlTooLong);\r\n        };\r\n        DataSanitizer.sanitizeMessage = function (logger, message) {\r\n            if (message) {\r\n                if (message.length > DataSanitizer.MAX_MESSAGE_LENGTH) {\r\n                    message = message.substring(0, DataSanitizer.MAX_MESSAGE_LENGTH);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.MessageTruncated, \"message is too long, it has been truncated to \" + DataSanitizer.MAX_MESSAGE_LENGTH + \" characters.\", { message: message }, true);\r\n                }\r\n            }\r\n            return message;\r\n        };\r\n        DataSanitizer.sanitizeException = function (logger, exception) {\r\n            if (exception) {\r\n                if (exception.length > DataSanitizer.MAX_EXCEPTION_LENGTH) {\r\n                    exception = exception.substring(0, DataSanitizer.MAX_EXCEPTION_LENGTH);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.ExceptionTruncated, \"exception is too long, it has been truncated to \" + DataSanitizer.MAX_EXCEPTION_LENGTH + \" characters.\", { exception: exception }, true);\r\n                }\r\n            }\r\n            return exception;\r\n        };\r\n        DataSanitizer.sanitizeProperties = function (logger, properties) {\r\n            if (properties) {\r\n                var tempProps = {};\r\n                for (var prop in properties) {\r\n                    var value = DataSanitizer.sanitizeString(logger, properties[prop], DataSanitizer.MAX_PROPERTY_LENGTH);\r\n                    prop = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, prop, tempProps);\r\n                    tempProps[prop] = value;\r\n                }\r\n                properties = tempProps;\r\n            }\r\n            return properties;\r\n        };\r\n        DataSanitizer.sanitizeMeasurements = function (logger, measurements) {\r\n            if (measurements) {\r\n                var tempMeasurements = {};\r\n                for (var measure in measurements) {\r\n                    var value = measurements[measure];\r\n                    measure = DataSanitizer.sanitizeKeyAndAddUniqueness(logger, measure, tempMeasurements);\r\n                    tempMeasurements[measure] = value;\r\n                }\r\n                measurements = tempMeasurements;\r\n            }\r\n            return measurements;\r\n        };\r\n        DataSanitizer.sanitizeId = function (logger, id) {\r\n            return id ? DataSanitizer.sanitizeInput(logger, id, DataSanitizer.MAX_ID_LENGTH, applicationinsights_core_js_1._InternalMessageId.IdTooLong).toString() : id;\r\n        };\r\n        DataSanitizer.sanitizeInput = function (logger, input, maxLength, _msgId) {\r\n            if (input) {\r\n                input = Util_1.Util.trim(input);\r\n                if (input.length > maxLength) {\r\n                    input = input.substring(0, maxLength);\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, _msgId, \"input is too long, it has been truncated to \" + maxLength + \" characters.\", { data: input }, true);\r\n                }\r\n            }\r\n            return input;\r\n        };\r\n        DataSanitizer.padNumber = function (num) {\r\n            var s = \"00\" + num;\r\n            return s.substr(s.length - 3);\r\n        };\r\n        /**\r\n        * Max length allowed for custom names.\r\n        */\r\n        DataSanitizer.MAX_NAME_LENGTH = 150;\r\n        /**\r\n         * Max length allowed for Id field in page views.\r\n         */\r\n        DataSanitizer.MAX_ID_LENGTH = 128;\r\n        /**\r\n         * Max length allowed for custom values.\r\n         */\r\n        DataSanitizer.MAX_PROPERTY_LENGTH = 8192;\r\n        /**\r\n         * Max length allowed for names\r\n         */\r\n        DataSanitizer.MAX_STRING_LENGTH = 1024;\r\n        /**\r\n         * Max length allowed for url.\r\n         */\r\n        DataSanitizer.MAX_URL_LENGTH = 2048;\r\n        /**\r\n         * Max length allowed for messages.\r\n         */\r\n        DataSanitizer.MAX_MESSAGE_LENGTH = 32768;\r\n        /**\r\n         * Max length allowed for exceptions.\r\n         */\r\n        DataSanitizer.MAX_EXCEPTION_LENGTH = 32768;\r\n        return DataSanitizer;\r\n    }());\r\n    exports.DataSanitizer = DataSanitizer;\r\n});\r\n//# sourceMappingURL=DataSanitizer.js.map","define([\"require\", \"exports\", \"./JavaScriptSDK.Interfaces/IChannelControls\", \"./JavaScriptSDK.Enums/EventsDiscardedReason\", \"./JavaScriptSDK/AppInsightsCore\", \"./JavaScriptSDK/CoreUtils\", \"./JavaScriptSDK/NotificationManager\", \"./JavaScriptSDK/DiagnosticLogger\", \"./JavaScriptSDK.Enums/LoggingEnums\"], function (require, exports, IChannelControls_1, EventsDiscardedReason_1, AppInsightsCore_1, CoreUtils_1, NotificationManager_1, DiagnosticLogger_1, LoggingEnums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MinChannelPriorty = IChannelControls_1.MinChannelPriorty;\r\n    exports.EventsDiscardedReason = EventsDiscardedReason_1.EventsDiscardedReason;\r\n    exports.AppInsightsCore = AppInsightsCore_1.AppInsightsCore;\r\n    exports.CoreUtils = CoreUtils_1.CoreUtils;\r\n    exports.NotificationManager = NotificationManager_1.NotificationManager;\r\n    exports.DiagnosticLogger = DiagnosticLogger_1.DiagnosticLogger;\r\n    exports._InternalLogMessage = DiagnosticLogger_1._InternalLogMessage;\r\n    exports._InternalMessageId = LoggingEnums_1._InternalMessageId;\r\n    exports.LoggingSeverity = LoggingEnums_1.LoggingSeverity;\r\n});\r\n//# sourceMappingURL=applicationinsights-core-js.js.map","// THIS FILE WAS AUTOGENERATED\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * The abstract common base of all domains.\r\n     */\r\n    var Domain = /** @class */ (function () {\r\n        function Domain() {\r\n        }\r\n        return Domain;\r\n    }());\r\n    exports.Domain = Domain;\r\n});\r\n//# sourceMappingURL=Domain.js.map","define([\"require\", \"exports\", \"./Util\", \"./Enums\", \"./RequestResponseHeaders\", \"./Constants\", \"./Interfaces/Contracts/Generated/Data\", \"./Interfaces/Contracts/Generated/Base\", \"./Telemetry/Common/Envelope\", \"./Telemetry/Event\", \"./Telemetry/Exception\", \"./Telemetry/Metric\", \"./Telemetry/PageView\", \"./Interfaces/Contracts/Generated/PageViewData\", \"./Telemetry/RemoteDependencyData\", \"./Telemetry/Trace\", \"./Telemetry/PageViewPerformance\", \"./Telemetry/Common/Data\", \"./Interfaces/Contracts/Generated/SeverityLevel\", \"./Interfaces/Contracts/Generated/ContextTagKeys\", \"./Telemetry/Common/DataSanitizer\", \"./TelemetryItemCreator\"], function (require, exports, Util_1, Enums_1, RequestResponseHeaders_1, Constants_1, Data_1, Base_1, Envelope_1, Event_1, Exception_1, Metric_1, PageView_1, PageViewData_1, RemoteDependencyData_1, Trace_1, PageViewPerformance_1, Data_2, SeverityLevel_1, ContextTagKeys_1, DataSanitizer_1, TelemetryItemCreator_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Util = Util_1.Util;\r\n    exports.CorrelationIdHelper = Util_1.CorrelationIdHelper;\r\n    exports.UrlHelper = Util_1.UrlHelper;\r\n    exports.DateTimeUtils = Util_1.DateTimeUtils;\r\n    exports.FieldType = Enums_1.FieldType;\r\n    exports.RequestHeaders = RequestResponseHeaders_1.RequestHeaders;\r\n    exports.DisabledPropertyName = Constants_1.DisabledPropertyName;\r\n    exports.AIData = Data_1.Data;\r\n    exports.AIBase = Base_1.Base;\r\n    exports.Envelope = Envelope_1.Envelope;\r\n    exports.Event = Event_1.Event;\r\n    exports.Exception = Exception_1.Exception;\r\n    exports.Metric = Metric_1.Metric;\r\n    exports.PageView = PageView_1.PageView;\r\n    exports.PageViewData = PageViewData_1.PageViewData;\r\n    exports.RemoteDependencyData = RemoteDependencyData_1.RemoteDependencyData;\r\n    exports.Trace = Trace_1.Trace;\r\n    exports.PageViewPerformance = PageViewPerformance_1.PageViewPerformance;\r\n    exports.Data = Data_2.Data;\r\n    exports.SeverityLevel = SeverityLevel_1.SeverityLevel;\r\n    exports.ContextTagKeys = ContextTagKeys_1.ContextTagKeys;\r\n    exports.DataSanitizer = DataSanitizer_1.DataSanitizer;\r\n    exports.TelemetryItemCreator = TelemetryItemCreator_1.TelemetryItemCreator;\r\n});\r\n//# sourceMappingURL=applicationinsights-common.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var CoreUtils = /** @class */ (function () {\r\n        function CoreUtils() {\r\n        }\r\n        CoreUtils.isNullOrUndefined = function (input) {\r\n            return input === null || input === undefined;\r\n        };\r\n        /**\r\n    * Creates a new GUID.\r\n    * @return {string} A GUID.\r\n    */\r\n        CoreUtils.newGuid = function () {\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(GuidRegex, function (c) {\r\n                var r = (Math.random() * 16 | 0), v = (c === 'x' ? r : r & 0x3 | 0x8);\r\n                return v.toString(16);\r\n            });\r\n        };\r\n        return CoreUtils;\r\n    }());\r\n    exports.CoreUtils = CoreUtils;\r\n    var GuidRegex = /[xy]/g;\r\n});\r\n//# sourceMappingURL=CoreUtils.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./EventData\"], function (require, exports, EventData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of PageView represents a generic action on a page like a button click. It is also the base type for PageView.\r\n     */\r\n    var PageViewData = /** @class */ (function (_super) {\r\n        __extends(PageViewData, _super);\r\n        function PageViewData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return PageViewData;\r\n    }(EventData_1.EventData));\r\n    exports.PageViewData = PageViewData;\r\n});\r\n//# sourceMappingURL=PageViewData.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * The EventsDiscardedReason enumeration contains a set of values that specify the reason for discarding an event.\r\n     */\r\n    exports.EventsDiscardedReason = {\r\n        /**\r\n         * Unknown.\r\n         */\r\n        Unknown: 0,\r\n        /**\r\n         * Status set to non-retryable.\r\n         */\r\n        NonRetryableStatus: 1,\r\n        /**\r\n         * The event is invalid.\r\n         */\r\n        InvalidEvent: 2,\r\n        /**\r\n         * The size of the event is too large.\r\n         */\r\n        SizeLimitExceeded: 3,\r\n        /**\r\n         * The server is not accepting events from this instrumentation key.\r\n         */\r\n        KillSwitch: 4,\r\n        /**\r\n         * The event queue is full.\r\n         */\r\n        QueueFull: 5,\r\n    };\r\n});\r\n//# sourceMappingURL=EventsDiscardedReason.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Class to manage sending notifications to all the listeners.\r\n     */\r\n    var NotificationManager = /** @class */ (function () {\r\n        function NotificationManager() {\r\n            this.listeners = [];\r\n        }\r\n        /**\r\n         * Adds a notification listener.\r\n         * @param {INotificationListener} listener - The notification listener to be added.\r\n         */\r\n        NotificationManager.prototype.addNotificationListener = function (listener) {\r\n            this.listeners.push(listener);\r\n        };\r\n        /**\r\n         * Removes all instances of the listener.\r\n         * @param {INotificationListener} listener - AWTNotificationListener to remove.\r\n         */\r\n        NotificationManager.prototype.removeNotificationListener = function (listener) {\r\n            var index = this.listeners.indexOf(listener);\r\n            while (index > -1) {\r\n                this.listeners.splice(index, 1);\r\n                index = this.listeners.indexOf(listener);\r\n            }\r\n        };\r\n        /**\r\n         * Notification for events sent.\r\n         * @param {ITelemetryItem[]} events - The array of events that have been sent.\r\n         */\r\n        NotificationManager.prototype.eventsSent = function (events) {\r\n            var _this = this;\r\n            var _loop_1 = function (i) {\r\n                if (this_1.listeners[i].eventsSent) {\r\n                    setTimeout(function () { return _this.listeners[i].eventsSent(events); }, 0);\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (var i = 0; i < this.listeners.length; ++i) {\r\n                _loop_1(i);\r\n            }\r\n        };\r\n        /**\r\n         * Notification for events being discarded.\r\n         * @param {ITelemetryItem[]} events - The array of events that have been discarded by the SDK.\r\n         * @param {number} reason           - The reason for which the SDK discarded the events. The EventsDiscardedReason\r\n         * constant should be used to check the different values.\r\n         */\r\n        NotificationManager.prototype.eventsDiscarded = function (events, reason) {\r\n            var _this = this;\r\n            var _loop_2 = function (i) {\r\n                if (this_2.listeners[i].eventsDiscarded) {\r\n                    setTimeout(function () { return _this.listeners[i].eventsDiscarded(events, reason); }, 0);\r\n                }\r\n            };\r\n            var this_2 = this;\r\n            for (var i = 0; i < this.listeners.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n        };\r\n        return NotificationManager;\r\n    }());\r\n    exports.NotificationManager = NotificationManager;\r\n});\r\n//# sourceMappingURL=NotificationManager.js.map","define([\"require\", \"exports\", \"../JavaScriptSDK.Enums/LoggingEnums\", \"./CoreUtils\"], function (require, exports, LoggingEnums_1, CoreUtils_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var _InternalLogMessage = /** @class */ (function () {\r\n        function _InternalLogMessage(msgId, msg, isUserAct, properties) {\r\n            if (isUserAct === void 0) { isUserAct = false; }\r\n            this.messageId = msgId;\r\n            this.message =\r\n                (isUserAct ? _InternalLogMessage.AiUserActionablePrefix : _InternalLogMessage.AiNonUserActionablePrefix) +\r\n                    msgId;\r\n            var diagnosticText = (msg ? \" message:\" + _InternalLogMessage.sanitizeDiagnosticText(msg) : \"\") +\r\n                (properties ? \" props:\" + _InternalLogMessage.sanitizeDiagnosticText(JSON.stringify(properties)) : \"\");\r\n            this.message += diagnosticText;\r\n        }\r\n        _InternalLogMessage.sanitizeDiagnosticText = function (text) {\r\n            return \"\\\"\" + text.replace(/\\\"/g, \"\") + \"\\\"\";\r\n        };\r\n        _InternalLogMessage.dataType = \"MessageData\";\r\n        /**\r\n         * For user non actionable traces use AI Internal prefix.\r\n         */\r\n        _InternalLogMessage.AiNonUserActionablePrefix = \"AI (Internal): \";\r\n        /**\r\n         * Prefix of the traces in portal.\r\n         */\r\n        _InternalLogMessage.AiUserActionablePrefix = \"AI: \";\r\n        return _InternalLogMessage;\r\n    }());\r\n    exports._InternalLogMessage = _InternalLogMessage;\r\n    var DiagnosticLogger = /** @class */ (function () {\r\n        function DiagnosticLogger(config) {\r\n            /**\r\n            *  Session storage key for the prefix for the key indicating message type already logged\r\n            */\r\n            this.AIInternalMessagePrefix = \"AITR_\";\r\n            /**\r\n             * When this is true the SDK will throw exceptions to aid in debugging.\r\n             */\r\n            this.enableDebugExceptions = function () { return false; };\r\n            /**\r\n             * 0: OFF\r\n             * 1: CRITICAL (default)\r\n             * 2: >= WARNING\r\n             */\r\n            this.consoleLoggingLevel = function () { return 1; };\r\n            /**\r\n             * 0: OFF (default)\r\n             * 1: CRITICAL\r\n             * 2: >= WARNING\r\n             */\r\n            this.telemetryLoggingLevel = function () { return 0; };\r\n            /**\r\n             * The maximum number of internal messages allowed to be sent per page view\r\n             */\r\n            this.maxInternalMessageLimit = function () { return 25; };\r\n            /**\r\n             * The internal logging queue\r\n             */\r\n            this.queue = [];\r\n            /**\r\n             * Count of internal messages sent\r\n             */\r\n            this._messageCount = 0;\r\n            /**\r\n             * Holds information about what message types were already logged to console or sent to server.\r\n             */\r\n            this._messageLogged = {};\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(config)) {\r\n                // TODO: Use default config\r\n                // config = AppInsightsCore.defaultConfig;\r\n                // For now, use defaults specified in DiagnosticLogger members;\r\n                return;\r\n            }\r\n            if (!CoreUtils_1.CoreUtils.isNullOrUndefined(config.loggingLevelConsole)) {\r\n                this.consoleLoggingLevel = function () { return config.loggingLevelConsole; };\r\n            }\r\n            if (!CoreUtils_1.CoreUtils.isNullOrUndefined(config.loggingLevelTelemetry)) {\r\n                this.telemetryLoggingLevel = function () { return config.loggingLevelTelemetry; };\r\n            }\r\n            if (!CoreUtils_1.CoreUtils.isNullOrUndefined(config.maxMessageLimit)) {\r\n                this.maxInternalMessageLimit = function () { return config.maxMessageLimit; };\r\n            }\r\n            if (!CoreUtils_1.CoreUtils.isNullOrUndefined(config.enableDebugExceptions)) {\r\n                this.enableDebugExceptions = function () { return config.enableDebugExceptions; };\r\n            }\r\n        }\r\n        /**\r\n         * This method will throw exceptions in debug mode or attempt to log the error as a console warning.\r\n         * @param severity {LoggingSeverity} - The severity of the log message\r\n         * @param message {_InternalLogMessage} - The log message.\r\n         */\r\n        DiagnosticLogger.prototype.throwInternal = function (severity, msgId, msg, properties, isUserAct) {\r\n            if (isUserAct === void 0) { isUserAct = false; }\r\n            var message = new _InternalLogMessage(msgId, msg, isUserAct, properties);\r\n            if (this.enableDebugExceptions()) {\r\n                throw message;\r\n            }\r\n            else {\r\n                if (typeof (message) !== \"undefined\" && !!message) {\r\n                    if (typeof (message.message) !== \"undefined\") {\r\n                        if (isUserAct) {\r\n                            // check if this message type was already logged to console for this page view and if so, don't log it again\r\n                            var messageKey = +message.messageId;\r\n                            if (!this._messageLogged[messageKey] || this.consoleLoggingLevel() >= LoggingEnums_1.LoggingSeverity.WARNING) {\r\n                                this.warnToConsole(message.message);\r\n                                this._messageLogged[messageKey] = true;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // don't log internal AI traces in the console, unless the verbose logging is enabled\r\n                            if (this.consoleLoggingLevel() >= LoggingEnums_1.LoggingSeverity.WARNING) {\r\n                                this.warnToConsole(message.message);\r\n                            }\r\n                        }\r\n                        this.logInternalMessage(severity, message);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * This will write a warning to the console if possible\r\n         * @param message {string} - The warning message\r\n         */\r\n        DiagnosticLogger.prototype.warnToConsole = function (message) {\r\n            if (typeof console !== \"undefined\" && !!console) {\r\n                if (typeof console.warn === \"function\") {\r\n                    console.warn(message);\r\n                }\r\n                else if (typeof console.log === \"function\") {\r\n                    console.log(message);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Resets the internal message count\r\n         */\r\n        DiagnosticLogger.prototype.resetInternalMessageCount = function () {\r\n            this._messageCount = 0;\r\n            this._messageLogged = {};\r\n        };\r\n        /**\r\n         * Logs a message to the internal queue.\r\n         * @param severity {LoggingSeverity} - The severity of the log message\r\n         * @param message {_InternalLogMessage} - The message to log.\r\n         */\r\n        DiagnosticLogger.prototype.logInternalMessage = function (severity, message) {\r\n            if (this._areInternalMessagesThrottled()) {\r\n                return;\r\n            }\r\n            // check if this message type was already logged for this session and if so, don't log it again\r\n            var logMessage = true;\r\n            var messageKey = this.AIInternalMessagePrefix + message.messageId;\r\n            // if the session storage is not available, limit to only one message type per page view\r\n            if (this._messageLogged[messageKey]) {\r\n                logMessage = false;\r\n            }\r\n            else {\r\n                this._messageLogged[messageKey] = true;\r\n            }\r\n            if (logMessage) {\r\n                // Push the event in the internal queue\r\n                if (severity <= this.telemetryLoggingLevel()) {\r\n                    this.queue.push(message);\r\n                    this._messageCount++;\r\n                }\r\n                // When throttle limit reached, send a special event\r\n                if (this._messageCount == this.maxInternalMessageLimit()) {\r\n                    var throttleLimitMessage = \"Internal events throttle limit per PageView reached for this app.\";\r\n                    var throttleMessage = new _InternalLogMessage(LoggingEnums_1._InternalMessageId.MessageLimitPerPVExceeded, throttleLimitMessage, false);\r\n                    this.queue.push(throttleMessage);\r\n                    this.warnToConsole(throttleLimitMessage);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Indicates whether the internal events are throttled\r\n         */\r\n        DiagnosticLogger.prototype._areInternalMessagesThrottled = function () {\r\n            return this._messageCount >= this.maxInternalMessageLimit();\r\n        };\r\n        return DiagnosticLogger;\r\n    }());\r\n    exports.DiagnosticLogger = DiagnosticLogger;\r\n});\r\n//# sourceMappingURL=DiagnosticLogger.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var LoggingSeverity;\r\n    (function (LoggingSeverity) {\r\n        /**\r\n         * Error will be sent as internal telemetry\r\n         */\r\n        LoggingSeverity[LoggingSeverity[\"CRITICAL\"] = 1] = \"CRITICAL\";\r\n        /**\r\n         * Error will NOT be sent as internal telemetry, and will only be shown in browser console\r\n         */\r\n        LoggingSeverity[LoggingSeverity[\"WARNING\"] = 2] = \"WARNING\";\r\n    })(LoggingSeverity = exports.LoggingSeverity || (exports.LoggingSeverity = {}));\r\n    /**\r\n     * Internal message ID. Please create a new one for every conceptually different message. Please keep alphabetically ordered\r\n     */ ;\r\n    exports._InternalMessageId = {\r\n        // Non user actionable\r\n        BrowserDoesNotSupportLocalStorage: 0,\r\n        BrowserCannotReadLocalStorage: 1,\r\n        BrowserCannotReadSessionStorage: 2,\r\n        BrowserCannotWriteLocalStorage: 3,\r\n        BrowserCannotWriteSessionStorage: 4,\r\n        BrowserFailedRemovalFromLocalStorage: 5,\r\n        BrowserFailedRemovalFromSessionStorage: 6,\r\n        CannotSendEmptyTelemetry: 7,\r\n        ClientPerformanceMathError: 8,\r\n        ErrorParsingAISessionCookie: 9,\r\n        ErrorPVCalc: 10,\r\n        ExceptionWhileLoggingError: 11,\r\n        FailedAddingTelemetryToBuffer: 12,\r\n        FailedMonitorAjaxAbort: 13,\r\n        FailedMonitorAjaxDur: 14,\r\n        FailedMonitorAjaxOpen: 15,\r\n        FailedMonitorAjaxRSC: 16,\r\n        FailedMonitorAjaxSend: 17,\r\n        FailedMonitorAjaxGetCorrelationHeader: 18,\r\n        FailedToAddHandlerForOnBeforeUnload: 19,\r\n        FailedToSendQueuedTelemetry: 20,\r\n        FailedToReportDataLoss: 21,\r\n        FlushFailed: 22,\r\n        MessageLimitPerPVExceeded: 23,\r\n        MissingRequiredFieldSpecification: 24,\r\n        NavigationTimingNotSupported: 25,\r\n        OnError: 26,\r\n        SessionRenewalDateIsZero: 27,\r\n        SenderNotInitialized: 28,\r\n        StartTrackEventFailed: 29,\r\n        StopTrackEventFailed: 30,\r\n        StartTrackFailed: 31,\r\n        StopTrackFailed: 32,\r\n        TelemetrySampledAndNotSent: 33,\r\n        TrackEventFailed: 34,\r\n        TrackExceptionFailed: 35,\r\n        TrackMetricFailed: 36,\r\n        TrackPVFailed: 37,\r\n        TrackPVFailedCalc: 38,\r\n        TrackTraceFailed: 39,\r\n        TransmissionFailed: 40,\r\n        FailedToSetStorageBuffer: 41,\r\n        FailedToRestoreStorageBuffer: 42,\r\n        InvalidBackendResponse: 43,\r\n        FailedToFixDepricatedValues: 44,\r\n        InvalidDurationValue: 45,\r\n        TelemetryEnvelopeInvalid: 46,\r\n        CreateEnvelopeError: 47,\r\n        // User actionable\r\n        CannotSerializeObject: 48,\r\n        CannotSerializeObjectNonSerializable: 49,\r\n        CircularReferenceDetected: 50,\r\n        ClearAuthContextFailed: 51,\r\n        ExceptionTruncated: 52,\r\n        IllegalCharsInName: 53,\r\n        ItemNotInArray: 54,\r\n        MaxAjaxPerPVExceeded: 55,\r\n        MessageTruncated: 56,\r\n        NameTooLong: 57,\r\n        SampleRateOutOfRange: 58,\r\n        SetAuthContextFailed: 59,\r\n        SetAuthContextFailedAccountName: 60,\r\n        StringValueTooLong: 61,\r\n        StartCalledMoreThanOnce: 62,\r\n        StopCalledWithoutStart: 63,\r\n        TelemetryInitializerFailed: 64,\r\n        TrackArgumentsNotSpecified: 65,\r\n        UrlTooLong: 66,\r\n        SessionStorageBufferFull: 67,\r\n        CannotAccessCookie: 68,\r\n        IdTooLong: 69,\r\n    };\r\n});\r\n//# sourceMappingURL=LoggingEnums.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var RequestHeaders = /** @class */ (function () {\r\n        function RequestHeaders() {\r\n        }\r\n        /**\r\n         * Request-Context header\r\n         */\r\n        RequestHeaders.requestContextHeader = \"Request-Context\";\r\n        /**\r\n         * Target instrumentation header that is added to the response and retrieved by the\r\n         * calling application when processing incoming responses.\r\n         */\r\n        RequestHeaders.requestContextTargetKey = \"appId\";\r\n        /**\r\n         * Request-Context appId format\r\n         */\r\n        RequestHeaders.requestContextAppIdFormat = \"appId=cid-v1:\";\r\n        /**\r\n         * Request-Id header\r\n         */\r\n        RequestHeaders.requestIdHeader = \"Request-Id\";\r\n        /**\r\n         * Sdk-Context header\r\n         * If this header passed with appId in content then appId will be returned back by the backend.\r\n         */\r\n        RequestHeaders.sdkContextHeader = \"Sdk-Context\";\r\n        /**\r\n         * String to pass in header for requesting appId back from the backend.\r\n         */\r\n        RequestHeaders.sdkContextHeaderAppIdRequest = \"appId\";\r\n        RequestHeaders.requestContextHeaderLowerCase = \"request-context\";\r\n        return RequestHeaders;\r\n    }());\r\n    exports.RequestHeaders = RequestHeaders;\r\n});\r\n//# sourceMappingURL=RequestResponseHeaders.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Base\"], function (require, exports, Base_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Data struct to contain both B and C sections.\r\n     */\r\n    var Data = /** @class */ (function (_super) {\r\n        __extends(Data, _super);\r\n        function Data() {\r\n            return _super.call(this) || this;\r\n        }\r\n        return Data;\r\n    }(Base_1.Base));\r\n    exports.Data = Data;\r\n});\r\n//# sourceMappingURL=Data.js.map","// THIS FILE WAS AUTOGENERATED\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n         * Data struct to contain only C section with custom fields.\r\n         */\r\n    var Base = /** @class */ (function () {\r\n        function Base() {\r\n        }\r\n        return Base;\r\n    }());\r\n    exports.Base = Base;\r\n});\r\n//# sourceMappingURL=Base.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Instances of Event represent structured event records that can be grouped and searched by their properties. Event data item also creates a metric of event count by name.\r\n     */\r\n    var EventData = /** @class */ (function (_super) {\r\n        __extends(EventData, _super);\r\n        function EventData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return EventData;\r\n    }(Domain_1.Domain));\r\n    exports.EventData = EventData;\r\n});\r\n//# sourceMappingURL=EventData.js.map","import { IConfiguration, AppInsightsCore, IAppInsightsCore, LoggingSeverity, _InternalMessageId, CoreUtils, ITelemetryItem } from \"applicationinsights-core-js\";\r\nimport { Sender } from \"applicationinsights-channel-js\";\r\n\r\n\"use strict\";\r\n\r\nexport class ApplicationInsights {\r\n    public config: IConfiguration;\r\n    private core: IAppInsightsCore;\r\n\r\n    constructor(config: IConfiguration) {\r\n\r\n        // initialize the queue and config in case they are undefined\r\n        if (CoreUtils.isNullOrUndefined(config) || CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n            throw new Error(\"Invalid input configuration\");\r\n        }\r\n\r\n        this.initialize();\r\n    }\r\n\r\n    public initialize(): void {\r\n\r\n        this.core = new AppInsightsCore();\r\n        let extensions = [];\r\n        let appInsightsChannel: Sender = new Sender();\r\n\r\n        extensions.push(appInsightsChannel);\r\n\r\n        // initialize core\r\n        this.core.initialize(this.config, extensions);\r\n\r\n        // initialize extensions\r\n        appInsightsChannel.initialize(this.config, this.core, extensions);\r\n    }\r\n\r\n    public track(item: ITelemetryItem) {\r\n        this.core.track(item);\r\n    }\r\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 18;","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.MinChannelPriorty = 100;\r\n});\r\n//# sourceMappingURL=IChannelControls.js.map","define([\"require\", \"exports\", \"../JavaScriptSDK.Enums/EventsDiscardedReason\", \"./CoreUtils\", \"./NotificationManager\", \"./DiagnosticLogger\"], function (require, exports, EventsDiscardedReason_1, CoreUtils_1, NotificationManager_1, DiagnosticLogger_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    \"use strict\";\r\n    var AppInsightsCore = /** @class */ (function () {\r\n        function AppInsightsCore() {\r\n            this._isInitialized = false;\r\n            this._extensions = new Array();\r\n            this._channelController = new ChannelController();\r\n        }\r\n        AppInsightsCore.prototype.initialize = function (config, extensions) {\r\n            var _this = this;\r\n            // Make sure core is only initialized once\r\n            if (this._isInitialized) {\r\n                throw Error(\"Core should not be initialized more than once\");\r\n            }\r\n            if (!config || CoreUtils_1.CoreUtils.isNullOrUndefined(config.instrumentationKey)) {\r\n                throw Error(\"Please provide instrumentation key\");\r\n            }\r\n            this.config = config;\r\n            this._notificationManager = new NotificationManager_1.NotificationManager();\r\n            this.config.extensions = CoreUtils_1.CoreUtils.isNullOrUndefined(this.config.extensions) ? [] : this.config.extensions;\r\n            // add notification to the extensions in the config so other plugins can access it\r\n            this.config.extensionConfig = CoreUtils_1.CoreUtils.isNullOrUndefined(this.config.extensionConfig) ? {} : this.config.extensionConfig;\r\n            this.config.extensionConfig.NotificationManager = this._notificationManager;\r\n            this.logger = new DiagnosticLogger_1.DiagnosticLogger(config);\r\n            // Initial validation\r\n            extensions.forEach(function (extension) {\r\n                if (CoreUtils_1.CoreUtils.isNullOrUndefined(extension.initialize)) {\r\n                    throw Error(validationError);\r\n                }\r\n            });\r\n            if (this.config.extensions.length > 0) {\r\n                var isValid_1 = true;\r\n                this.config.extensions.forEach(function (item) {\r\n                    if (CoreUtils_1.CoreUtils.isNullOrUndefined(item)) {\r\n                        isValid_1 = false;\r\n                    }\r\n                });\r\n                if (!isValid_1) {\r\n                    throw Error(validationError);\r\n                }\r\n            }\r\n            // Initial validation complete\r\n            // Concat all available extensions before sorting by priority\r\n            (_a = this._extensions).push.apply(_a, [this._channelController].concat(extensions, this.config.extensions));\r\n            this._extensions = this._extensions.sort(function (a, b) {\r\n                var extA = a;\r\n                var extB = b;\r\n                var typeExtA = typeof extA.processTelemetry;\r\n                var typeExtB = typeof extB.processTelemetry;\r\n                if (typeExtA === 'function' && typeExtB === 'function') {\r\n                    return extA.priority - extB.priority;\r\n                }\r\n                if (typeExtA === 'function' && typeExtB !== 'function') {\r\n                    // keep non telemetryplugin specific extensions at start\r\n                    return 1;\r\n                }\r\n                if (typeExtA !== 'function' && typeExtB === 'function') {\r\n                    return -1;\r\n                }\r\n            });\r\n            // sort complete\r\n            // Check if any two extensions have the same priority, then warn to console\r\n            var priority = {};\r\n            this._extensions.forEach(function (ext) {\r\n                var t = ext;\r\n                if (t && t.priority) {\r\n                    if (!CoreUtils_1.CoreUtils.isNullOrUndefined(priority[t.priority])) {\r\n                        _this.logger.warnToConsole(\"Two extensions have same priority\" + priority[t.priority] + \", \" + t.identifier);\r\n                    }\r\n                    else {\r\n                        priority[t.priority] = t.identifier; // set a value\r\n                    }\r\n                }\r\n            });\r\n            var c = -1;\r\n            // Set next plugin for all until channel controller\r\n            for (var idx = 0; idx < this._extensions.length - 1; idx++) {\r\n                var curr = (this._extensions[idx]);\r\n                if (curr && typeof curr.processTelemetry !== 'function') {\r\n                    // these are initialized only, allowing an entry point for extensions to be initialized when SDK initializes\r\n                    continue;\r\n                }\r\n                if (curr.priority === ChannelControllerPriority) {\r\n                    c = idx + 1;\r\n                    break; // channel controller will set remaining pipeline\r\n                }\r\n                this._extensions[idx].setNextPlugin(this._extensions[idx + 1]); // set next plugin\r\n            }\r\n            // initialize channel controller first, this will initialize all channel plugins\r\n            this._channelController.initialize(this.config, this, this._extensions);\r\n            // initialize remaining regular plugins\r\n            this._extensions.forEach(function (ext) {\r\n                var e = ext;\r\n                if (e && e.priority < ChannelControllerPriority) {\r\n                    ext.initialize(_this.config, _this, _this._extensions); // initialize\r\n                }\r\n            });\r\n            // Remove sender channels from main list\r\n            if (c < this._extensions.length) {\r\n                this._extensions.splice(c);\r\n            }\r\n            if (this.getTransmissionControls().length === 0) {\r\n                throw new Error(\"No channels available\");\r\n            }\r\n            this._isInitialized = true;\r\n            var _a;\r\n        };\r\n        AppInsightsCore.prototype.getTransmissionControls = function () {\r\n            return this._channelController.ChannelControls;\r\n        };\r\n        AppInsightsCore.prototype.track = function (telemetryItem) {\r\n            if (telemetryItem === null) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                // throw error\r\n                throw Error(\"Invalid telemetry item\");\r\n            }\r\n            if (telemetryItem.baseData && !telemetryItem.baseType) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"Provide data.baseType for data.baseData\");\r\n            }\r\n            if (!telemetryItem.baseType) {\r\n                // Hard coded from Common::Event.ts::Event.dataType\r\n                telemetryItem.baseType = \"EventData\";\r\n            }\r\n            if (!telemetryItem.instrumentationKey) {\r\n                // setup default ikey if not passed in\r\n                telemetryItem.instrumentationKey = this.config.instrumentationKey;\r\n            }\r\n            if (!telemetryItem.timestamp) {\r\n                // add default timestamp if not passed in\r\n                telemetryItem.timestamp = new Date();\r\n            }\r\n            // do basic validation before sending it through the pipeline\r\n            this._validateTelmetryItem(telemetryItem);\r\n            // invoke any common telemetry processors before sending through pipeline\r\n            var i = 0;\r\n            while (i < this._extensions.length) {\r\n                if (this._extensions[i].processTelemetry) {\r\n                    this._extensions[i].processTelemetry(telemetryItem); // pass on to first extension that can support processing\r\n                    break;\r\n                }\r\n                i++;\r\n            }\r\n        };\r\n        /**\r\n         * Adds a notification listener. The SDK calls methods on the listener when an appropriate notification is raised.\r\n         * The added plugins must raise notifications. If the plugins do not implement the notifications, then no methods will be\r\n         * called.\r\n         * @param {INotificationListener} listener - An INotificationListener object.\r\n         */\r\n        AppInsightsCore.prototype.addNotificationListener = function (listener) {\r\n            this._notificationManager.addNotificationListener(listener);\r\n        };\r\n        /**\r\n         * Removes all instances of the listener.\r\n         * @param {INotificationListener} listener - INotificationListener to remove.\r\n         */\r\n        AppInsightsCore.prototype.removeNotificationListener = function (listener) {\r\n            this._notificationManager.removeNotificationListener(listener);\r\n        };\r\n        /**\r\n         * Periodically check logger.queue for\r\n         */\r\n        AppInsightsCore.prototype.pollInternalLogs = function () {\r\n            var _this = this;\r\n            if (!(this.config.diagnosticLoggingInterval > 0)) {\r\n                throw Error(\"config.diagnosticLoggingInterval must be a positive integer\");\r\n            }\r\n            return setInterval(function () {\r\n                var queue = _this.logger.queue;\r\n                queue.forEach(function (logMessage) {\r\n                    var item = {\r\n                        name: \"InternalMessageId: \" + logMessage.messageId,\r\n                        instrumentationKey: _this.config.instrumentationKey,\r\n                        timestamp: new Date(),\r\n                        baseType: DiagnosticLogger_1._InternalLogMessage.dataType,\r\n                        baseData: { message: logMessage.message }\r\n                    };\r\n                    _this.track(item);\r\n                });\r\n                queue.length = 0;\r\n            }, this.config.diagnosticLoggingInterval);\r\n        };\r\n        AppInsightsCore.prototype._validateTelmetryItem = function (telemetryItem) {\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(telemetryItem.name)) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"telemetry name required\");\r\n            }\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(telemetryItem.timestamp)) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"telemetry timestamp required\");\r\n            }\r\n            if (CoreUtils_1.CoreUtils.isNullOrUndefined(telemetryItem.instrumentationKey)) {\r\n                this._notifiyInvalidEvent(telemetryItem);\r\n                throw Error(\"telemetry instrumentationKey required\");\r\n            }\r\n        };\r\n        AppInsightsCore.prototype._notifiyInvalidEvent = function (telemetryItem) {\r\n            this._notificationManager.eventsDiscarded([telemetryItem], EventsDiscardedReason_1.EventsDiscardedReason.InvalidEvent);\r\n        };\r\n        return AppInsightsCore;\r\n    }());\r\n    exports.AppInsightsCore = AppInsightsCore;\r\n    var ChannelController = /** @class */ (function () {\r\n        function ChannelController() {\r\n            this.identifier = \"ChannelControllerPlugin\";\r\n            this.priority = ChannelControllerPriority; // in reserved range 100 to 200\r\n        }\r\n        ChannelController.prototype.processTelemetry = function (item) {\r\n            this.channelQueue.forEach(function (queues) {\r\n                // pass on to first item in queue\r\n                if (queues.length > 0) {\r\n                    queues[0].processTelemetry(item);\r\n                }\r\n            });\r\n        };\r\n        Object.defineProperty(ChannelController.prototype, \"ChannelControls\", {\r\n            get: function () {\r\n                return this.channelQueue;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        ChannelController.prototype.initialize = function (config, core, extensions) {\r\n            var _this = this;\r\n            this.channelQueue = new Array();\r\n            if (config.channels) {\r\n                config.channels.forEach(function (queue) {\r\n                    if (queue && queue.length > 0) {\r\n                        queue = queue.sort(function (a, b) {\r\n                            return a.priority - b.priority;\r\n                        });\r\n                        // Initialize each plugin\r\n                        queue.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n                        for (var i = 1; i < queue.length; i++) {\r\n                            queue[i - 1].setNextPlugin(queue[i]); // setup processing chain\r\n                        }\r\n                        _this.channelQueue.push(queue);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                var arr = new Array();\r\n                for (var i = 0; i < extensions.length; i++) {\r\n                    var plugin = extensions[i];\r\n                    if (plugin.priority > ChannelControllerPriority) {\r\n                        arr.push(plugin);\r\n                    }\r\n                }\r\n                if (arr.length > 0) {\r\n                    // sort if not sorted\r\n                    arr = arr.sort(function (a, b) {\r\n                        return a.priority - b.priority;\r\n                    });\r\n                    // Initialize each plugin\r\n                    arr.forEach(function (queueItem) { return queueItem.initialize(config, core, extensions); });\r\n                    // setup next plugin\r\n                    for (var i = 1; i < arr.length; i++) {\r\n                        arr[i - 1].setNextPlugin(arr[i]);\r\n                    }\r\n                    this.channelQueue.push(arr);\r\n                }\r\n            }\r\n        };\r\n        return ChannelController;\r\n    }());\r\n    var validationError = \"Extensions must provide callback to initialize\";\r\n    var ChannelControllerPriority = 200;\r\n    var duplicatePriority = \"One or more extensions are set at same priority\";\r\n});\r\n//# sourceMappingURL=AppInsightsCore.js.map","define([\"require\", \"exports\", \"./Sender\"], function (require, exports, Sender_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.Sender = Sender_1.Sender;\r\n});\r\n//# sourceMappingURL=applicationinsights-channel-js.js.map","define([\"require\", \"exports\", \"./SendBuffer\", \"./EnvelopeCreator\", \"./TelemetryValidation/EventValidator\", \"./TelemetryValidation/TraceValidator\", \"./TelemetryValidation/ExceptionValidator\", \"./TelemetryValidation/MetricValidator\", \"./TelemetryValidation/PageViewPerformanceValidator\", \"./TelemetryValidation/PageViewValidator\", \"./TelemetryValidation/RemoteDepdencyValidator\", \"./Serializer\", \"applicationinsights-common\", \"applicationinsights-core-js\", \"applicationinsights-core-js\", \"./Offline\"], function (require, exports, SendBuffer_1, EnvelopeCreator_1, EventValidator_1, TraceValidator_1, ExceptionValidator_1, MetricValidator_1, PageViewPerformanceValidator_1, PageViewValidator_1, RemoteDepdencyValidator_1, Serializer_1, applicationinsights_common_1, applicationinsights_core_js_1, applicationinsights_core_js_2, Offline_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Sender = /** @class */ (function () {\r\n        function Sender() {\r\n            this.priority = 201;\r\n            /**\r\n             * Whether XMLHttpRequest object is supported. Older version of IE (8,9) do not support it.\r\n             */\r\n            this._XMLHttpRequestSupported = false;\r\n        }\r\n        Sender.prototype.pause = function () {\r\n            throw new Error(\"Method not implemented.\");\r\n        };\r\n        Sender.prototype.resume = function () {\r\n            throw new Error(\"Method not implemented.\");\r\n        };\r\n        Sender.prototype.flush = function () {\r\n            try {\r\n                this.triggerSend();\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.FlushFailed, \"flush failed, telemetry will not be collected: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        Sender.prototype.teardown = function () {\r\n            throw new Error(\"Method not implemented.\");\r\n        };\r\n        Sender.prototype.initialize = function (config, core, extensions) {\r\n            this.identifier = \"AppInsightsChannelPlugin\";\r\n            this._logger = core.logger;\r\n            this._serializer = new Serializer_1.Serializer(core.logger);\r\n            this._consecutiveErrors = 0;\r\n            this._retryAt = null;\r\n            this._lastSend = 0;\r\n            this._config = Sender._getDefaultAppInsightsChannelConfig(config, this.identifier);\r\n            this._sender = null;\r\n            this._buffer = (applicationinsights_common_1.Util.canUseSessionStorage() && this._config.enableSessionStorageBuffer)\r\n                ? new SendBuffer_1.SessionStorageSendBuffer(this._logger, this._config) : new SendBuffer_1.ArraySendBuffer(this._config);\r\n            if (!this._config.isBeaconApiDisabled() && applicationinsights_common_1.Util.IsBeaconApiSupported()) {\r\n                this._sender = this._beaconSender;\r\n            }\r\n            else {\r\n                if (typeof XMLHttpRequest != \"undefined\") {\r\n                    var testXhr = new XMLHttpRequest();\r\n                    if (\"withCredentials\" in testXhr) {\r\n                        this._sender = this._xhrSender;\r\n                        this._XMLHttpRequestSupported = true;\r\n                    }\r\n                    else if (typeof XDomainRequest !== \"undefined\") {\r\n                        this._sender = this._xdrSender; //IE 8 and 9\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        Sender.prototype.processTelemetry = function (telemetryItem) {\r\n            try {\r\n                // if master off switch is set, don't send any data\r\n                if (this._config.disableTelemetry()) {\r\n                    // Do not send/save data\r\n                    return;\r\n                }\r\n                // validate input\r\n                if (!telemetryItem) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.CannotSendEmptyTelemetry, \"Cannot send empty telemetry\");\r\n                    return;\r\n                }\r\n                // ensure a sender was constructed\r\n                if (!this._sender) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.SenderNotInitialized, \"Sender was not initialized\");\r\n                    return;\r\n                }\r\n                // first we need to validate that the envelope passed down is valid\r\n                var isValid = Sender._validate(telemetryItem);\r\n                if (!isValid) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"Invalid telemetry envelope\");\r\n                    return;\r\n                }\r\n                // construct an envelope that Application Insights endpoint can understand\r\n                var aiEnvelope = this._constructEnvelope(telemetryItem);\r\n                if (!aiEnvelope) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.CreateEnvelopeError, \"Unable to create an AppInsights envelope\");\r\n                    return;\r\n                }\r\n                // check if the incoming payload is too large, truncate if necessary\r\n                var payload = this._serializer.serialize(aiEnvelope);\r\n                // flush if we would exceed the max-size limit by adding this item\r\n                var bufferPayload = this._buffer.getItems();\r\n                var batch = this._buffer.batchPayloads(bufferPayload);\r\n                if (batch && (batch.length + payload.length > this._config.maxBatchSizeInBytes())) {\r\n                    this.triggerSend();\r\n                }\r\n                // enqueue the payload\r\n                this._buffer.enqueue(payload);\r\n                // ensure an invocation timeout is set\r\n                this._setupTimer();\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.FailedAddingTelemetryToBuffer, \"Failed adding telemetry to the sender's buffer, some telemetry will be lost: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n            // hand off the telemetry item to the next plugin\r\n            if (!applicationinsights_core_js_2.CoreUtils.isNullOrUndefined(this._nextPlugin)) {\r\n                this._nextPlugin.processTelemetry(telemetryItem);\r\n            }\r\n        };\r\n        Sender.prototype.setNextPlugin = function (next) {\r\n            this._nextPlugin = next;\r\n        };\r\n        /**\r\n         * xhr state changes\r\n         */\r\n        Sender.prototype._xhrReadyStateChange = function (xhr, payload, countOfItemsInPayload) {\r\n            if (xhr.readyState === 4) {\r\n                var response = null;\r\n                if (!this._appId) {\r\n                    response = this._parseResponse(xhr.responseText || xhr.response);\r\n                    if (response && response.appId) {\r\n                        this._appId = response.appId;\r\n                    }\r\n                }\r\n                if ((xhr.status < 200 || xhr.status >= 300) && xhr.status !== 0) {\r\n                    if (!this._config.isRetryDisabled() && this._isRetriable(xhr.status)) {\r\n                        this._resendPayload(payload);\r\n                        this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \". \" +\r\n                            \"Response code \" + xhr.status + \". Will retry to send \" + payload.length + \" items.\");\r\n                    }\r\n                    else {\r\n                        this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                    }\r\n                }\r\n                else if (xhr.status === 0 || Offline_1.Offline.isOffline()) {\r\n                    if (!this._config.isRetryDisabled()) {\r\n                        var offlineBackOffMultiplier = 10; // arbritrary number\r\n                        this._resendPayload(payload, offlineBackOffMultiplier);\r\n                        this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \". Offline - Response Code: \" + xhr.status + \". Offline status: \" + Offline_1.Offline.isOffline() + \". Will retry to send \" + payload.length + \" items.\");\r\n                    }\r\n                }\r\n                else {\r\n                    if (xhr.status === 206) {\r\n                        if (!response) {\r\n                            response = this._parseResponse(xhr.responseText || xhr.response);\r\n                        }\r\n                        if (response && !this._config.isRetryDisabled()) {\r\n                            this._onPartialSuccess(payload, response);\r\n                        }\r\n                        else {\r\n                            this._onError(payload, this._formatErrorMessageXhr(xhr));\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._consecutiveErrors = 0;\r\n                        this._onSuccess(payload, countOfItemsInPayload);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Immediately send buffered data\r\n         * @param async {boolean} - Indicates if the events should be sent asynchronously\r\n         */\r\n        Sender.prototype.triggerSend = function (async) {\r\n            if (async === void 0) { async = true; }\r\n            try {\r\n                // Send data only if disableTelemetry is false\r\n                if (!this._config.disableTelemetry()) {\r\n                    if (this._buffer.count() > 0) {\r\n                        var payload = this._buffer.getItems();\r\n                        // invoke send\r\n                        this._sender(payload, async);\r\n                    }\r\n                    // update lastSend time to enable throttling\r\n                    this._lastSend = +new Date;\r\n                }\r\n                else {\r\n                    this._buffer.clear();\r\n                }\r\n                clearTimeout(this._timeoutHandle);\r\n                this._timeoutHandle = null;\r\n                this._retryAt = null;\r\n            }\r\n            catch (e) {\r\n                /* Ignore this error for IE under v10 */\r\n                if (!applicationinsights_common_1.Util.getIEVersion() || applicationinsights_common_1.Util.getIEVersion() > 9) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \"Telemetry transmission failed, some telemetry will be lost: \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * error handler\r\n         */\r\n        Sender.prototype._onError = function (payload, message, event) {\r\n            this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.OnError, \"Failed to send telemetry.\", { message: message });\r\n            this._buffer.clearSent(payload);\r\n        };\r\n        /**\r\n         * partial success handler\r\n         */\r\n        Sender.prototype._onPartialSuccess = function (payload, results) {\r\n            var failed = [];\r\n            var retry = [];\r\n            // Iterate through the reversed array of errors so that splicing doesn't have invalid indexes after the first item.\r\n            var errors = results.errors.reverse();\r\n            for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\r\n                var error = errors_1[_i];\r\n                var extracted = payload.splice(error.index, 1)[0];\r\n                if (this._isRetriable(error.statusCode)) {\r\n                    retry.push(extracted);\r\n                }\r\n                else {\r\n                    // All other errors, including: 402 (Monthly quota exceeded) and 439 (Too many requests and refresh cache).\r\n                    failed.push(extracted);\r\n                }\r\n            }\r\n            if (payload.length > 0) {\r\n                this._onSuccess(payload, results.itemsAccepted);\r\n            }\r\n            if (failed.length > 0) {\r\n                this._onError(failed, this._formatErrorMessageXhr(null, ['partial success', results.itemsAccepted, 'of', results.itemsReceived].join(' ')));\r\n            }\r\n            if (retry.length > 0) {\r\n                this._resendPayload(retry);\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \"Partial success. \" +\r\n                    \"Delivered: \" + payload.length + \", Failed: \" + failed.length +\r\n                    \". Will retry to send \" + retry.length + \" our of \" + results.itemsReceived + \" items\");\r\n            }\r\n        };\r\n        /**\r\n         * success handler\r\n         */\r\n        Sender.prototype._onSuccess = function (payload, countOfItemsInPayload) {\r\n            this._buffer.clearSent(payload);\r\n        };\r\n        /**\r\n         * xdr state changes\r\n         */\r\n        Sender.prototype._xdrOnLoad = function (xdr, payload) {\r\n            if (xdr && (xdr.responseText + \"\" === \"200\" || xdr.responseText === \"\")) {\r\n                this._consecutiveErrors = 0;\r\n                this._onSuccess(payload, 0);\r\n            }\r\n            else {\r\n                var results = this._parseResponse(xdr.responseText);\r\n                if (results && results.itemsReceived && results.itemsReceived > results.itemsAccepted\r\n                    && !this._config.isRetryDisabled()) {\r\n                    this._onPartialSuccess(payload, results);\r\n                }\r\n                else {\r\n                    this._onError(payload, this._formatErrorMessageXdr(xdr));\r\n                }\r\n            }\r\n        };\r\n        Sender.prototype._constructEnvelope = function (envelope) {\r\n            switch (envelope.baseType) {\r\n                case applicationinsights_common_1.Event.dataType:\r\n                    return EnvelopeCreator_1.EventEnvelopeCreator.EventEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.Trace.dataType:\r\n                    return EnvelopeCreator_1.TraceEnvelopeCreator.TraceEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.PageView.dataType:\r\n                    return EnvelopeCreator_1.PageViewEnvelopeCreator.PageViewEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.PageViewPerformance.dataType:\r\n                    return EnvelopeCreator_1.PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.Exception.dataType:\r\n                    return EnvelopeCreator_1.ExceptionEnvelopeCreator.ExceptionEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.Metric.dataType:\r\n                    return EnvelopeCreator_1.MetricEnvelopeCreator.MetricEnvelopeCreator.Create(this._logger, envelope);\r\n                case applicationinsights_common_1.RemoteDependencyData.dataType:\r\n                    return EnvelopeCreator_1.DependencyEnvelopeCreator.DependencyEnvelopeCreator.Create(this._logger, envelope);\r\n                default:\r\n                    // default create custom event type\r\n                    return EnvelopeCreator_1.EventEnvelopeCreator.EventEnvelopeCreator.Create(this._logger, envelope);\r\n            }\r\n        };\r\n        Sender._getDefaultAppInsightsChannelConfig = function (config, identifier) {\r\n            var resultConfig = {};\r\n            var pluginConfig = config.extensionConfig && config.extensionConfig[identifier] ? config.extensionConfig[identifier] : {};\r\n            // set default values\r\n            resultConfig.endpointUrl = function () { return config.endpointUrl || \"https://dc.services.visualstudio.com/v2/track\"; };\r\n            resultConfig.emitLineDelimitedJson = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.emitLineDelimitedJson); };\r\n            resultConfig.maxBatchInterval = function () { return !isNaN(pluginConfig.maxBatchInterval) ? pluginConfig.maxBatchInterval : 15000; };\r\n            resultConfig.maxBatchSizeInBytes = function () { return pluginConfig.maxBatchSizeInBytes > 0 ? pluginConfig.maxBatchSizeInBytes : 102400; }; // 100kb\r\n            resultConfig.disableTelemetry = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.disableTelemetry); };\r\n            resultConfig.enableSessionStorageBuffer = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.enableSessionStorageBuffer, true); };\r\n            resultConfig.isRetryDisabled = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.isRetryDisabled); };\r\n            resultConfig.isBeaconApiDisabled = function () { return applicationinsights_common_1.Util.stringToBoolOrDefault(pluginConfig.isBeaconApiDisabled, true); };\r\n            return resultConfig;\r\n        };\r\n        Sender._validate = function (envelope) {\r\n            // call the appropriate Validate depending on the baseType\r\n            switch (envelope.baseType) {\r\n                case applicationinsights_common_1.Event.dataType:\r\n                    return EventValidator_1.EventValidator.EventValidator.Validate(envelope);\r\n                case applicationinsights_common_1.Trace.dataType:\r\n                    return TraceValidator_1.TraceValidator.TraceValidator.Validate(envelope);\r\n                case applicationinsights_common_1.Exception.dataType:\r\n                    return ExceptionValidator_1.ExceptionValidator.ExceptionValidator.Validate(envelope);\r\n                case applicationinsights_common_1.Metric.dataType:\r\n                    return MetricValidator_1.MetricValidator.MetricValidator.Validate(envelope);\r\n                case applicationinsights_common_1.PageView.dataType:\r\n                    return PageViewValidator_1.PageViewValidator.PageViewValidator.Validate(envelope);\r\n                case applicationinsights_common_1.PageViewPerformance.dataType:\r\n                    return PageViewPerformanceValidator_1.PageViewPerformanceValidator.PageViewPerformanceValidator.Validate(envelope);\r\n                case applicationinsights_common_1.RemoteDependencyData.dataType:\r\n                    return RemoteDepdencyValidator_1.RemoteDepdencyValidator.RemoteDepdencyValidator.Validate(envelope);\r\n                default:\r\n                    return EventValidator_1.EventValidator.EventValidator.Validate(envelope);\r\n            }\r\n        };\r\n        /**\r\n         * Send Beacon API request\r\n         * @param payload {string} - The data payload to be sent.\r\n         * @param isAsync {boolean} - not used\r\n         * Note: Beacon API does not support custom headers and we are not able to get\r\n         * appId from the backend for the correct correlation.\r\n         */\r\n        Sender.prototype._beaconSender = function (payload, isAsync) {\r\n            var url = this._config.endpointUrl();\r\n            var batch = this._buffer.batchPayloads(payload);\r\n            // Chrome only allows CORS-safelisted values for the sendBeacon data argument\r\n            // see: https://bugs.chromium.org/p/chromium/issues/detail?id=720283\r\n            var plainTextBatch = new Blob([batch], { type: 'text/plain;charset=UTF-8' });\r\n            // The sendBeacon method returns true if the user agent is able to successfully queue the data for transfer. Otherwise it returns false.\r\n            var queued = navigator.sendBeacon(url, plainTextBatch);\r\n            if (queued) {\r\n                this._buffer.markAsSent(payload);\r\n            }\r\n            else {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \". \" + \"Failed to send telemetry with Beacon API.\");\r\n            }\r\n        };\r\n        /**\r\n         * Send XMLHttpRequest\r\n         * @param payload {string} - The data payload to be sent.\r\n         * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n         */\r\n        Sender.prototype._xhrSender = function (payload, isAsync) {\r\n            var _this = this;\r\n            var xhr = new XMLHttpRequest();\r\n            xhr[applicationinsights_common_1.DisabledPropertyName] = true;\r\n            xhr.open(\"POST\", this._config.endpointUrl(), isAsync);\r\n            xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n            // append Sdk-Context request header only in case of breeze endpoint \r\n            if (applicationinsights_common_1.Util.isInternalApplicationInsightsEndpoint(this._config.endpointUrl())) {\r\n                xhr.setRequestHeader(applicationinsights_common_1.RequestHeaders.sdkContextHeader, applicationinsights_common_1.RequestHeaders.sdkContextHeaderAppIdRequest);\r\n            }\r\n            xhr.onreadystatechange = function () { return _this._xhrReadyStateChange(xhr, payload, payload.length); };\r\n            xhr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXhr(xhr), event); };\r\n            // compose an array of payloads\r\n            var batch = this._buffer.batchPayloads(payload);\r\n            xhr.send(batch);\r\n            this._buffer.markAsSent(payload);\r\n        };\r\n        /**\r\n         * Parses the response from the backend.\r\n         * @param response - XMLHttpRequest or XDomainRequest response\r\n         */\r\n        Sender.prototype._parseResponse = function (response) {\r\n            try {\r\n                if (response && response !== \"\") {\r\n                    var result = JSON.parse(response);\r\n                    if (result && result.itemsReceived && result.itemsReceived >= result.itemsAccepted &&\r\n                        result.itemsReceived - result.itemsAccepted == result.errors.length) {\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.InvalidBackendResponse, \"Cannot parse the response. \" + applicationinsights_common_1.Util.getExceptionName(e), {\r\n                    response: response\r\n                });\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n         * Resend payload. Adds payload back to the send buffer and setup a send timer (with exponential backoff).\r\n         * @param payload\r\n         */\r\n        Sender.prototype._resendPayload = function (payload, linearFactor) {\r\n            if (linearFactor === void 0) { linearFactor = 1; }\r\n            if (!payload || payload.length === 0) {\r\n                return;\r\n            }\r\n            this._buffer.clearSent(payload);\r\n            this._consecutiveErrors++;\r\n            for (var _i = 0, payload_1 = payload; _i < payload_1.length; _i++) {\r\n                var item = payload_1[_i];\r\n                this._buffer.enqueue(item);\r\n            }\r\n            // setup timer\r\n            this._setRetryTime(linearFactor);\r\n            this._setupTimer();\r\n        };\r\n        /** Calculates the time to wait before retrying in case of an error based on\r\n         * http://en.wikipedia.org/wiki/Exponential_backoff\r\n         */\r\n        Sender.prototype._setRetryTime = function (linearFactor) {\r\n            var SlotDelayInSeconds = 10;\r\n            var delayInSeconds;\r\n            if (this._consecutiveErrors <= 1) {\r\n                delayInSeconds = SlotDelayInSeconds;\r\n            }\r\n            else {\r\n                var backOffSlot = (Math.pow(2, this._consecutiveErrors) - 1) / 2;\r\n                // tslint:disable-next-line:insecure-random\r\n                var backOffDelay = Math.floor(Math.random() * backOffSlot * SlotDelayInSeconds) + 1;\r\n                backOffDelay = linearFactor * backOffDelay;\r\n                delayInSeconds = Math.max(Math.min(backOffDelay, 3600), SlotDelayInSeconds);\r\n            }\r\n            // TODO: Log the backoff time like the C# version does.\r\n            var retryAfterTimeSpan = Date.now() + (delayInSeconds * 1000);\r\n            // TODO: Log the retry at time like the C# version does.\r\n            this._retryAt = retryAfterTimeSpan;\r\n        };\r\n        /**\r\n         * Sets up the timer which triggers actually sending the data.\r\n         */\r\n        Sender.prototype._setupTimer = function () {\r\n            var _this = this;\r\n            if (!this._timeoutHandle) {\r\n                var retryInterval = this._retryAt ? Math.max(0, this._retryAt - Date.now()) : 0;\r\n                var timerValue = Math.max(this._config.maxBatchInterval(), retryInterval);\r\n                this._timeoutHandle = setTimeout(function () {\r\n                    _this.triggerSend();\r\n                }, timerValue);\r\n            }\r\n        };\r\n        /**\r\n         * Checks if the SDK should resend the payload after receiving this status code from the backend.\r\n         * @param statusCode\r\n         */\r\n        Sender.prototype._isRetriable = function (statusCode) {\r\n            return statusCode == 408 // Timeout\r\n                || statusCode == 429 // Too many requests.\r\n                || statusCode == 500 // Internal server error.\r\n                || statusCode == 503; // Service unavailable.\r\n        };\r\n        Sender.prototype._formatErrorMessageXhr = function (xhr, message) {\r\n            if (xhr) {\r\n                return \"XMLHttpRequest,Status:\" + xhr.status + \",Response:\" + xhr.responseText || xhr.response || \"\";\r\n            }\r\n            return message;\r\n        };\r\n        /**\r\n         * Send XDomainRequest\r\n         * @param payload {string} - The data payload to be sent.\r\n         * @param isAsync {boolean} - Indicates if the request should be sent asynchronously\r\n         *\r\n         * Note: XDomainRequest does not support sync requests. This 'isAsync' parameter is added\r\n         * to maintain consistency with the xhrSender's contract\r\n         * Note: XDomainRequest does not support custom headers and we are not able to get\r\n         * appId from the backend for the correct correlation.\r\n         */\r\n        Sender.prototype._xdrSender = function (payload, isAsync) {\r\n            var _this = this;\r\n            var xdr = new XDomainRequest();\r\n            xdr.onload = function () { return _this._xdrOnLoad(xdr, payload); };\r\n            xdr.onerror = function (event) { return _this._onError(payload, _this._formatErrorMessageXdr(xdr), event); };\r\n            // XDomainRequest requires the same protocol as the hosting page. \r\n            // If the protocol doesn't match, we can't send the telemetry :(. \r\n            var hostingProtocol = window.location.protocol;\r\n            if (this._config.endpointUrl().lastIndexOf(hostingProtocol, 0) !== 0) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.TransmissionFailed, \". \" +\r\n                    \"Cannot send XDomain request. The endpoint URL protocol doesn't match the hosting page protocol.\");\r\n                this._buffer.clear();\r\n                return;\r\n            }\r\n            var endpointUrl = this._config.endpointUrl().replace(/^(https?:)/, \"\");\r\n            xdr.open('POST', endpointUrl);\r\n            // compose an array of payloads\r\n            var batch = this._buffer.batchPayloads(payload);\r\n            xdr.send(batch);\r\n            this._buffer.markAsSent(payload);\r\n        };\r\n        Sender.prototype._formatErrorMessageXdr = function (xdr, message) {\r\n            if (xdr) {\r\n                return \"XDomainRequest,Response:\" + xdr.responseText || \"\";\r\n            }\r\n            return message;\r\n        };\r\n        return Sender;\r\n    }());\r\n    exports.Sender = Sender;\r\n});\r\n//# sourceMappingURL=Sender.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageViewPerformanceValidator = /** @class */ (function () {\r\n        function PageViewPerformanceValidator() {\r\n        }\r\n        PageViewPerformanceValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n            \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"domProcessing\"] ||\r\n                !item.domainProperties[\"duration\"] ||\r\n                !item.domainProperties[\"name\"] ||\r\n                !item.domainProperties[\"networkConnect\"] ||\r\n                !item.domainProperties[\"perfTotal\"] ||\r\n                !item.domainProperties[\"receivedResponse\"] ||\r\n                !item.domainProperties[\"sentRequest\"] ||\r\n                !item.domainProperties[\"url\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        PageViewPerformanceValidator.PageViewPerformanceValidator = new PageViewPerformanceValidator();\r\n        return PageViewPerformanceValidator;\r\n    }());\r\n    exports.PageViewPerformanceValidator = PageViewPerformanceValidator;\r\n});\r\n//# sourceMappingURL=PageViewPerformanceValidator.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /*\r\n     * An array based send buffer.\r\n     */\r\n    var ArraySendBuffer = /** @class */ (function () {\r\n        function ArraySendBuffer(config) {\r\n            this._config = config;\r\n            this._buffer = [];\r\n        }\r\n        ArraySendBuffer.prototype.enqueue = function (payload) {\r\n            this._buffer.push(payload);\r\n        };\r\n        ArraySendBuffer.prototype.count = function () {\r\n            return this._buffer.length;\r\n        };\r\n        ArraySendBuffer.prototype.clear = function () {\r\n            this._buffer.length = 0;\r\n        };\r\n        ArraySendBuffer.prototype.getItems = function () {\r\n            return this._buffer.slice(0);\r\n        };\r\n        ArraySendBuffer.prototype.batchPayloads = function (payload) {\r\n            if (payload && payload.length > 0) {\r\n                var batch = this._config.emitLineDelimitedJson() ?\r\n                    payload.join(\"\\n\") :\r\n                    \"[\" + payload.join(\",\") + \"]\";\r\n                return batch;\r\n            }\r\n            return null;\r\n        };\r\n        ArraySendBuffer.prototype.markAsSent = function (payload) {\r\n            this.clear();\r\n        };\r\n        ArraySendBuffer.prototype.clearSent = function (payload) {\r\n            // not supported\r\n        };\r\n        return ArraySendBuffer;\r\n    }());\r\n    exports.ArraySendBuffer = ArraySendBuffer;\r\n    /*\r\n     * Session storege buffer holds a copy of all unsent items in the browser session storage.\r\n     */\r\n    var SessionStorageSendBuffer = /** @class */ (function () {\r\n        function SessionStorageSendBuffer(logger, config) {\r\n            this._bufferFullMessageSent = false;\r\n            this._logger = logger;\r\n            this._config = config;\r\n            var bufferItems = this.getBuffer(SessionStorageSendBuffer.BUFFER_KEY);\r\n            var notDeliveredItems = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            this._buffer = bufferItems.concat(notDeliveredItems);\r\n            // If the buffer has too many items, drop items from the end.\r\n            if (this._buffer.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                this._buffer.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n            }\r\n            // update DataLossAnalyzer with the number of recovered items\r\n            // Uncomment if you want to use DataLossanalyzer\r\n            // DataLossAnalyzer.itemsRestoredFromSessionBuffer = this._buffer.length;\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        }\r\n        SessionStorageSendBuffer.prototype.enqueue = function (payload) {\r\n            if (this._buffer.length >= SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                // sent internal log only once per page view\r\n                if (!this._bufferFullMessageSent) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.SessionStorageBufferFull, \"Maximum buffer size reached: \" + this._buffer.length, true);\r\n                    this._bufferFullMessageSent = true;\r\n                }\r\n                return;\r\n            }\r\n            this._buffer.push(payload);\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n        };\r\n        SessionStorageSendBuffer.prototype.count = function () {\r\n            return this._buffer.length;\r\n        };\r\n        SessionStorageSendBuffer.prototype.clear = function () {\r\n            this._buffer.length = 0;\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, []);\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, []);\r\n            this._bufferFullMessageSent = false;\r\n        };\r\n        SessionStorageSendBuffer.prototype.getItems = function () {\r\n            return this._buffer.slice(0);\r\n        };\r\n        SessionStorageSendBuffer.prototype.batchPayloads = function (payload) {\r\n            if (payload && payload.length > 0) {\r\n                var batch = this._config.emitLineDelimitedJson() ?\r\n                    payload.join(\"\\n\") :\r\n                    \"[\" + payload.join(\",\") + \"]\";\r\n                return batch;\r\n            }\r\n            return null;\r\n        };\r\n        SessionStorageSendBuffer.prototype.markAsSent = function (payload) {\r\n            this._buffer = this.removePayloadsFromBuffer(payload, this._buffer);\r\n            this.setBuffer(SessionStorageSendBuffer.BUFFER_KEY, this._buffer);\r\n            var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            if (sentElements instanceof Array && payload instanceof Array) {\r\n                sentElements = sentElements.concat(payload);\r\n                if (sentElements.length > SessionStorageSendBuffer.MAX_BUFFER_SIZE) {\r\n                    // We send telemetry normally. If the SENT_BUFFER is too big we don't add new elements\r\n                    // until we receive a response from the backend and the buffer has free space again (see clearSent method)\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.SessionStorageBufferFull, \"Sent buffer reached its maximum size: \" + sentElements.length, true);\r\n                    sentElements.length = SessionStorageSendBuffer.MAX_BUFFER_SIZE;\r\n                }\r\n                this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n            }\r\n        };\r\n        SessionStorageSendBuffer.prototype.clearSent = function (payload) {\r\n            var sentElements = this.getBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY);\r\n            sentElements = this.removePayloadsFromBuffer(payload, sentElements);\r\n            this.setBuffer(SessionStorageSendBuffer.SENT_BUFFER_KEY, sentElements);\r\n        };\r\n        SessionStorageSendBuffer.prototype.removePayloadsFromBuffer = function (payloads, buffer) {\r\n            var remaining = [];\r\n            for (var i in buffer) {\r\n                var contains = false;\r\n                for (var j in payloads) {\r\n                    if (payloads[j] === buffer[i]) {\r\n                        contains = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!contains) {\r\n                    remaining.push(buffer[i]);\r\n                }\r\n            }\r\n            ;\r\n            return remaining;\r\n        };\r\n        SessionStorageSendBuffer.prototype.getBuffer = function (key) {\r\n            try {\r\n                var bufferJson = applicationinsights_common_1.Util.getSessionStorage(this._logger, key);\r\n                if (bufferJson) {\r\n                    var buffer = JSON.parse(bufferJson);\r\n                    if (buffer) {\r\n                        return buffer;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.FailedToRestoreStorageBuffer, \" storage key: \" + key + \", \" + applicationinsights_common_1.Util.getExceptionName(e), { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n            return [];\r\n        };\r\n        SessionStorageSendBuffer.prototype.setBuffer = function (key, buffer) {\r\n            try {\r\n                var bufferJson = JSON.stringify(buffer);\r\n                applicationinsights_common_1.Util.setSessionStorage(this._logger, key, bufferJson);\r\n            }\r\n            catch (e) {\r\n                // if there was an error, clear the buffer\r\n                // telemetry is stored in the _buffer array so we won't loose any items\r\n                applicationinsights_common_1.Util.setSessionStorage(this._logger, key, JSON.stringify([]));\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.FailedToSetStorageBuffer, \" storage key: \" + key + \", \" + applicationinsights_common_1.Util.getExceptionName(e) + \". Buffer cleared\", { exception: applicationinsights_common_1.Util.dump(e) });\r\n            }\r\n        };\r\n        SessionStorageSendBuffer.BUFFER_KEY = \"AI_buffer\";\r\n        SessionStorageSendBuffer.SENT_BUFFER_KEY = \"AI_sentBuffer\";\r\n        // Maximum number of payloads stored in the buffer. If the buffer is full, new elements will be dropped. \r\n        SessionStorageSendBuffer.MAX_BUFFER_SIZE = 2000;\r\n        return SessionStorageSendBuffer;\r\n    }());\r\n    exports.SessionStorageSendBuffer = SessionStorageSendBuffer;\r\n});\r\n//# sourceMappingURL=SendBuffer.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/MetricData\", \"./Common/DataSanitizer\", \"../Enums\", \"./Common/DataPoint\", \"../Util\"], function (require, exports, MetricData_1, DataSanitizer_1, Enums_1, DataPoint_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Metric = /** @class */ (function (_super) {\r\n        __extends(Metric, _super);\r\n        /**\r\n         * Constructs a new instance of the MetricTelemetry object\r\n         */\r\n        function Metric(logger, name, value, count, min, max, properties) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                metrics: Enums_1.FieldType.Required,\r\n                properties: Enums_1.FieldType.Default\r\n            };\r\n            var dataPoint = new DataPoint_1.DataPoint();\r\n            dataPoint.count = count > 0 ? count : undefined;\r\n            dataPoint.max = isNaN(max) || max === null ? undefined : max;\r\n            dataPoint.min = isNaN(min) || min === null ? undefined : min;\r\n            dataPoint.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            dataPoint.value = value;\r\n            _this.metrics = [dataPoint];\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            return _this;\r\n        }\r\n        Metric.envelopeType = \"Microsoft.ApplicationInsights.{0}.Metric\";\r\n        Metric.dataType = \"MetricData\";\r\n        return Metric;\r\n    }(MetricData_1.MetricData));\r\n    exports.Metric = Metric;\r\n});\r\n//# sourceMappingURL=Metric.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of the Metric item is a list of measurements (single data points) and/or aggregations.\r\n     */\r\n    var MetricData = /** @class */ (function (_super) {\r\n        __extends(MetricData, _super);\r\n        function MetricData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.metrics = [];\r\n            _this.properties = {};\r\n            return _this;\r\n        }\r\n        return MetricData;\r\n    }(Domain_1.Domain));\r\n    exports.MetricData = MetricData;\r\n});\r\n//# sourceMappingURL=MetricData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../../Interfaces/Contracts/Generated/DataPoint\", \"../../Enums\"], function (require, exports, DataPoint_1, Enums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var DataPoint = /** @class */ (function (_super) {\r\n        __extends(DataPoint, _super);\r\n        function DataPoint() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            /**\r\n             * The data contract for serializing this object.\r\n             */\r\n            _this.aiDataContract = {\r\n                name: Enums_1.FieldType.Required,\r\n                kind: Enums_1.FieldType.Default,\r\n                value: Enums_1.FieldType.Required,\r\n                count: Enums_1.FieldType.Default,\r\n                min: Enums_1.FieldType.Default,\r\n                max: Enums_1.FieldType.Default,\r\n                stdDev: Enums_1.FieldType.Default\r\n            };\r\n            return _this;\r\n        }\r\n        return DataPoint;\r\n    }(DataPoint_1.DataPoint));\r\n    exports.DataPoint = DataPoint;\r\n});\r\n//# sourceMappingURL=DataPoint.js.map","define([\"require\", \"exports\", \"./DataPointType\"], function (require, exports, DataPointType_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Metric data single measurement.\r\n     */\r\n    var DataPoint = /** @class */ (function () {\r\n        function DataPoint() {\r\n            this.kind = DataPointType_1.DataPointType.Measurement;\r\n        }\r\n        return DataPoint;\r\n    }());\r\n    exports.DataPoint = DataPoint;\r\n});\r\n//# sourceMappingURL=DataPoint.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // THIS FILE WAS AUTOGENERATED\r\n    /**\r\n     * Type of the metric data measurement.\r\n     */\r\n    var DataPointType;\r\n    (function (DataPointType) {\r\n        DataPointType[DataPointType[\"Measurement\"] = 0] = \"Measurement\";\r\n        DataPointType[DataPointType[\"Aggregation\"] = 1] = \"Aggregation\";\r\n    })(DataPointType = exports.DataPointType || (exports.DataPointType = {}));\r\n});\r\n//# sourceMappingURL=DataPointType.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.DisabledPropertyName = \"Microsoft_ApplicationInsights_BypassAjaxInstrumentation\";\r\n});\r\n//# sourceMappingURL=Constants.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../../Interfaces/Contracts/Generated/Envelope\", \"./DataSanitizer\", \"../../Enums\", \"../../Util\"], function (require, exports, Envelope_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Envelope = /** @class */ (function (_super) {\r\n        __extends(Envelope, _super);\r\n        /**\r\n         * Constructs a new instance of telemetry data.\r\n         */\r\n        function Envelope(logger, data, name) {\r\n            var _this = _super.call(this) || this;\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            _this.data = data;\r\n            _this.time = Util_1.Util.toISOStringForIE8(new Date());\r\n            _this.aiDataContract = {\r\n                time: Enums_1.FieldType.Required,\r\n                iKey: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Required,\r\n                sampleRate: function () {\r\n                    return (_this.sampleRate == 100) ? Enums_1.FieldType.Hidden : Enums_1.FieldType.Required;\r\n                },\r\n                tags: Enums_1.FieldType.Required,\r\n                data: Enums_1.FieldType.Required\r\n            };\r\n            return _this;\r\n        }\r\n        return Envelope;\r\n    }(Envelope_1.Envelope));\r\n    exports.Envelope = Envelope;\r\n});\r\n//# sourceMappingURL=Envelope.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * System variables for a telemetry item.\r\n     */\r\n    var Envelope = /** @class */ (function () {\r\n        function Envelope() {\r\n            this.ver = 1;\r\n            this.sampleRate = 100.0;\r\n            this.tags = {};\r\n        }\r\n        return Envelope;\r\n    }());\r\n    exports.Envelope = Envelope;\r\n});\r\n//# sourceMappingURL=Envelope.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/EventData\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, EventData_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Event = /** @class */ (function (_super) {\r\n        __extends(Event, _super);\r\n        /**\r\n         * Constructs a new instance of the EventTelemetry object\r\n         */\r\n        function Event(logger, name, properties, measurements) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Required,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default\r\n            };\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            return _this;\r\n        }\r\n        Event.envelopeType = \"Microsoft.ApplicationInsights.{0}.Event\";\r\n        Event.dataType = \"EventData\";\r\n        return Event;\r\n    }(EventData_1.EventData));\r\n    exports.Event = Event;\r\n});\r\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/StackFrame\", \"../Interfaces/Contracts/Generated/ExceptionData\", \"../Interfaces/Contracts/Generated/ExceptionDetails\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, StackFrame_1, ExceptionData_1, ExceptionDetails_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Exception = /** @class */ (function (_super) {\r\n        __extends(Exception, _super);\r\n        /**\r\n        * Constructs a new isntance of the ExceptionTelemetry object\r\n        */\r\n        function Exception(logger, exception, properties, measurements, severityLevel) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                exceptions: Enums_1.FieldType.Required,\r\n                severityLevel: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default\r\n            };\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            _this.exceptions = [new _ExceptionDetails(logger, exception)];\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            return _this;\r\n        }\r\n        /**\r\n        * Creates a simple exception with 1 stack frame. Useful for manual constracting of exception.\r\n        */\r\n        Exception.CreateSimpleException = function (message, typeName, assembly, fileName, details, line) {\r\n            return {\r\n                exceptions: [\r\n                    {\r\n                        hasFullStack: true,\r\n                        message: message,\r\n                        stack: details,\r\n                        typeName: typeName\r\n                    }\r\n                ]\r\n            };\r\n        };\r\n        Exception.envelopeType = \"Microsoft.ApplicationInsights.{0}.Exception\";\r\n        Exception.dataType = \"ExceptionData\";\r\n        return Exception;\r\n    }(ExceptionData_1.ExceptionData));\r\n    exports.Exception = Exception;\r\n    var _ExceptionDetails = /** @class */ (function (_super) {\r\n        __extends(_ExceptionDetails, _super);\r\n        function _ExceptionDetails(logger, exception) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                id: Enums_1.FieldType.Default,\r\n                outerId: Enums_1.FieldType.Default,\r\n                typeName: Enums_1.FieldType.Required,\r\n                message: Enums_1.FieldType.Required,\r\n                hasFullStack: Enums_1.FieldType.Default,\r\n                stack: Enums_1.FieldType.Default,\r\n                parsedStack: Enums_1.FieldType.Array\r\n            };\r\n            _this.typeName = DataSanitizer_1.DataSanitizer.sanitizeString(logger, exception.name) || Util_1.Util.NotSpecified;\r\n            _this.message = DataSanitizer_1.DataSanitizer.sanitizeMessage(logger, exception.message) || Util_1.Util.NotSpecified;\r\n            var stack = exception[\"stack\"];\r\n            _this.parsedStack = _this.parseStack(stack);\r\n            _this.stack = DataSanitizer_1.DataSanitizer.sanitizeException(logger, stack);\r\n            _this.hasFullStack = Util_1.Util.isArray(_this.parsedStack) && _this.parsedStack.length > 0;\r\n            return _this;\r\n        }\r\n        _ExceptionDetails.prototype.parseStack = function (stack) {\r\n            var parsedStack = undefined;\r\n            if (typeof stack === \"string\") {\r\n                var frames = stack.split('\\n');\r\n                parsedStack = [];\r\n                var level = 0;\r\n                var totalSizeInBytes = 0;\r\n                for (var i = 0; i <= frames.length; i++) {\r\n                    var frame = frames[i];\r\n                    if (_StackFrame.regex.test(frame)) {\r\n                        var parsedFrame = new _StackFrame(frames[i], level++);\r\n                        totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                        parsedStack.push(parsedFrame);\r\n                    }\r\n                }\r\n                // DP Constraint - exception parsed stack must be < 32KB\r\n                // remove frames from the middle to meet the threshold\r\n                var exceptionParsedStackThreshold = 32 * 1024;\r\n                if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n                    var left = 0;\r\n                    var right = parsedStack.length - 1;\r\n                    var size = 0;\r\n                    var acceptedLeft = left;\r\n                    var acceptedRight = right;\r\n                    while (left < right) {\r\n                        // check size\r\n                        var lSize = parsedStack[left].sizeInBytes;\r\n                        var rSize = parsedStack[right].sizeInBytes;\r\n                        size += lSize + rSize;\r\n                        if (size > exceptionParsedStackThreshold) {\r\n                            // remove extra frames from the middle\r\n                            var howMany = acceptedRight - acceptedLeft + 1;\r\n                            parsedStack.splice(acceptedLeft, howMany);\r\n                            break;\r\n                        }\r\n                        // update pointers\r\n                        acceptedLeft = left;\r\n                        acceptedRight = right;\r\n                        left++;\r\n                        right--;\r\n                    }\r\n                }\r\n            }\r\n            return parsedStack;\r\n        };\r\n        return _ExceptionDetails;\r\n    }(ExceptionDetails_1.ExceptionDetails));\r\n    var _StackFrame = /** @class */ (function (_super) {\r\n        __extends(_StackFrame, _super);\r\n        function _StackFrame(frame, level) {\r\n            var _this = _super.call(this) || this;\r\n            _this.sizeInBytes = 0;\r\n            _this.aiDataContract = {\r\n                level: Enums_1.FieldType.Required,\r\n                method: Enums_1.FieldType.Required,\r\n                assembly: Enums_1.FieldType.Default,\r\n                fileName: Enums_1.FieldType.Default,\r\n                line: Enums_1.FieldType.Default\r\n            };\r\n            _this.level = level;\r\n            _this.method = \"<no_method>\";\r\n            _this.assembly = Util_1.Util.trim(frame);\r\n            var matches = frame.match(_StackFrame.regex);\r\n            if (matches && matches.length >= 5) {\r\n                _this.method = Util_1.Util.trim(matches[2]) || _this.method;\r\n                _this.fileName = Util_1.Util.trim(matches[4]);\r\n                _this.line = parseInt(matches[5]) || 0;\r\n            }\r\n            _this.sizeInBytes += _this.method.length;\r\n            _this.sizeInBytes += _this.fileName.length;\r\n            _this.sizeInBytes += _this.assembly.length;\r\n            // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n            _this.sizeInBytes += _StackFrame.baseSize;\r\n            _this.sizeInBytes += _this.level.toString().length;\r\n            _this.sizeInBytes += _this.line.toString().length;\r\n            return _this;\r\n        }\r\n        // regex to match stack frames from ie/chrome/ff\r\n        // methodName=$2, fileName=$4, lineNo=$5, column=$6\r\n        _StackFrame.regex = /^([\\s]+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\@\\n]+):([0-9]+):([0-9]+)(\\)?)$/;\r\n        _StackFrame.baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n        return _StackFrame;\r\n    }(StackFrame_1.StackFrame));\r\n    exports._StackFrame = _StackFrame;\r\n});\r\n//# sourceMappingURL=Exception.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // THIS FILE WAS AUTOGENERATED\r\n    /**\r\n     * Stack frame information.\r\n     */\r\n    var StackFrame = /** @class */ (function () {\r\n        function StackFrame() {\r\n        }\r\n        return StackFrame;\r\n    }());\r\n    exports.StackFrame = StackFrame;\r\n});\r\n//# sourceMappingURL=StackFrame.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of Exception represents a handled or unhandled exception that occurred during execution of the monitored application.\r\n     */\r\n    var ExceptionData = /** @class */ (function (_super) {\r\n        __extends(ExceptionData, _super);\r\n        function ExceptionData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.exceptions = [];\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return ExceptionData;\r\n    }(Domain_1.Domain));\r\n    exports.ExceptionData = ExceptionData;\r\n});\r\n//# sourceMappingURL=ExceptionData.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Exception details of the exception in a chain.\r\n     */\r\n    var ExceptionDetails = /** @class */ (function () {\r\n        function ExceptionDetails() {\r\n            this.hasFullStack = true;\r\n            this.parsedStack = [];\r\n        }\r\n        return ExceptionDetails;\r\n    }());\r\n    exports.ExceptionDetails = ExceptionDetails;\r\n});\r\n//# sourceMappingURL=ExceptionDetails.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/PageViewData\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, PageViewData_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageView = /** @class */ (function (_super) {\r\n        __extends(PageView, _super);\r\n        /**\r\n         * Constructs a new instance of the PageEventTelemetry object\r\n         */\r\n        function PageView(logger, name, url, durationMs, properties, measurements, id) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Default,\r\n                url: Enums_1.FieldType.Default,\r\n                duration: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default,\r\n                id: Enums_1.FieldType.Default,\r\n            };\r\n            _this.id = DataSanitizer_1.DataSanitizer.sanitizeId(logger, id);\r\n            _this.url = DataSanitizer_1.DataSanitizer.sanitizeUrl(logger, url);\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            if (!isNaN(durationMs)) {\r\n                _this.duration = Util_1.Util.msToTimeSpan(durationMs);\r\n            }\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            return _this;\r\n        }\r\n        PageView.envelopeType = \"Microsoft.ApplicationInsights.{0}.Pageview\";\r\n        PageView.dataType = \"PageviewData\";\r\n        return PageView;\r\n    }(PageViewData_1.PageViewData));\r\n    exports.PageView = PageView;\r\n});\r\n//# sourceMappingURL=PageView.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\", \"../Util\", \"../Interfaces/Contracts/Generated/RemoteDependencyData\"], function (require, exports, DataSanitizer_1, Enums_1, Util_1, Util_2, RemoteDependencyData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var RemoteDependencyData = /** @class */ (function (_super) {\r\n        __extends(RemoteDependencyData, _super);\r\n        /**\r\n         * Constructs a new instance of the RemoteDependencyData object\r\n         */\r\n        function RemoteDependencyData(logger, id, absoluteUrl, commandName, value, success, resultCode, method, properties, measurements) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                id: Enums_1.FieldType.Required,\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Default,\r\n                resultCode: Enums_1.FieldType.Default,\r\n                duration: Enums_1.FieldType.Default,\r\n                success: Enums_1.FieldType.Default,\r\n                data: Enums_1.FieldType.Default,\r\n                target: Enums_1.FieldType.Default,\r\n                type: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default,\r\n                kind: Enums_1.FieldType.Default,\r\n                value: Enums_1.FieldType.Default,\r\n                count: Enums_1.FieldType.Default,\r\n                min: Enums_1.FieldType.Default,\r\n                max: Enums_1.FieldType.Default,\r\n                stdDev: Enums_1.FieldType.Default,\r\n                dependencyKind: Enums_1.FieldType.Default,\r\n                dependencySource: Enums_1.FieldType.Default,\r\n                commandName: Enums_1.FieldType.Default,\r\n                dependencyTypeName: Enums_1.FieldType.Default,\r\n            };\r\n            _this.id = id;\r\n            _this.duration = Util_1.Util.msToTimeSpan(value);\r\n            _this.success = success;\r\n            _this.resultCode = resultCode + \"\";\r\n            _this.type = \"Ajax\";\r\n            _this.data = DataSanitizer_1.DataSanitizer.sanitizeUrl(logger, commandName);\r\n            var dependencyFields = Util_2.AjaxHelper.ParseDependencyPath(logger, absoluteUrl, method, commandName);\r\n            _this.target = dependencyFields.target;\r\n            _this.name = dependencyFields.name;\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            return _this;\r\n        }\r\n        RemoteDependencyData.envelopeType = \"Microsoft.ApplicationInsights.{0}.RemoteDependency\";\r\n        RemoteDependencyData.dataType = \"RemoteDependencyData\";\r\n        return RemoteDependencyData;\r\n    }(RemoteDependencyData_1.RemoteDependencyData));\r\n    exports.RemoteDependencyData = RemoteDependencyData;\r\n});\r\n//# sourceMappingURL=RemoteDependencyData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of Remote Dependency represents an interaction of the monitored component with a remote component/service like SQL or an HTTP endpoint.\r\n     */\r\n    var RemoteDependencyData = /** @class */ (function (_super) {\r\n        __extends(RemoteDependencyData, _super);\r\n        function RemoteDependencyData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.success = true;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return RemoteDependencyData;\r\n    }(Domain_1.Domain));\r\n    exports.RemoteDependencyData = RemoteDependencyData;\r\n});\r\n//# sourceMappingURL=RemoteDependencyData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/MessageData\", \"./Common/DataSanitizer\", \"../Enums\", \"../Util\"], function (require, exports, MessageData_1, DataSanitizer_1, Enums_1, Util_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Trace = /** @class */ (function (_super) {\r\n        __extends(Trace, _super);\r\n        /**\r\n         * Constructs a new instance of the TraceTelemetry object\r\n         */\r\n        function Trace(logger, message, properties, severityLevel) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                message: Enums_1.FieldType.Required,\r\n                severityLevel: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default\r\n            };\r\n            message = message || Util_1.Util.NotSpecified;\r\n            _this.message = DataSanitizer_1.DataSanitizer.sanitizeMessage(logger, message);\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            if (severityLevel) {\r\n                _this.severityLevel = severityLevel;\r\n            }\r\n            return _this;\r\n        }\r\n        Trace.envelopeType = \"Microsoft.ApplicationInsights.{0}.Message\";\r\n        Trace.dataType = \"MessageData\";\r\n        return Trace;\r\n    }(MessageData_1.MessageData));\r\n    exports.Trace = Trace;\r\n});\r\n//# sourceMappingURL=Trace.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./Domain\"], function (require, exports, Domain_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Instances of Message represent printf-like trace statements that are text-searched. Log4Net, NLog and other text-based log file entries are translated into intances of this type. The message does not have measurements.\r\n     */\r\n    var MessageData = /** @class */ (function (_super) {\r\n        __extends(MessageData, _super);\r\n        function MessageData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            return _this;\r\n        }\r\n        return MessageData;\r\n    }(Domain_1.Domain));\r\n    exports.MessageData = MessageData;\r\n});\r\n//# sourceMappingURL=MessageData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../Interfaces/Contracts/Generated/PageViewPerfData\", \"../Enums\", \"./Common/DataSanitizer\", \"../Util\", \"applicationinsights-core-js\"], function (require, exports, PageViewPerfData_1, Enums_1, DataSanitizer_1, Util_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageViewPerformance = /** @class */ (function (_super) {\r\n        __extends(PageViewPerformance, _super);\r\n        /**\r\n         * Constructs a new instance of the PageEventTelemetry object\r\n         */\r\n        function PageViewPerformance(logger, name, url, unused, properties, measurements) {\r\n            var _this = _super.call(this) || this;\r\n            _this.aiDataContract = {\r\n                ver: Enums_1.FieldType.Required,\r\n                name: Enums_1.FieldType.Default,\r\n                url: Enums_1.FieldType.Default,\r\n                duration: Enums_1.FieldType.Default,\r\n                perfTotal: Enums_1.FieldType.Default,\r\n                networkConnect: Enums_1.FieldType.Default,\r\n                sentRequest: Enums_1.FieldType.Default,\r\n                receivedResponse: Enums_1.FieldType.Default,\r\n                domProcessing: Enums_1.FieldType.Default,\r\n                properties: Enums_1.FieldType.Default,\r\n                measurements: Enums_1.FieldType.Default\r\n            };\r\n            _this.isValid = false;\r\n            /*\r\n             * http://www.w3.org/TR/navigation-timing/#processing-model\r\n             *  |-navigationStart\r\n             *  |             |-connectEnd\r\n             *  |             ||-requestStart\r\n             *  |             ||             |-responseStart\r\n             *  |             ||             |              |-responseEnd\r\n             *  |             ||             |              |\r\n             *  |             ||             |              |         |-loadEventEnd\r\n             *  |---network---||---request---|---response---|---dom---|\r\n             *  |--------------------------total----------------------|\r\n             */\r\n            var timing = PageViewPerformance.getPerformanceTiming();\r\n            if (timing) {\r\n                var total = PageViewPerformance.getDuration(timing.navigationStart, timing.loadEventEnd);\r\n                var network = PageViewPerformance.getDuration(timing.navigationStart, timing.connectEnd);\r\n                var request = PageViewPerformance.getDuration(timing.requestStart, timing.responseStart);\r\n                var response = PageViewPerformance.getDuration(timing.responseStart, timing.responseEnd);\r\n                var dom = PageViewPerformance.getDuration(timing.responseEnd, timing.loadEventEnd);\r\n                if (total == 0) {\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.ErrorPVCalc, \"error calculating page view performance.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                }\r\n                else if (!PageViewPerformance.shouldCollectDuration(total, network, request, response, dom)) {\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.InvalidDurationValue, \"Invalid page load duration value. Browser perf data won't be sent.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                }\r\n                else if (total < Math.floor(network) + Math.floor(request) + Math.floor(response) + Math.floor(dom)) {\r\n                    // some browsers may report individual components incorrectly so that the sum of the parts will be bigger than total PLT\r\n                    // in this case, don't report client performance from this page\r\n                    logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.ClientPerformanceMathError, \"client performance math error.\", { total: total, network: network, request: request, response: response, dom: dom });\r\n                }\r\n                else {\r\n                    _this.durationMs = total;\r\n                    // convert to timespans\r\n                    _this.perfTotal = _this.duration = Util_1.Util.msToTimeSpan(total);\r\n                    _this.networkConnect = Util_1.Util.msToTimeSpan(network);\r\n                    _this.sentRequest = Util_1.Util.msToTimeSpan(request);\r\n                    _this.receivedResponse = Util_1.Util.msToTimeSpan(response);\r\n                    _this.domProcessing = Util_1.Util.msToTimeSpan(dom);\r\n                    _this.isValid = true;\r\n                }\r\n            }\r\n            _this.url = DataSanitizer_1.DataSanitizer.sanitizeUrl(logger, url);\r\n            _this.name = DataSanitizer_1.DataSanitizer.sanitizeString(logger, name) || Util_1.Util.NotSpecified;\r\n            _this.properties = DataSanitizer_1.DataSanitizer.sanitizeProperties(logger, properties);\r\n            _this.measurements = DataSanitizer_1.DataSanitizer.sanitizeMeasurements(logger, measurements);\r\n            return _this;\r\n        }\r\n        /**\r\n         * Indicates whether this instance of PageViewPerformance is valid and should be sent\r\n         */\r\n        PageViewPerformance.prototype.getIsValid = function () {\r\n            return this.isValid;\r\n        };\r\n        /**\r\n        * Gets the total duration (PLT) in milliseconds. Check getIsValid() before using this method.\r\n        */\r\n        PageViewPerformance.prototype.getDurationMs = function () {\r\n            return this.durationMs;\r\n        };\r\n        PageViewPerformance.getPerformanceTiming = function () {\r\n            if (PageViewPerformance.isPerformanceTimingSupported()) {\r\n                return window.performance.timing;\r\n            }\r\n            return null;\r\n        };\r\n        /**\r\n        * Returns true is window performance timing API is supported, false otherwise.\r\n        */\r\n        PageViewPerformance.isPerformanceTimingSupported = function () {\r\n            return typeof window != \"undefined\" && window.performance && window.performance.timing;\r\n        };\r\n        /**\r\n         * As page loads different parts of performance timing numbers get set. When all of them are set we can report it.\r\n         * Returns true if ready, false otherwise.\r\n         */\r\n        PageViewPerformance.isPerformanceTimingDataReady = function () {\r\n            var timing = window.performance.timing;\r\n            return timing.domainLookupStart > 0\r\n                && timing.navigationStart > 0\r\n                && timing.responseStart > 0\r\n                && timing.requestStart > 0\r\n                && timing.loadEventEnd > 0\r\n                && timing.responseEnd > 0\r\n                && timing.connectEnd > 0\r\n                && timing.domLoading > 0;\r\n        };\r\n        PageViewPerformance.getDuration = function (start, end) {\r\n            var duration = undefined;\r\n            if (!(isNaN(start) || isNaN(end))) {\r\n                duration = Math.max(end - start, 0);\r\n            }\r\n            return duration;\r\n        };\r\n        /**\r\n         * This method tells if given durations should be excluded from collection.\r\n         */\r\n        PageViewPerformance.shouldCollectDuration = function () {\r\n            var durations = [];\r\n            for (var _i = 0; _i < arguments.length; _i++) {\r\n                durations[_i] = arguments[_i];\r\n            }\r\n            // a full list of Google crawlers user agent strings - https://support.google.com/webmasters/answer/1061943?hl=en\r\n            var botAgentNames = ['googlebot', 'adsbot-google', 'apis-google', 'mediapartners-google'];\r\n            var userAgent = navigator.userAgent;\r\n            var isGoogleBot = false;\r\n            if (userAgent) {\r\n                for (var i_1 = 0; i_1 < botAgentNames.length; i_1++) {\r\n                    isGoogleBot = isGoogleBot || userAgent.toLowerCase().indexOf(botAgentNames[i_1]) !== -1;\r\n                }\r\n            }\r\n            if (isGoogleBot) {\r\n                // Don't report durations for GoogleBot, it is returning invalid values in performance.timing API. \r\n                return false;\r\n            }\r\n            else {\r\n                // for other page views, don't report if it's outside of a reasonable range\r\n                for (var i = 0; i < durations.length; i++) {\r\n                    if (durations[i] >= PageViewPerformance.MAX_DURATION_ALLOWED) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        };\r\n        PageViewPerformance.envelopeType = \"Microsoft.ApplicationInsights.{0}.PageviewPerformance\";\r\n        PageViewPerformance.dataType = \"PageviewPerformanceData\";\r\n        PageViewPerformance.MAX_DURATION_ALLOWED = 3600000; // 1h\r\n        return PageViewPerformance;\r\n    }(PageViewPerfData_1.PageViewPerfData));\r\n    exports.PageViewPerformance = PageViewPerformance;\r\n});\r\n//# sourceMappingURL=PageViewPerformance.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"./PageViewData\"], function (require, exports, PageViewData_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * An instance of PageViewPerf represents: a page view with no performance data, a page view with performance data, or just the performance data of an earlier page request.\r\n     */\r\n    var PageViewPerfData = /** @class */ (function (_super) {\r\n        __extends(PageViewPerfData, _super);\r\n        function PageViewPerfData() {\r\n            var _this = _super.call(this) || this;\r\n            _this.ver = 2;\r\n            _this.properties = {};\r\n            _this.measurements = {};\r\n            return _this;\r\n        }\r\n        return PageViewPerfData;\r\n    }(PageViewData_1.PageViewData));\r\n    exports.PageViewPerfData = PageViewPerfData;\r\n});\r\n//# sourceMappingURL=PageViewPerfData.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"../../Interfaces/Contracts/Generated/Data\", \"../../Enums\"], function (require, exports, Data_1, Enums_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Data = /** @class */ (function (_super) {\r\n        __extends(Data, _super);\r\n        /**\r\n         * Constructs a new instance of telemetry data.\r\n         */\r\n        function Data(baseType, data) {\r\n            var _this = _super.call(this) || this;\r\n            /**\r\n             * The data contract for serializing this object.\r\n             */\r\n            _this.aiDataContract = {\r\n                baseType: Enums_1.FieldType.Required,\r\n                baseData: Enums_1.FieldType.Required\r\n            };\r\n            _this.baseType = baseType;\r\n            _this.baseData = data;\r\n            return _this;\r\n        }\r\n        return Data;\r\n    }(Data_1.Data));\r\n    exports.Data = Data;\r\n});\r\n//# sourceMappingURL=Data.js.map","// THIS FILE WAS AUTOGENERATED\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n    * Defines the level of severity for the event.\r\n    */\r\n    var SeverityLevel;\r\n    (function (SeverityLevel) {\r\n        SeverityLevel[SeverityLevel[\"Verbose\"] = 0] = \"Verbose\";\r\n        SeverityLevel[SeverityLevel[\"Information\"] = 1] = \"Information\";\r\n        SeverityLevel[SeverityLevel[\"Warning\"] = 2] = \"Warning\";\r\n        SeverityLevel[SeverityLevel[\"Error\"] = 3] = \"Error\";\r\n        SeverityLevel[SeverityLevel[\"Critical\"] = 4] = \"Critical\";\r\n    })(SeverityLevel = exports.SeverityLevel || (exports.SeverityLevel = {}));\r\n});\r\n//# sourceMappingURL=SeverityLevel.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    // THIS FILE WAS AUTOGENERATED\r\n    var ContextTagKeys = /** @class */ (function () {\r\n        function ContextTagKeys() {\r\n            this.applicationVersion = \"ai.application.ver\";\r\n            this.applicationBuild = \"ai.application.build\";\r\n            this.applicationTypeId = \"ai.application.typeId\";\r\n            this.applicationId = \"ai.application.applicationId\";\r\n            this.applicationLayer = \"ai.application.layer\";\r\n            this.deviceId = \"ai.device.id\";\r\n            this.deviceIp = \"ai.device.ip\";\r\n            this.deviceLanguage = \"ai.device.language\";\r\n            this.deviceLocale = \"ai.device.locale\";\r\n            this.deviceModel = \"ai.device.model\";\r\n            this.deviceFriendlyName = \"ai.device.friendlyName\";\r\n            this.deviceNetwork = \"ai.device.network\";\r\n            this.deviceNetworkName = \"ai.device.networkName\";\r\n            this.deviceOEMName = \"ai.device.oemName\";\r\n            this.deviceOS = \"ai.device.os\";\r\n            this.deviceOSVersion = \"ai.device.osVersion\";\r\n            this.deviceRoleInstance = \"ai.device.roleInstance\";\r\n            this.deviceRoleName = \"ai.device.roleName\";\r\n            this.deviceScreenResolution = \"ai.device.screenResolution\";\r\n            this.deviceType = \"ai.device.type\";\r\n            this.deviceMachineName = \"ai.device.machineName\";\r\n            this.deviceVMName = \"ai.device.vmName\";\r\n            this.deviceBrowser = \"ai.device.browser\";\r\n            this.deviceBrowserVersion = \"ai.device.browserVersion\";\r\n            this.locationIp = \"ai.location.ip\";\r\n            this.locationCountry = \"ai.location.country\";\r\n            this.locationProvince = \"ai.location.province\";\r\n            this.locationCity = \"ai.location.city\";\r\n            this.operationId = \"ai.operation.id\";\r\n            this.operationName = \"ai.operation.name\";\r\n            this.operationParentId = \"ai.operation.parentId\";\r\n            this.operationRootId = \"ai.operation.rootId\";\r\n            this.operationSyntheticSource = \"ai.operation.syntheticSource\";\r\n            this.operationCorrelationVector = \"ai.operation.correlationVector\";\r\n            this.sessionId = \"ai.session.id\";\r\n            this.sessionIsFirst = \"ai.session.isFirst\";\r\n            this.sessionIsNew = \"ai.session.isNew\";\r\n            this.userAccountAcquisitionDate = \"ai.user.accountAcquisitionDate\";\r\n            this.userAccountId = \"ai.user.accountId\";\r\n            this.userAgent = \"ai.user.userAgent\";\r\n            this.userId = \"ai.user.id\";\r\n            this.userStoreRegion = \"ai.user.storeRegion\";\r\n            this.userAuthUserId = \"ai.user.authUserId\";\r\n            this.userAnonymousUserAcquisitionDate = \"ai.user.anonUserAcquisitionDate\";\r\n            this.userAuthenticatedUserAcquisitionDate = \"ai.user.authUserAcquisitionDate\";\r\n            this.cloudName = \"ai.cloud.name\";\r\n            this.cloudRole = \"ai.cloud.role\";\r\n            this.cloudRoleVer = \"ai.cloud.roleVer\";\r\n            this.cloudRoleInstance = \"ai.cloud.roleInstance\";\r\n            this.cloudEnvironment = \"ai.cloud.environment\";\r\n            this.cloudLocation = \"ai.cloud.location\";\r\n            this.cloudDeploymentUnit = \"ai.cloud.deploymentUnit\";\r\n            this.internalSdkVersion = \"ai.internal.sdkVersion\";\r\n            this.internalAgentVersion = \"ai.internal.agentVersion\";\r\n            this.internalNodeName = \"ai.internal.nodeName\";\r\n        }\r\n        return ContextTagKeys;\r\n    }());\r\n    exports.ContextTagKeys = ContextTagKeys;\r\n});\r\n//# sourceMappingURL=ContextTagKeys.js.map","define([\"require\", \"exports\", \"./Util\", \"./Telemetry/Common/DataSanitizer\", \"applicationinsights-core-js\"], function (require, exports, Util_1, DataSanitizer_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var TelemetryItemCreator = /** @class */ (function () {\r\n        function TelemetryItemCreator() {\r\n        }\r\n        /**\r\n         * Create a telemetry item that the 1DS channel understands\r\n         * @param item domain specific properties; part B\r\n         * @param baseType telemetry item type. ie PageViewData\r\n         * @param envelopeName name of the envelope. ie Microsoft.ApplicationInsights.<instrumentation key>.PageView\r\n         * @param customProperties user defined custom properties; part C\r\n         * @param systemProperties system properties that are added to the context; part A\r\n         * @returns ITelemetryItem that is sent to channel\r\n         */\r\n        TelemetryItemCreator.create = function (item, baseType, envelopeName, logger, customProperties, systemProperties) {\r\n            envelopeName = DataSanitizer_1.DataSanitizer.sanitizeString(logger, envelopeName) || Util_1.Util.NotSpecified;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(item) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(baseType) ||\r\n                applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(envelopeName)) {\r\n                throw Error(\"Input doesn't contain all required fields\");\r\n            }\r\n            var telemetryItem = {\r\n                name: envelopeName,\r\n                timestamp: new Date(),\r\n                instrumentationKey: \"\",\r\n                ctx: systemProperties ? systemProperties : {},\r\n                tags: [],\r\n                data: {},\r\n                baseType: baseType,\r\n                baseData: item\r\n            };\r\n            // Part C\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(customProperties)) {\r\n                for (var prop in customProperties) {\r\n                    if (customProperties.hasOwnProperty(prop)) {\r\n                        telemetryItem.data[prop] = customProperties[prop];\r\n                    }\r\n                }\r\n            }\r\n            return telemetryItem;\r\n        };\r\n        return TelemetryItemCreator;\r\n    }());\r\n    exports.TelemetryItemCreator = TelemetryItemCreator;\r\n});\r\n//# sourceMappingURL=TelemetryItemCreator.js.map","var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\ndefine([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    exports.ContextTagKeys = [\r\n        \"ai.application.ver\",\r\n        \"ai.application.build\",\r\n        \"ai.application.typeId\",\r\n        \"ai.application.applicationId\",\r\n        \"ai.application.layer\",\r\n        \"ai.device.id\",\r\n        \"ai.device.ip\",\r\n        \"ai.device.language\",\r\n        \"ai.device.locale\",\r\n        \"ai.device.model\",\r\n        \"ai.device.friendlyName\",\r\n        \"ai.device.network\",\r\n        \"ai.device.networkName\",\r\n        \"ai.device.oemName\",\r\n        \"ai.device.os\",\r\n        \"ai.device.osVersion\",\r\n        \"ai.device.roleInstance\",\r\n        \"ai.device.roleName\",\r\n        \"ai.device.screenResolution\",\r\n        \"ai.device.type\",\r\n        \"ai.device.machineName\",\r\n        \"ai.device.vmName\",\r\n        \"ai.device.browser\",\r\n        \"ai.device.browserVersion\",\r\n        \"ai.location.ip\",\r\n        \"ai.location.country\",\r\n        \"ai.location.province\",\r\n        \"ai.location.city\",\r\n        \"ai.operation.id\",\r\n        \"ai.operation.name\",\r\n        \"ai.operation.parentId\",\r\n        \"ai.operation.rootId\",\r\n        \"ai.operation.syntheticSource\",\r\n        \"ai.operation.correlationVector\",\r\n        \"ai.session.id\",\r\n        \"ai.session.isFirst\",\r\n        \"ai.session.isNew\",\r\n        \"ai.user.accountAcquisitionDate\",\r\n        \"ai.user.accountId\",\r\n        \"ai.user.userAgent\",\r\n        \"ai.user.id\",\r\n        \"ai.user.storeRegion\",\r\n        \"ai.user.authUserId\",\r\n        \"ai.user.anonUserAcquisitionDate\",\r\n        \"ai.user.authUserAcquisitionDate\",\r\n        \"ai.cloud.name\",\r\n        \"ai.cloud.role\",\r\n        \"ai.cloud.roleVer\",\r\n        \"ai.cloud.roleInstance\",\r\n        \"ai.cloud.environment\",\r\n        \"ai.cloud.location\",\r\n        \"ai.cloud.deploymentUnit\",\r\n        \"ai.internal.sdkVersion\",\r\n        \"ai.internal.agentVersion\",\r\n        \"ai.internal.nodeName\",\r\n    ];\r\n    // these two constants are used to filter out properties not needed when trying to extract custom properties and measurements from the incoming payload\r\n    var baseType = \"baseType\";\r\n    var baseData = \"baseData\";\r\n    var EnvelopeCreator = /** @class */ (function () {\r\n        function EnvelopeCreator() {\r\n        }\r\n        EnvelopeCreator.extractProperties = function (data) {\r\n            var customProperties = null;\r\n            for (var key in data) {\r\n                if (data.hasOwnProperty(key)) {\r\n                    var value = data[key];\r\n                    if (typeof value !== \"number\") {\r\n                        if (!customProperties) {\r\n                            customProperties = {};\r\n                        }\r\n                        customProperties[key] = value;\r\n                    }\r\n                }\r\n            }\r\n            return customProperties;\r\n        };\r\n        EnvelopeCreator.extractPropsAndMeasurements = function (data, properties, measurements) {\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(data)) {\r\n                for (var key in data) {\r\n                    if (data.hasOwnProperty(key)) {\r\n                        var value = data[key];\r\n                        if (typeof value === \"number\") {\r\n                            measurements[key] = value;\r\n                        }\r\n                        else {\r\n                            properties[key] = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        // TODO: Do we want this to take logger as arg or use this._logger as nonstatic?\r\n        EnvelopeCreator.createEnvelope = function (logger, envelopeType, telemetryItem, data) {\r\n            var envelope = new applicationinsights_common_1.Envelope(logger, data, envelopeType);\r\n            envelope.iKey = telemetryItem.instrumentationKey;\r\n            var iKeyNoDashes = telemetryItem.instrumentationKey.replace(/-/g, \"\");\r\n            envelope.name = envelope.name.replace(\"{0}\", iKeyNoDashes);\r\n            // loop through the envelope ctx (Part A) and pick out the ones that should go in outgoing envelope tags\r\n            for (var key in telemetryItem.ctx) {\r\n                if (telemetryItem.ctx.hasOwnProperty(key)) {\r\n                    if (exports.ContextTagKeys.indexOf(key) >= 0) {\r\n                        envelope.tags[key] = telemetryItem.ctx[key];\r\n                    }\r\n                }\r\n            }\r\n            // loop through the envelope tags (extension of Part A) and pick out the ones that should go in outgoing envelope tags\r\n            telemetryItem.tags.forEach(function (tag) {\r\n                for (var key in tag) {\r\n                    if (tag.hasOwnProperty(key)) {\r\n                        if (exports.ContextTagKeys.indexOf(key) >= 0) {\r\n                            envelope.tags[key] = tag[key];\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            return envelope;\r\n        };\r\n        return EnvelopeCreator;\r\n    }());\r\n    exports.EnvelopeCreator = EnvelopeCreator;\r\n    var DependencyEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(DependencyEnvelopeCreator, _super);\r\n        function DependencyEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        DependencyEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customMeasurements = {};\r\n            var customProperties = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var bd = telemetryItem.baseData;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(bd)) {\r\n                logger.warnToConsole(\"Invalid input for dependency data\");\r\n                return null;\r\n            }\r\n            var id = bd.id;\r\n            var absoluteUrl = bd.absoluteUrl;\r\n            var command = bd.commandName;\r\n            var duration = bd.duration;\r\n            var success = bd.success;\r\n            var resultCode = bd.resultCode;\r\n            var method = bd.method;\r\n            var baseData = new applicationinsights_common_1.RemoteDependencyData(logger, id, absoluteUrl, command, duration, success, resultCode, method, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.RemoteDependencyData.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.RemoteDependencyData.envelopeType, telemetryItem, data);\r\n        };\r\n        DependencyEnvelopeCreator.DependencyEnvelopeCreator = new DependencyEnvelopeCreator();\r\n        return DependencyEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.DependencyEnvelopeCreator = DependencyEnvelopeCreator;\r\n    var EventEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(EventEnvelopeCreator, _super);\r\n        function EventEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        EventEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            if (telemetryItem.baseType !== applicationinsights_common_1.Event.dataType) {\r\n                EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.baseData, customProperties, customMeasurements);\r\n            }\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var eventName = telemetryItem.baseData.name;\r\n            var baseData = new applicationinsights_common_1.Event(logger, eventName, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Event.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.Event.envelopeType, telemetryItem, data);\r\n        };\r\n        EventEnvelopeCreator.EventEnvelopeCreator = new EventEnvelopeCreator();\r\n        return EventEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.EventEnvelopeCreator = EventEnvelopeCreator;\r\n    var ExceptionEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(ExceptionEnvelopeCreator, _super);\r\n        function ExceptionEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        ExceptionEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var exception = telemetryItem.baseData.error;\r\n            var severityLevel = telemetryItem.baseData.severityLevel;\r\n            var baseData = new applicationinsights_common_1.Exception(logger, exception, customProperties, customMeasurements, severityLevel);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Exception.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.Exception.envelopeType, telemetryItem, data);\r\n        };\r\n        ExceptionEnvelopeCreator.ExceptionEnvelopeCreator = new ExceptionEnvelopeCreator();\r\n        return ExceptionEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.ExceptionEnvelopeCreator = ExceptionEnvelopeCreator;\r\n    var MetricEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(MetricEnvelopeCreator, _super);\r\n        function MetricEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        MetricEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n            var name = telemetryItem.baseData.name;\r\n            var average = telemetryItem.baseData.average;\r\n            var sampleCount = telemetryItem.baseData.sampleCount;\r\n            var min = telemetryItem.baseData.min;\r\n            var max = telemetryItem.baseData.max;\r\n            var baseData = new applicationinsights_common_1.Metric(logger, name, average, sampleCount, min, max, customProperties);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Metric.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.Metric.envelopeType, telemetryItem, data);\r\n        };\r\n        MetricEnvelopeCreator.MetricEnvelopeCreator = new MetricEnvelopeCreator();\r\n        return MetricEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.MetricEnvelopeCreator = MetricEnvelopeCreator;\r\n    var PageViewEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(PageViewEnvelopeCreator, _super);\r\n        function PageViewEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        PageViewEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            // Since duration is not part of the domain properties in Common Schema, extract it from part C \r\n            var duration = undefined;\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.data) &&\r\n                !applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.data.duration)) {\r\n                duration = telemetryItem.data.duration;\r\n                delete telemetryItem.data.duration;\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var name = telemetryItem.baseData.name;\r\n            var url = telemetryItem.baseData.uri;\r\n            // Todo: move IPageViewTelemetry to common as we are missing type checks on baseData here\r\n            // refUri is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.refUri)) {\r\n                customProperties[\"refUri\"] = telemetryItem.baseData.refUri;\r\n            }\r\n            // pageType is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.pageType)) {\r\n                customProperties[\"pageType\"] = telemetryItem.baseData.pageType;\r\n            }\r\n            // isLoggedIn is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.isLoggedIn)) {\r\n                customProperties[\"isLoggedIn\"] = telemetryItem.baseData.isLoggedIn;\r\n            }\r\n            // pageTags is a field that Breeze still does not recognize as part of Part B. For now, put it in Part C until it supports it as a domain property\r\n            if (!applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData.pageTags)) {\r\n                var pageTags = telemetryItem.baseData.pageTags;\r\n                for (var key in pageTags) {\r\n                    if (pageTags.hasOwnProperty(key)) {\r\n                        customProperties[key] = pageTags[key];\r\n                    }\r\n                }\r\n            }\r\n            var baseData = new applicationinsights_common_1.PageView(logger, name, url, duration, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.PageView.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.PageView.envelopeType, telemetryItem, data);\r\n        };\r\n        PageViewEnvelopeCreator.PageViewEnvelopeCreator = new PageViewEnvelopeCreator();\r\n        return PageViewEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.PageViewEnvelopeCreator = PageViewEnvelopeCreator;\r\n    var PageViewPerformanceEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(PageViewPerformanceEnvelopeCreator, _super);\r\n        function PageViewPerformanceEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        PageViewPerformanceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var customProperties = {};\r\n            var customMeasurements = {};\r\n            EnvelopeCreator.extractPropsAndMeasurements(telemetryItem.data, customProperties, customMeasurements);\r\n            var name = telemetryItem.baseData.name;\r\n            var url = telemetryItem.baseData.uri;\r\n            var duration = telemetryItem.baseData.duration;\r\n            var baseData = new applicationinsights_common_1.PageViewPerformance(logger, name, url, duration, customProperties, customMeasurements);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.PageViewPerformance.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.PageViewPerformance.envelopeType, telemetryItem, data);\r\n        };\r\n        PageViewPerformanceEnvelopeCreator.PageViewPerformanceEnvelopeCreator = new PageViewPerformanceEnvelopeCreator();\r\n        return PageViewPerformanceEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.PageViewPerformanceEnvelopeCreator = PageViewPerformanceEnvelopeCreator;\r\n    var TraceEnvelopeCreator = /** @class */ (function (_super) {\r\n        __extends(TraceEnvelopeCreator, _super);\r\n        function TraceEnvelopeCreator() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        TraceEnvelopeCreator.prototype.Create = function (logger, telemetryItem) {\r\n            this._logger = logger;\r\n            if (applicationinsights_core_js_1.CoreUtils.isNullOrUndefined(telemetryItem.baseData)) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.TelemetryEnvelopeInvalid, \"telemetryItem.baseData cannot be null.\");\r\n            }\r\n            var message = telemetryItem.baseData.message;\r\n            var severityLevel = telemetryItem.baseData.severityLevel;\r\n            var customProperties = EnvelopeCreator.extractProperties(telemetryItem.data);\r\n            var baseData = new applicationinsights_common_1.Trace(logger, message, customProperties, severityLevel);\r\n            var data = new applicationinsights_common_1.Data(applicationinsights_common_1.Trace.dataType, baseData);\r\n            return EnvelopeCreator.createEnvelope(logger, applicationinsights_common_1.Trace.envelopeType, telemetryItem, data);\r\n        };\r\n        TraceEnvelopeCreator.TraceEnvelopeCreator = new TraceEnvelopeCreator();\r\n        return TraceEnvelopeCreator;\r\n    }(EnvelopeCreator));\r\n    exports.TraceEnvelopeCreator = TraceEnvelopeCreator;\r\n});\r\n//# sourceMappingURL=EnvelopeCreator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var EventValidator = /** @class */ (function () {\r\n        function EventValidator() {\r\n        }\r\n        EventValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n            https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties || !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n            \r\n            if (!item.domainProperties || !item.domainProperties[\"name\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        EventValidator.EventValidator = new EventValidator();\r\n        return EventValidator;\r\n    }());\r\n    exports.EventValidator = EventValidator;\r\n});\r\n//# sourceMappingURL=EventValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var TraceValidator = /** @class */ (function () {\r\n        function TraceValidator() {\r\n        }\r\n        TraceValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n            \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"message\"] ||\r\n                !item.domainProperties[\"severityLevel\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        TraceValidator.TraceValidator = new TraceValidator();\r\n        return TraceValidator;\r\n    }());\r\n    exports.TraceValidator = TraceValidator;\r\n});\r\n//# sourceMappingURL=TraceValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var ExceptionValidator = /** @class */ (function () {\r\n        function ExceptionValidator() {\r\n        }\r\n        ExceptionValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"exceptions\"] ||\r\n                !ExceptionValidator._validateExceptions(item.domainProperties[\"exceptions\"])) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        // TODO implement validation of exceptions\r\n        ExceptionValidator._validateExceptions = function (exceptions) {\r\n            // typeName\r\n            // message\r\n            // parsedStack\r\n            // stack\r\n            // hasFullStack\r\n            return true;\r\n        };\r\n        ExceptionValidator.ExceptionValidator = new ExceptionValidator();\r\n        return ExceptionValidator;\r\n    }());\r\n    exports.ExceptionValidator = ExceptionValidator;\r\n});\r\n//# sourceMappingURL=ExceptionValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var MetricValidator = /** @class */ (function () {\r\n        function MetricValidator() {\r\n        }\r\n        MetricValidator.prototype.Validate = function (event) {\r\n            return true;\r\n        };\r\n        MetricValidator.MetricValidator = new MetricValidator();\r\n        return MetricValidator;\r\n    }());\r\n    exports.MetricValidator = MetricValidator;\r\n});\r\n//# sourceMappingURL=MetricValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var PageViewValidator = /** @class */ (function () {\r\n        function PageViewValidator() {\r\n        }\r\n        PageViewValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"id\"] ||\r\n                !item.domainProperties[\"name\"] ||\r\n                !item.domainProperties[\"duration\"] ||\r\n                !item.domainProperties[\"url\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        PageViewValidator.PageViewValidator = new PageViewValidator();\r\n        return PageViewValidator;\r\n    }());\r\n    exports.PageViewValidator = PageViewValidator;\r\n});\r\n//# sourceMappingURL=PageViewValidator.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var RemoteDepdencyValidator = /** @class */ (function () {\r\n        function RemoteDepdencyValidator() {\r\n        }\r\n        RemoteDepdencyValidator.prototype.Validate = function (item) {\r\n            /* TODO re-enable once design of iTelemetryItem is finalized. Task used to track this:\r\n             https://mseng.visualstudio.com/AppInsights/_workitems/edit/1310871\r\n    \r\n            // verify system properties has a ver field\r\n            if (!item.sytemProperties ||\r\n                !item.sytemProperties[\"ver\"]) {\r\n                return false;\r\n            }\r\n    \r\n            if (!item.domainProperties ||\r\n                !item.domainProperties[\"id\"] ||\r\n                !item.domainProperties[\"name\"] ||\r\n                !item.domainProperties[\"resultCode\"] ||\r\n                !item.domainProperties[\"duration\"] ||\r\n                !item.domainProperties[\"success\"] ||\r\n                !item.domainProperties[\"data\"] ||\r\n                !item.domainProperties[\"target\"] ||\r\n                !item.domainProperties[\"type\"]) {\r\n                return false;\r\n            }\r\n            */\r\n            return true;\r\n        };\r\n        RemoteDepdencyValidator.RemoteDepdencyValidator = new RemoteDepdencyValidator();\r\n        return RemoteDepdencyValidator;\r\n    }());\r\n    exports.RemoteDepdencyValidator = RemoteDepdencyValidator;\r\n});\r\n//# sourceMappingURL=RemoteDepdencyValidator.js.map","define([\"require\", \"exports\", \"applicationinsights-common\", \"applicationinsights-core-js\"], function (require, exports, applicationinsights_common_1, applicationinsights_core_js_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var Serializer = /** @class */ (function () {\r\n        function Serializer(logger) {\r\n            this._logger = logger;\r\n        }\r\n        /**\r\n         * Serializes the current object to a JSON string.\r\n         */\r\n        Serializer.prototype.serialize = function (input) {\r\n            var output = this._serializeObject(input, \"root\");\r\n            return JSON.stringify(output);\r\n        };\r\n        Serializer.prototype._serializeObject = function (source, name) {\r\n            var circularReferenceCheck = \"__aiCircularRefCheck\";\r\n            var output = {};\r\n            if (!source) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.CannotSerializeObject, \"cannot serialize object because it is null or undefined\", { name: name }, true);\r\n                return output;\r\n            }\r\n            if (source[circularReferenceCheck]) {\r\n                this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.CircularReferenceDetected, \"Circular reference detected while serializing object\", { name: name }, true);\r\n                return output;\r\n            }\r\n            if (!source.aiDataContract) {\r\n                // special case for measurements/properties/tags\r\n                if (name === \"measurements\") {\r\n                    output = this._serializeStringMap(source, \"number\", name);\r\n                }\r\n                else if (name === \"properties\") {\r\n                    output = this._serializeStringMap(source, \"string\", name);\r\n                }\r\n                else if (name === \"tags\") {\r\n                    output = this._serializeStringMap(source, \"string\", name);\r\n                }\r\n                else if (applicationinsights_common_1.Util.isArray(source)) {\r\n                    output = this._serializeArray(source, name);\r\n                }\r\n                else {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.WARNING, applicationinsights_core_js_1._InternalMessageId.CannotSerializeObjectNonSerializable, \"Attempting to serialize an object which does not implement ISerializable\", { name: name }, true);\r\n                    try {\r\n                        // verify that the object can be stringified\r\n                        JSON.stringify(source);\r\n                        output = source;\r\n                    }\r\n                    catch (e) {\r\n                        // if serialization fails return an empty string\r\n                        this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.CannotSerializeObject, (e && typeof e.toString === 'function') ? e.toString() : \"Error serializing object\", null, true);\r\n                    }\r\n                }\r\n                return output;\r\n            }\r\n            source[circularReferenceCheck] = true;\r\n            for (var field in source.aiDataContract) {\r\n                var contract = source.aiDataContract[field];\r\n                var isRequired = (typeof contract === \"function\") ? (contract() & applicationinsights_common_1.FieldType.Required) : (contract & applicationinsights_common_1.FieldType.Required);\r\n                var isHidden = (typeof contract === \"function\") ? (contract() & applicationinsights_common_1.FieldType.Hidden) : (contract & applicationinsights_common_1.FieldType.Hidden);\r\n                var isArray = contract & applicationinsights_common_1.FieldType.Array;\r\n                var isPresent = source[field] !== undefined;\r\n                var isObject = typeof source[field] === \"object\" && source[field] !== null;\r\n                if (isRequired && !isPresent && !isArray) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.MissingRequiredFieldSpecification, \"Missing required field specification. The field is required but not present on source\", { field: field, name: name });\r\n                    // If not in debug mode, continue and hope the error is permissible\r\n                    continue;\r\n                }\r\n                if (isHidden) {\r\n                    // Don't serialize hidden fields\r\n                    continue;\r\n                }\r\n                var value;\r\n                if (isObject) {\r\n                    if (isArray) {\r\n                        // special case; resurse on each object in the source array\r\n                        value = this._serializeArray(source[field], field);\r\n                    }\r\n                    else {\r\n                        // recurse on the source object in this field\r\n                        value = this._serializeObject(source[field], field);\r\n                    }\r\n                }\r\n                else {\r\n                    // assign the source field to the output even if undefined or required\r\n                    value = source[field];\r\n                }\r\n                // only emit this field if the value is defined\r\n                if (value !== undefined) {\r\n                    output[field] = value;\r\n                }\r\n            }\r\n            delete source[circularReferenceCheck];\r\n            return output;\r\n        };\r\n        Serializer.prototype._serializeArray = function (sources, name) {\r\n            var output = undefined;\r\n            if (!!sources) {\r\n                if (!applicationinsights_common_1.Util.isArray(sources)) {\r\n                    this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, applicationinsights_core_js_1._InternalMessageId.ItemNotInArray, \"This field was specified as an array in the contract but the item is not an array.\\r\\n\", { name: name }, true);\r\n                }\r\n                else {\r\n                    output = [];\r\n                    for (var i = 0; i < sources.length; i++) {\r\n                        var source = sources[i];\r\n                        var item = this._serializeObject(source, name + \"[\" + i + \"]\");\r\n                        output.push(item);\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n        Serializer.prototype._serializeStringMap = function (map, expectedType, name) {\r\n            var output = undefined;\r\n            if (map) {\r\n                output = {};\r\n                for (var field in map) {\r\n                    var value = map[field];\r\n                    if (expectedType === \"string\") {\r\n                        if (value === undefined) {\r\n                            output[field] = \"undefined\";\r\n                        }\r\n                        else if (value === null) {\r\n                            output[field] = \"null\";\r\n                        }\r\n                        else if (!value.toString) {\r\n                            output[field] = \"invalid field: toString() is not defined.\";\r\n                        }\r\n                        else {\r\n                            output[field] = value.toString();\r\n                        }\r\n                    }\r\n                    else if (expectedType === \"number\") {\r\n                        if (value === undefined) {\r\n                            output[field] = \"undefined\";\r\n                        }\r\n                        else if (value === null) {\r\n                            output[field] = \"null\";\r\n                        }\r\n                        else {\r\n                            var num = parseFloat(value);\r\n                            if (isNaN(num)) {\r\n                                output[field] = \"NaN\";\r\n                            }\r\n                            else {\r\n                                output[field] = num;\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        output[field] = \"invalid field: \" + name + \" is of unknown type.\";\r\n                        this._logger.throwInternal(applicationinsights_core_js_1.LoggingSeverity.CRITICAL, output[field], null, true);\r\n                    }\r\n                }\r\n            }\r\n            return output;\r\n        };\r\n        return Serializer;\r\n    }());\r\n    exports.Serializer = Serializer;\r\n});\r\n//# sourceMappingURL=Serializer.js.map","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * @description Monitors browser for offline events\r\n     * @export default - Offline: Static instance of OfflineListener\r\n     * @class OfflineListener\r\n     */\r\n    var OfflineListener = /** @class */ (function () {\r\n        function OfflineListener() {\r\n            this._onlineStatus = true;\r\n            if (window && window.addEventListener) {\r\n                window.addEventListener('online', this._setOnline.bind(this), false);\r\n                window.addEventListener('offline', this._setOffline.bind(this), false);\r\n                this.isListening = true;\r\n            }\r\n            else if (document && document.body) {\r\n                document.body.ononline = this._setOnline.bind(this);\r\n                document.body.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else if (document) {\r\n                document.ononline = this._setOnline.bind(this);\r\n                document.onoffline = this._setOffline.bind(this);\r\n                this.isListening = true;\r\n            }\r\n            else {\r\n                // Could not find a place to add event listener\r\n                this.isListening = false;\r\n            }\r\n        }\r\n        OfflineListener.prototype._setOnline = function () {\r\n            this._onlineStatus = true;\r\n        };\r\n        OfflineListener.prototype._setOffline = function () {\r\n            this._onlineStatus = false;\r\n        };\r\n        OfflineListener.prototype.isOnline = function () {\r\n            if (this.isListening) {\r\n                return this._onlineStatus;\r\n            }\r\n            else if (navigator) {\r\n                return navigator.onLine;\r\n            }\r\n            else {\r\n                // Cannot determine online status - report as online\r\n                return true;\r\n            }\r\n        };\r\n        OfflineListener.prototype.isOffline = function () {\r\n            return !this.isOnline();\r\n        };\r\n        OfflineListener.Offline = new OfflineListener;\r\n        return OfflineListener;\r\n    }());\r\n    exports.OfflineListener = OfflineListener;\r\n    exports.Offline = OfflineListener.Offline;\r\n});\r\n//# sourceMappingURL=Offline.js.map"],"sourceRoot":""}